!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon41
ALT	kern/console.c	222;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cpuhog.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS = 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon42
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon42
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon42
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cpuhog.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
E1000_CTRL	kern/e1000.h	68;"	d
E1000_CTRL_DUP	kern/e1000.h	69;"	d
E1000_ICR	kern/e1000.h	88;"	d
E1000_IMS	kern/e1000.h	87;"	d
E1000_MAC_HIGH	kern/e1000.h	109;"	d
E1000_MAC_LOW	kern/e1000.h	108;"	d
E1000_MTA	kern/e1000.h	80;"	d
E1000_RAH	kern/e1000.h	79;"	d
E1000_RAH_AV	kern/e1000.h	110;"	d
E1000_RAL	kern/e1000.h	78;"	d
E1000_RCTL	kern/e1000.h	86;"	d
E1000_RCTL_BSIZE_2048	kern/e1000.h	115;"	d
E1000_RCTL_EN	kern/e1000.h	113;"	d
E1000_RCTL_LBM_NO	kern/e1000.h	114;"	d
E1000_RCTL_LPE_NO	kern/e1000.h	117;"	d
E1000_RCTL_SECRC	kern/e1000.h	116;"	d
E1000_RDBAH	kern/e1000.h	82;"	d
E1000_RDBAL	kern/e1000.h	81;"	d
E1000_RDH	kern/e1000.h	84;"	d
E1000_RDLEN	kern/e1000.h	83;"	d
E1000_RDT	kern/e1000.h	85;"	d
E1000_RXD_STATUS_DD	kern/e1000.h	120;"	d
E1000_RXD_STATUS_EOP	kern/e1000.h	121;"	d
E1000_RXT0	kern/e1000.h	124;"	d
E1000_STATUS	kern/e1000.h	70;"	d
E1000_TCTL	kern/e1000.h	76;"	d
E1000_TCTL_COLD	kern/e1000.h	94;"	d
E1000_TCTL_CT	kern/e1000.h	93;"	d
E1000_TCTL_EN	kern/e1000.h	91;"	d
E1000_TCTL_PSP	kern/e1000.h	92;"	d
E1000_TDBAH	kern/e1000.h	72;"	d
E1000_TDBAL	kern/e1000.h	71;"	d
E1000_TDH	kern/e1000.h	74;"	d
E1000_TDLEN	kern/e1000.h	73;"	d
E1000_TDT	kern/e1000.h	75;"	d
E1000_TIPG	kern/e1000.h	77;"	d
E1000_TIPG_IPGR1	kern/e1000.h	98;"	d
E1000_TIPG_IPGR2	kern/e1000.h	99;"	d
E1000_TIPG_IPGT	kern/e1000.h	97;"	d
E1000_TXD_DD	kern/e1000.h	104;"	d
E1000_TXD_DEXT	kern/e1000.h	102;"	d
E1000_TXD_EOP	kern/e1000.h	105;"	d
E1000_TXD_RS	kern/e1000.h	103;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING, \/\/ 1$/;"	e	enum:__anon5
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon5
ENV_HI_PRIORITY	inc/env.h	/^	ENV_HI_PRIORITY = 0,$/;"	e	enum:EnvPriority
ENV_LOW_PRIORITY	inc/env.h	/^	ENV_LOW_PRIORITY$/;"	e	enum:EnvPriority
ENV_MED_PRIORITY	inc/env.h	/^	ENV_MED_PRIORITY,$/;"	e	enum:EnvPriority
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE \/\/ 4$/;"	e	enum:__anon5
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE, \/\/ 2$/;"	e	enum:__anon5
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING, \/\/ 3$/;"	e	enum:__anon5
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^    ENV_TYPE_NS         \/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon3
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_E1000_RXBUF_EMPTY	inc/error.h	/^	E_E1000_RXBUF_EMPTY, \/\/ Receive buffer empty$/;"	e	enum:__anon3
E_E1000_TXBUF_FULL	inc/error.h	/^	E_E1000_TXBUF_FULL, \/\/ Transmission buffer full$/;"	e	enum:__anon3
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon3
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon3
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon3
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon3
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon3
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon3
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvPriority	inc/env.h	/^enum EnvPriority {$/;"	g
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon7
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon7
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon7
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon7
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon7
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon7
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon7
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon7
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
INT_MAX	inc/types.h	8;"	d
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon11	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon15
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon15
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon15
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon15
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon15
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon15
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon15
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon13
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon15
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	51;"	d
MAXARGS	kern/monitor.c	229;"	d	file:
MAXARGS	obj/kern/kernel.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	24;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon8	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon12
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon39
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon40
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon40
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	45;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon11	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	37;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NELEM_MTA	kern/e1000.h	13;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	311;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	218;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NRXDESC	kern/e1000.h	11;"	d
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon1
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon1
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon1
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon1
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon1
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon1
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon1
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon1
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon1
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon1
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon1
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon1
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon6
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon11	file:
NTXDESC	kern/e1000.h	10;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	149;"	d
O_CREAT	inc/lib.h	151;"	d
O_EXCL	inc/lib.h	153;"	d
O_MKDIR	inc/lib.h	154;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	146;"	d
O_RDWR	inc/lib.h	148;"	d
O_TRUNC	inc/lib.h	152;"	d
O_WRONLY	inc/lib.h	147;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 17 18:30:59 EST 2014$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon29
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon29
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon30
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon30
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon29
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon30
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon30
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon29
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_NETWORK	kern/e1000.h	8;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_NETWORK	kern/e1000.h	7;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon14	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon14	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon14	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon14	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon14	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon14	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon14	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon13
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon13
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon13
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon13
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon13
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon13
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon13
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PKT_BUF_SIZE	kern/e1000.h	15;"	d
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon14	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	85;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	GNUmakefile	/^QEMU = \/home\/someone\/workspace\/qemu\/build\/bin\/qemu-system-i386$/;"	m
QEMU	conf/env.mk	/^QEMU=\/home\/anton\/workspace\/qemu\/install\/bin\/qemu-system-i386$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	60;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	66;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	215;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon6
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon6
SYS_e1000_receive	inc/syscall.h	/^	SYS_e1000_receive,$/;"	e	enum:__anon6
SYS_e1000_transmit	inc/syscall.h	/^	SYS_e1000_transmit,$/;"	e	enum:__anon6
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon6
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon6
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon6
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon6
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon6
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon6
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon6
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon6
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon6
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon6
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon6
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon6
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon6
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon11	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = $/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	228;"	d	file:
WHITESPACE	obj/kern/kernel.asm	/^#define WHITESPACE "\\t\\r\\n "$/;"	d
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	214;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/cpuhog.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon24
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon35	typeref:struct:netifapi_msg_msg::__anon35::__anon36
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^	uint64_t addr;$/;"	m	struct:rx_desc
addr	kern/e1000.h	/^	uint64_t addr;$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cpuhog.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cpuhog.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon21::__anon25
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon31	typeref:struct:tcpip_msg::__anon31::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon31::__anon34
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/cpuhog.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon21::__anon28
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0;$/;"	d
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/fs/fs.asm	/^      base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^      base = 8;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^      base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^      base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/net/testoutput.asm	/^      base = 8;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^      base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^      base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^      base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^      base = 8;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^      base = 8;$/;"	d
base	obj/user/cpuhog.asm	/^			base = 10;$/;"	d
base	obj/user/cpuhog.asm	/^			base = 16;$/;"	d
base	obj/user/cpuhog.asm	/^		base = 10;$/;"	d
base	obj/user/cpuhog.asm	/^      base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^      base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^      base = 8;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^      base = 8;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^      base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^      base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^      base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^      base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^      base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^      base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^      base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^      base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^      base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^      base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^      base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^      base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^      base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^      base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^      base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^      base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^      base = 8;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^      base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^      base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^      base = 8;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^      base = 8;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^      base = 8;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^      base = 8;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^      base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^      base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^      base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^      base = 8;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^      base = 8;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^      base = 8;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^      base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^      base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^      base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^      base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^      base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^      base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^      base = 8;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^      base = 8;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^      base = 8;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^      base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^      base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^      base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^      base = 8;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^      base = 8;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^      base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^      base = 8;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon23
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/cpuhog.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon43	file:
buf	kern/e1000.h	/^	char buf[PKT_BUF_SIZE];$/;"	m	struct:packet
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon12
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cpuhog.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cpuhog.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^		c = sys_cgetc();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon31	typeref:struct:tcpip_msg::__anon31::__anon33
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cpuhog.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/cpuhog.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_ip_src	obj/net/ns.asm	/^        check_ip_src = 0;$/;"	d
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^		child = spawnl("\/sh", "sh", (char*)0);$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_envid	obj/net/ns.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/net/testinput.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/net/testoutput.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/forktree.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/pingpong.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/pingpongs.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/primes.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/primespipe.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/sendpage.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/sh.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/spin.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/stresssched.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testfdsharing.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testpipe.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testpiperace.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testpiperace2.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testpteshare.asm	/^	child_envid = sys_exofork();$/;"	d
child_envid	obj/user/testshell.asm	/^	child_envid = sys_exofork();$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^	uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/cpuhog.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon35	typeref:struct:netifapi_msg_msg::__anon35::__anon37
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon43	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *ethdst_addr,$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *hwdst_addr, const struct ip_addr *ipdst_addr,$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *hwsrc_addr, const struct ip_addr *ipsrc_addr,$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cpuhog.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cpuhog.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
continue_exec	kern/monitor.c	/^continue_exec(int argc, char **argv, struct Trapframe *tf)$/;"	f
convert_to_binary	kern/monitor.c	/^convert_to_binary(uint32_t raw_binary)$/;"	f
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon18::__anon19	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^	uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^	uint8_t css;$/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon10
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon10	typeref:struct:cstate::__anon10::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon31::__anon33
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
current_ebp	obj/kern/kernel.asm	/^    current_ebp = prev_ebp;$/;"	d
current_ebp	obj/kern/kernel.asm	/^  current_ebp = read_ebp();$/;"	d
custom_wait	user/sh.c	/^custom_wait(envid_t envid)$/;"	f
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/cpuhog.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon9
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon21::__anon25
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/cpuhog.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^  const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cpuhog.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cpuhog.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cpuhog.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon12
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cpuhog.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000_receive	kern/e1000.c	/^e1000_receive(char* pkt, size_t *length)$/;"	f
e1000_transmit	kern/e1000.c	/^e1000_transmit(char* pkt, size_t length)$/;"	f
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
end_ptr	obj/kern/kernel.asm	/^  end_ptr = argv[2] + strlen(argv[2]) + 1;$/;"	d
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type, enum EnvPriority priority)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = &envs[0];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_retcode	inc/env.h	/^	int env_retcode;$/;"	m	struct:Env
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/cpuhog.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^  	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/cpuhog.asm	/^				err = -err;$/;"	d
err	obj/user/cpuhog.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cpuhog.asm	/^    err:$/;"	l
err	obj/user/cpuhog.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/cpuhog.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/cpuhog.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/cpuhog.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000.h	/^	uint8_t errors;$/;"	m	struct:rx_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon35::__anon37
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethhdr	obj/net/ns.asm	/^  ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exception_stack_top	obj/kern/kernel.asm	/^		exception_stack_top = UXSTACKTOP - sizeof(struct UTrapframe);$/;"	d
exception_stack_top	obj/kern/kernel.asm	/^		exception_stack_top = tf->tf_esp - sizeof(struct UTrapframe) - 4;$/;"	d
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(int retcode)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon31::__anon33
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 90 12 00       	mov    $0x129000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 80 12 f0       	mov    $0xf0128000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 ad 00 00 00       	call   f01000eb <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_paddr>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100049	obj/kern/kernel.asm	/^f0100049:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010004e	obj/kern/kernel.asm	/^f010004e:	77 21                	ja     f0100071 <_paddr+0x31>$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	c7 44 24 08 c0 a7 10 	movl   $0xf010a7c0,0x8(%esp)$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	f0 $/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010006c	obj/kern/kernel.asm	/^f010006c:	e8 91 02 00 00       	call   f0100302 <_panic>$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	c9                   	leave  $/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	c3                   	ret    $/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b <_kaddr>:$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	55                   	push   %ebp$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	89 e5                	mov    %esp,%ebp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	89 c2                	mov    %eax,%edx$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	39 c2                	cmp    %eax,%edx$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	72 21                	jb     f01000b3 <_kaddr+0x38>$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	c7 44 24 08 e4 a7 10 	movl   $0xf010a7e4,0x8(%esp)$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	f0 $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	e8 4f 02 00 00       	call   f0100302 <_panic>$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	c9                   	leave  $/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	c3                   	ret    $/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd <xchg>:$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	55                   	push   %ebp$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	89 e5                	mov    %esp,%ebp$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000c3	obj/kern/kernel.asm	/^f01000c3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01000d2	obj/kern/kernel.asm	/^f01000d2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	c9                   	leave  $/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c3                   	ret    $/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7 <lock_kernel>:$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	55                   	push   %ebp$/;"	l
f01000d8	obj/kern/kernel.asm	/^f01000d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	c7 04 24 00 a6 12 f0 	movl   $0xf012a600,(%esp)$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	e8 14 92 00 00       	call   f01092fd <spin_lock>$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	c9                   	leave  $/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	c3                   	ret    $/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb <i386_init>:$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	55                   	push   %ebp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	ba 40 2a 38 f0       	mov    $0xf0382a40,%edx$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	b8 86 f1 2e f0       	mov    $0xf02ef186,%eax$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	29 c2                	sub    %eax,%edx$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	89 d0                	mov    %edx,%eax$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	00 $/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	c7 04 24 86 f1 2e f0 	movl   $0xf02ef186,(%esp)$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	e8 a3 84 00 00       	call   f01085ba <memset>$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	e8 77 0a 00 00       	call   f0100b93 <cons_init>$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	00 $/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	c7 04 24 07 a8 10 f0 	movl   $0xf010a807,(%esp)$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	e8 0f 52 00 00       	call   f010533f <cprintf>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 64 16 00 00       	call   f0101799 <mem_init>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	e8 8c 45 00 00       	call   f01046c6 <env_init>$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	e8 92 52 00 00       	call   f01053d1 <trap_init>$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	e8 65 8b 00 00       	call   f0108ca9 <mp_init>$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	e8 af 8d 00 00       	call   f0108ef8 <lapic_init>$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	e8 81 4f 00 00       	call   f01050cf <pic_init>$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	e8 27 a3 00 00       	call   f010a47a <time_init>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 f2 a2 00 00       	call   f010a44a <pci_init>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	e8 7a ff ff ff       	call   f01000d7 <lock_kernel>$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	e8 42 00 00 00       	call   f01001a4 <boot_aps>$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	00 $/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	00 $/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	c7 04 24 1e bb 1f f0 	movl   $0xf01fbb1e,(%esp)$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	e8 58 4b 00 00       	call   f0104cd6 <env_create>$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	00 $/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	00 $/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	c7 04 24 c1 66 24 f0 	movl   $0xf02466c1,(%esp)$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	e8 3c 4b 00 00       	call   f0104cd6 <env_create>$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	e8 ea 08 00 00       	call   f0100a89 <kbd_intr>$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	e8 c9 68 00 00       	call   f0106a6d <sched_yield>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4 <boot_aps>:$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	55                   	push   %ebp$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	c7 44 24 08 00 70 00 	movl   $0x7000,0x8(%esp)$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	00 $/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	00 $/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	c7 04 24 22 a8 10 f0 	movl   $0xf010a822,(%esp)$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	e8 b5 fe ff ff       	call   f010007b <_kaddr>$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	ba 86 89 10 f0       	mov    $0xf0108986,%edx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	b8 0c 89 10 f0       	mov    $0xf010890c,%eax$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	29 c2                	sub    %eax,%edx$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	89 d0                	mov    %edx,%eax$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	c7 44 24 04 0c 89 10 	movl   $0xf010890c,0x4(%esp)$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	f0 $/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	e8 3a 84 00 00       	call   f0108628 <memmove>$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	c7 45 f4 20 10 2f f0 	movl   $0xf02f1020,-0xc(%ebp)$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	eb 79                	jmp    f0100270 <boot_aps+0xcc>$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	e8 86 8e 00 00       	call   f0109082 <cpunum>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	75 02                	jne    f010020b <boot_aps+0x67>$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	eb 61                	jmp    f010026c <boot_aps+0xc8>$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	b8 20 10 2f f0       	mov    $0xf02f1020,%eax$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	29 c2                	sub    %eax,%edx$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	89 d0                	mov    %edx,%eax$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	05 00 20 2f f0       	add    $0xf02f2000,%eax$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	a3 24 0f 2f f0       	mov    %eax,0xf02f0f24$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	00 $/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	c7 04 24 22 a8 10 f0 	movl   $0xf010a822,(%esp)$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	e8 f5 fd ff ff       	call   f0100040 <_paddr>$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	e8 6e 8e 00 00       	call   f01090ce <lapic_startap>$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	90                   	nop$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	75 f5                	jne    f0100261 <boot_aps+0xbd>$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	83 45 f4 74          	addl   $0x74,-0xc(%ebp)$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	a1 c4 13 2f f0       	mov    0xf02f13c4,%eax$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	0f 87 71 ff ff ff    	ja     f01001f7 <boot_aps+0x53>$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	c9                   	leave  $/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	c3                   	ret    $/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288 <mp_main>:$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	55                   	push   %ebp$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	89 e5                	mov    %esp,%ebp$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	00 $/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	c7 04 24 22 a8 10 f0 	movl   $0xf010a822,(%esp)$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	e8 95 fd ff ff       	call   f0100040 <_paddr>$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	e8 c9 8d 00 00       	call   f0109082 <cpunum>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	c7 04 24 2e a8 10 f0 	movl   $0xf010a82e,(%esp)$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	e8 76 50 00 00       	call   f010533f <cprintf>$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	e8 2a 8c 00 00       	call   f0108ef8 <lapic_init>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	e8 c1 44 00 00       	call   f0104794 <env_init_percpu>$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	e8 6d 5d 00 00       	call   f0106045 <trap_init_percpu>$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	e8 a5 8d 00 00       	call   f0109082 <cpunum>$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	83 c0 04             	add    $0x4,%eax$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	00 $/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	e8 c5 fd ff ff       	call   f01000bd <xchg>$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	e8 da fd ff ff       	call   f01000d7 <lock_kernel>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	e8 6b 67 00 00       	call   f0106a6d <sched_yield>$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302 <_panic>:$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	55                   	push   %ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 e5                	mov    %esp,%ebp$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	a1 20 0f 2f f0       	mov    0xf02f0f20,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	85 c0                	test   %eax,%eax$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	74 02                	je     f0100313 <_panic+0x11>$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	eb 51                	jmp    f0100364 <_panic+0x62>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	a3 20 0f 2f f0       	mov    %eax,0xf02f0f20$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	fa                   	cli    $/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	fc                   	cld    $/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	e8 5a 8d 00 00       	call   f0109082 <cpunum>$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	c7 04 24 44 a8 10 f0 	movl   $0xf010a844,(%esp)$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	e8 f9 4f 00 00       	call   f010533f <cprintf>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	e8 b4 4f 00 00       	call   f010530c <vcprintf>$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	c7 04 24 66 a8 10 f0 	movl   $0xf010a866,(%esp)$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	e8 db 4f 00 00       	call   f010533f <cprintf>$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	e8 20 11 00 00       	call   f0101490 <monitor>$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	eb f2                	jmp    f0100364 <_panic+0x62>$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372 <_warn>:$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	55                   	push   %ebp$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 e5                	mov    %esp,%ebp$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	c7 04 24 68 a8 10 f0 	movl   $0xf010a868,(%esp)$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	e8 a7 4f 00 00       	call   f010533f <cprintf>$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	e8 62 4f 00 00       	call   f010530c <vcprintf>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	c7 04 24 66 a8 10 f0 	movl   $0xf010a866,(%esp)$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	e8 89 4f 00 00       	call   f010533f <cprintf>$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	c9                   	leave  $/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	c3                   	ret    $/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8 <delay>:$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	55                   	push   %ebp$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	c7 45 fc 84 00 00 00 	movl   $0x84,-0x4(%ebp)$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	89 c2                	mov    %eax,%edx$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	ec                   	in     (%dx),%al$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	c7 45 f4 84 00 00 00 	movl   $0x84,-0xc(%ebp)$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	89 c2                	mov    %eax,%edx$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	ec                   	in     (%dx),%al$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	c7 45 ec 84 00 00 00 	movl   $0x84,-0x14(%ebp)$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	89 c2                	mov    %eax,%edx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	ec                   	in     (%dx),%al$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	c7 45 e4 84 00 00 00 	movl   $0x84,-0x1c(%ebp)$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	89 c2                	mov    %eax,%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	ec                   	in     (%dx),%al$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	c9                   	leave  $/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	c3                   	ret    $/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400 <serial_proc_data>:$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	55                   	push   %ebp$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	89 e5                	mov    %esp,%ebp$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	c7 45 fc fd 03 00 00 	movl   $0x3fd,-0x4(%ebp)$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	89 c2                	mov    %eax,%edx$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	ec                   	in     (%dx),%al$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	85 c0                	test   %eax,%eax$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	75 07                	jne    f010042b <serial_proc_data+0x2b>$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	eb 17                	jmp    f0100442 <serial_proc_data+0x42>$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	c7 45 f4 f8 03 00 00 	movl   $0x3f8,-0xc(%ebp)$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	89 c2                	mov    %eax,%edx$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	ec                   	in     (%dx),%al$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c9                   	leave  $/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	c3                   	ret    $/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444 <serial_intr>:$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	55                   	push   %ebp$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	89 e5                	mov    %esp,%ebp$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	0f b6 05 00 00 2f f0 	movzbl 0xf02f0000,%eax$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	84 c0                	test   %al,%al$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	74 0c                	je     f0100461 <serial_intr+0x1d>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	c7 04 24 00 04 10 f0 	movl   $0xf0100400,(%esp)$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	e8 60 06 00 00       	call   f0100ac1 <cons_intr>$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	c9                   	leave  $/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	c3                   	ret    $/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463 <serial_putc>:$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	55                   	push   %ebp$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	89 e5                	mov    %esp,%ebp$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	eb 09                	jmp    f010047b <serial_putc+0x18>$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	e8 41 ff ff ff       	call   f01003b8 <delay>$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	c7 45 f8 fd 03 00 00 	movl   $0x3fd,-0x8(%ebp)$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	89 c2                	mov    %eax,%edx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	ec                   	in     (%dx),%al$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 e0 20             	and    $0x20,%eax$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	85 c0                	test   %eax,%eax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	75 09                	jne    f01004a2 <serial_putc+0x3f>$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	7e d0                	jle    f0100472 <serial_putc+0xf>$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	c7 45 f0 f8 03 00 00 	movl   $0x3f8,-0x10(%ebp)$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ee                   	out    %al,(%dx)$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	c9                   	leave  $/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	c3                   	ret    $/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc <serial_init>:$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	55                   	push   %ebp$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	83 ec 68             	sub    $0x68,%esp$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	c7 45 f4 fa 03 00 00 	movl   $0x3fa,-0xc(%ebp)$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	ee                   	out    %al,(%dx)$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	c7 45 ec fb 03 00 00 	movl   $0x3fb,-0x14(%ebp)$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	c6 45 eb 80          	movb   $0x80,-0x15(%ebp)$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	ee                   	out    %al,(%dx)$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	c7 45 e4 f8 03 00 00 	movl   $0x3f8,-0x1c(%ebp)$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	c6 45 e3 0c          	movb   $0xc,-0x1d(%ebp)$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	ee                   	out    %al,(%dx)$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	c7 45 dc f9 03 00 00 	movl   $0x3f9,-0x24(%ebp)$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	c6 45 db 00          	movb   $0x0,-0x25(%ebp)$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	0f b6 45 db          	movzbl -0x25(%ebp),%eax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	ee                   	out    %al,(%dx)$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	c7 45 d4 fb 03 00 00 	movl   $0x3fb,-0x2c(%ebp)$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	c6 45 d3 03          	movb   $0x3,-0x2d(%ebp)$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	ee                   	out    %al,(%dx)$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	c7 45 cc fc 03 00 00 	movl   $0x3fc,-0x34(%ebp)$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	c6 45 cb 00          	movb   $0x0,-0x35(%ebp)$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	ee                   	out    %al,(%dx)$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	c7 45 c4 f9 03 00 00 	movl   $0x3f9,-0x3c(%ebp)$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	c6 45 c3 01          	movb   $0x1,-0x3d(%ebp)$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	0f b6 45 c3          	movzbl -0x3d(%ebp),%eax$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	ee                   	out    %al,(%dx)$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	c7 45 bc fd 03 00 00 	movl   $0x3fd,-0x44(%ebp)$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	89 c2                	mov    %eax,%edx$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	ec                   	in     (%dx),%al$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	88 45 bb             	mov    %al,-0x45(%ebp)$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	0f b6 45 bb          	movzbl -0x45(%ebp),%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	3c ff                	cmp    $0xff,%al$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	0f 95 c0             	setne  %al$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	a2 00 00 2f f0       	mov    %al,0xf02f0000$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	c7 45 b4 fa 03 00 00 	movl   $0x3fa,-0x4c(%ebp)$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	89 c2                	mov    %eax,%edx$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	ec                   	in     (%dx),%al$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	88 45 b3             	mov    %al,-0x4d(%ebp)$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	c7 45 ac f8 03 00 00 	movl   $0x3f8,-0x54(%ebp)$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	89 c2                	mov    %eax,%edx$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	ec                   	in     (%dx),%al$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	88 45 ab             	mov    %al,-0x55(%ebp)$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	0f b6 05 00 00 2f f0 	movzbl 0xf02f0000,%eax$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	84 c0                	test   %al,%al$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	74 17                	je     f01005a7 <serial_init+0xeb>$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	0f b7 05 ee a5 12 f0 	movzwl 0xf012a5ee,%eax$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	e8 63 4c 00 00       	call   f010520a <irq_setmask_8259A>$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	c9                   	leave  $/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	c3                   	ret    $/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9 <lpt_putc>:$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	55                   	push   %ebp$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	83 ec 30             	sub    $0x30,%esp$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	eb 09                	jmp    f01005c1 <lpt_putc+0x18>$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	e8 fb fd ff ff       	call   f01003b8 <delay>$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	c7 45 f8 79 03 00 00 	movl   $0x379,-0x8(%ebp)$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	89 c2                	mov    %eax,%edx$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	ec                   	in     (%dx),%al$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	84 c0                	test   %al,%al$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	78 09                	js     f01005e2 <lpt_putc+0x39>$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	7e d6                	jle    f01005b8 <lpt_putc+0xf>$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	c7 45 f0 78 03 00 00 	movl   $0x378,-0x10(%ebp)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	ee                   	out    %al,(%dx)$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	c7 45 e8 7a 03 00 00 	movl   $0x37a,-0x18(%ebp)$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	c6 45 e7 0d          	movb   $0xd,-0x19(%ebp)$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	ee                   	out    %al,(%dx)$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	c7 45 e0 7a 03 00 00 	movl   $0x37a,-0x20(%ebp)$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	c6 45 df 08          	movb   $0x8,-0x21(%ebp)$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	ee                   	out    %al,(%dx)$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	c9                   	leave  $/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	c3                   	ret    $/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622 <cga_init>:$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	55                   	push   %ebp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	89 e5                	mov    %esp,%ebp$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	83 ec 30             	sub    $0x30,%esp$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	c7 45 fc 00 80 0b f0 	movl   $0xf00b8000,-0x4(%ebp)$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	74 13                	je     f0100660 <cga_init+0x3e>$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	c7 45 fc 00 00 0b f0 	movl   $0xf00b0000,-0x4(%ebp)$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	c7 05 04 00 2f f0 b4 	movl   $0x3b4,0xf02f0004$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	03 00 00 $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	eb 14                	jmp    f0100674 <cga_init+0x52>$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	66 89 10             	mov    %dx,(%eax)$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	c7 05 04 00 2f f0 d4 	movl   $0x3d4,0xf02f0004$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	03 00 00 $/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c6 45 ef 0e          	movb   $0xe,-0x11(%ebp)$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	ee                   	out    %al,(%dx)$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 c2                	mov    %eax,%edx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ec                   	in     (%dx),%al$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	c6 45 df 0f          	movb   $0xf,-0x21(%ebp)$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	ee                   	out    %al,(%dx)$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	83 c0 01             	add    $0x1,%eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	89 c2                	mov    %eax,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	ec                   	in     (%dx),%al$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	88 45 d7             	mov    %al,-0x29(%ebp)$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	a3 08 00 2f f0       	mov    %eax,0xf02f0008$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	66 a3 0c 00 2f f0    	mov    %ax,0xf02f000c$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	c9                   	leave  $/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	c3                   	ret    $/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee <cga_putc>:$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	55                   	push   %ebp$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	53                   	push   %ebx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	83 ec 44             	sub    $0x44,%esp$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b0 00                	mov    $0x0,%al$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	85 c0                	test   %eax,%eax$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	75 07                	jne    f0100705 <cga_putc+0x17>$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	0f 84 ac 00 00 00    	je     f01007c0 <cga_putc+0xd2>$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	7f 0a                	jg     f0100723 <cga_putc+0x35>$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	74 14                	je     f0100732 <cga_putc+0x44>$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	e9 db 00 00 00       	jmp    f01007fe <cga_putc+0x110>$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	74 4e                	je     f0100776 <cga_putc+0x88>$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	74 59                	je     f0100786 <cga_putc+0x98>$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	e9 cc 00 00 00       	jmp    f01007fe <cga_putc+0x110>$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	66 85 c0             	test   %ax,%ax$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	74 33                	je     f0100771 <cga_putc+0x83>$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	66 a3 0c 00 2f f0    	mov    %ax,0xf02f000c$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	a1 08 00 2f f0       	mov    0xf02f0008,%eax$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	0f b7 15 0c 00 2f f0 	movzwl 0xf02f000c,%edx$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	01 d2                	add    %edx,%edx$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	01 c2                	add    %eax,%edx$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	b0 00                	mov    $0x0,%al$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	83 c8 20             	or     $0x20,%eax$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	66 89 02             	mov    %ax,(%edx)$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	e9 b3 00 00 00       	jmp    f0100824 <cga_putc+0x136>$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	e9 ae 00 00 00       	jmp    f0100824 <cga_putc+0x136>$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	83 c0 50             	add    $0x50,%eax$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	66 a3 0c 00 2f f0    	mov    %ax,0xf02f000c$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	0f b7 1d 0c 00 2f f0 	movzwl 0xf02f000c,%ebx$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	0f b7 0d 0c 00 2f f0 	movzwl 0xf02f000c,%ecx$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	0f b7 c1             	movzwl %cx,%eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	89 c2                	mov    %eax,%edx$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	89 d0                	mov    %edx,%eax$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	01 d0                	add    %edx,%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	29 c1                	sub    %eax,%ecx$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	89 ca                	mov    %ecx,%edx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	89 d8                	mov    %ebx,%eax$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	29 d0                	sub    %edx,%eax$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	66 a3 0c 00 2f f0    	mov    %ax,0xf02f000c$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	eb 64                	jmp    f0100824 <cga_putc+0x136>$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	e8 9e 03 00 00       	call   f0100b6a <cons_putc>$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	e8 92 03 00 00       	call   f0100b6a <cons_putc>$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	e8 86 03 00 00       	call   f0100b6a <cons_putc>$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	e8 7a 03 00 00       	call   f0100b6a <cons_putc>$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	e8 6e 03 00 00       	call   f0100b6a <cons_putc>$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	eb 26                	jmp    f0100824 <cga_putc+0x136>$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	8b 0d 08 00 2f f0    	mov    0xf02f0008,%ecx$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	66 89 15 0c 00 2f f0 	mov    %dx,0xf02f000c$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	01 c0                	add    %eax,%eax$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	66 89 02             	mov    %ax,(%edx)$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	90                   	nop$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	76 5b                	jbe    f010088c <cga_putc+0x19e>$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	a1 08 00 2f f0       	mov    0xf02f0008,%eax$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	a1 08 00 2f f0       	mov    0xf02f0008,%eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	00 $/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	e8 d3 7d 00 00       	call   f0108628 <memmove>$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	eb 15                	jmp    f0100873 <cga_putc+0x185>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	a1 08 00 2f f0       	mov    0xf02f0008,%eax$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	01 d2                	add    %edx,%edx$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	01 d0                	add    %edx,%eax$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	7e e2                	jle    f010085e <cga_putc+0x170>$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	83 e8 50             	sub    $0x50,%eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	66 a3 0c 00 2f f0    	mov    %ax,0xf02f000c$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	c6 45 ef 0e          	movb   $0xe,-0x11(%ebp)$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	ee                   	out    %al,(%dx)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	8b 15 04 00 2f f0    	mov    0xf02f0004,%edx$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	ee                   	out    %al,(%dx)$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	a1 04 00 2f f0       	mov    0xf02f0004,%eax$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	c6 45 df 0f          	movb   $0xf,-0x21(%ebp)$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	ee                   	out    %al,(%dx)$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	0f b7 05 0c 00 2f f0 	movzwl 0xf02f000c,%eax$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	8b 15 04 00 2f f0    	mov    0xf02f0004,%edx$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	88 45 d7             	mov    %al,-0x29(%ebp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	ee                   	out    %al,(%dx)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	83 c4 44             	add    $0x44,%esp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	5b                   	pop    %ebx$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	5d                   	pop    %ebp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	c3                   	ret    $/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900 <kbd_proc_data>:$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	55                   	push   %ebp$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	89 e5                	mov    %esp,%ebp$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	89 c2                	mov    %eax,%edx$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	ec                   	in     (%dx),%al$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	85 c0                	test   %eax,%eax$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	75 0a                	jne    f010092e <kbd_proc_data+0x2e>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	e9 59 01 00 00       	jmp    f0100a87 <kbd_proc_data+0x187>$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	c7 45 e4 60 00 00 00 	movl   $0x60,-0x1c(%ebp)$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	89 c2                	mov    %eax,%edx$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	ec                   	in     (%dx),%al$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	75 17                	jne    f0100962 <kbd_proc_data+0x62>$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	a3 28 02 2f f0       	mov    %eax,0xf02f0228$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	e9 25 01 00 00       	jmp    f0100a87 <kbd_proc_data+0x187>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	84 c0                	test   %al,%al$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	79 47                	jns    f01009b1 <kbd_proc_data+0xb1>$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	83 e0 40             	and    $0x40,%eax$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	85 c0                	test   %eax,%eax$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	75 09                	jne    f010097f <kbd_proc_data+0x7f>$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	eb 04                	jmp    f0100983 <kbd_proc_data+0x83>$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	0f b6 80 00 a0 12 f0 	movzbl -0xfed6000(%eax),%eax$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	f7 d0                	not    %eax$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	89 c2                	mov    %eax,%edx$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	21 d0                	and    %edx,%eax$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	a3 28 02 2f f0       	mov    %eax,0xf02f0228$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	e9 d6 00 00 00       	jmp    f0100a87 <kbd_proc_data+0x187>$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	83 e0 40             	and    $0x40,%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	85 c0                	test   %eax,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	74 11                	je     f01009ce <kbd_proc_data+0xce>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	a3 28 02 2f f0       	mov    %eax,0xf02f0228$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	0f b6 80 00 a0 12 f0 	movzbl -0xfed6000(%eax),%eax$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	09 d0                	or     %edx,%eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	a3 28 02 2f f0       	mov    %eax,0xf02f0228$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	0f b6 80 00 a1 12 f0 	movzbl -0xfed5f00(%eax),%eax$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	31 d0                	xor    %edx,%eax$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	a3 28 02 2f f0       	mov    %eax,0xf02f0228$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 e0 03             	and    $0x3,%eax$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	8b 14 85 00 a5 12 f0 	mov    -0xfed5b00(,%eax,4),%edx$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	01 d0                	add    %edx,%eax$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	83 e0 08             	and    $0x8,%eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	85 c0                	test   %eax,%eax$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	74 22                	je     f0100a4e <kbd_proc_data+0x14e>$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	7e 0c                	jle    f0100a3e <kbd_proc_data+0x13e>$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	7f 06                	jg     f0100a3e <kbd_proc_data+0x13e>$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	eb 10                	jmp    f0100a4e <kbd_proc_data+0x14e>$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	7e 0a                	jle    f0100a4e <kbd_proc_data+0x14e>$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	7f 04                	jg     f0100a4e <kbd_proc_data+0x14e>$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	a1 28 02 2f f0       	mov    0xf02f0228,%eax$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	f7 d0                	not    %eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	85 c0                	test   %eax,%eax$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	75 28                	jne    f0100a84 <kbd_proc_data+0x184>$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	75 1f                	jne    f0100a84 <kbd_proc_data+0x184>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	c7 04 24 82 a8 10 f0 	movl   $0xf010a882,(%esp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	e8 ce 48 00 00       	call   f010533f <cprintf>$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	c7 45 dc 92 00 00 00 	movl   $0x92,-0x24(%ebp)$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	c6 45 db 03          	movb   $0x3,-0x25(%ebp)$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	0f b6 45 db          	movzbl -0x25(%ebp),%eax$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	ee                   	out    %al,(%dx)$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	c9                   	leave  $/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	c3                   	ret    $/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89 <kbd_intr>:$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	55                   	push   %ebp$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	c7 04 24 00 09 10 f0 	movl   $0xf0100900,(%esp)$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	e8 26 00 00 00       	call   f0100ac1 <cons_intr>$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	c9                   	leave  $/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	c3                   	ret    $/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d <kbd_init>:$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	55                   	push   %ebp$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	e8 e1 ff ff ff       	call   f0100a89 <kbd_intr>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	0f b7 05 ee a5 12 f0 	movzwl 0xf012a5ee,%eax$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	e8 4b 47 00 00       	call   f010520a <irq_setmask_8259A>$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	c9                   	leave  $/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	c3                   	ret    $/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1 <cons_intr>:$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	55                   	push   %ebp$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	eb 35                	jmp    f0100afe <cons_intr+0x3d>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	75 02                	jne    f0100ad1 <cons_intr+0x10>$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	eb 2d                	jmp    f0100afe <cons_intr+0x3d>$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	a1 24 02 2f f0       	mov    0xf02f0224,%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	89 15 24 02 2f f0    	mov    %edx,0xf02f0224$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	88 90 20 00 2f f0    	mov    %dl,-0xfd0ffe0(%eax)$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	a1 24 02 2f f0       	mov    0xf02f0224,%eax$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	75 0a                	jne    f0100afe <cons_intr+0x3d>$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	c7 05 24 02 2f f0 00 	movl   $0x0,0xf02f0224$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	00 00 00 $/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	ff d0                	call   *%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	75 bd                	jne    f0100ac9 <cons_intr+0x8>$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	c9                   	leave  $/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	c3                   	ret    $/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e <cons_getc>:$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	55                   	push   %ebp$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	e8 2b f9 ff ff       	call   f0100444 <serial_intr>$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	e8 6b ff ff ff       	call   f0100a89 <kbd_intr>$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	8b 15 20 02 2f f0    	mov    0xf02f0220,%edx$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	a1 24 02 2f f0       	mov    0xf02f0224,%eax$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	39 c2                	cmp    %eax,%edx$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	74 36                	je     f0100b63 <cons_getc+0x55>$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	a1 20 02 2f f0       	mov    0xf02f0220,%eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	89 15 20 02 2f f0    	mov    %edx,0xf02f0220$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	0f b6 80 20 00 2f f0 	movzbl -0xfd0ffe0(%eax),%eax$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	a1 20 02 2f f0       	mov    0xf02f0220,%eax$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	75 0a                	jne    f0100b5e <cons_getc+0x50>$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	c7 05 20 02 2f f0 00 	movl   $0x0,0xf02f0220$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	00 00 00 $/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	eb 05                	jmp    f0100b68 <cons_getc+0x5a>$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	c9                   	leave  $/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	c3                   	ret    $/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a <cons_putc>:$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	55                   	push   %ebp$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	e8 e8 f8 ff ff       	call   f0100463 <serial_putc>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	e8 23 fa ff ff       	call   f01005a9 <lpt_putc>$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	e8 5d fb ff ff       	call   f01006ee <cga_putc>$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	c9                   	leave  $/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	c3                   	ret    $/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93 <cons_init>:$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	55                   	push   %ebp$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	e8 84 fa ff ff       	call   f0100622 <cga_init>$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	e8 fa fe ff ff       	call   f0100a9d <kbd_init>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	e8 14 f9 ff ff       	call   f01004bc <serial_init>$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	0f b6 05 00 00 2f f0 	movzbl 0xf02f0000,%eax$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	83 f0 01             	xor    $0x1,%eax$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	84 c0                	test   %al,%al$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	74 0c                	je     f0100bc2 <cons_init+0x2f>$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	c7 04 24 8e a8 10 f0 	movl   $0xf010a88e,(%esp)$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	e8 7d 47 00 00       	call   f010533f <cprintf>$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	c9                   	leave  $/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c3                   	ret    $/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4 <cputchar>:$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	55                   	push   %ebp$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	e8 95 ff ff ff       	call   f0100b6a <cons_putc>$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	c9                   	leave  $/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	c3                   	ret    $/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7 <getchar>:$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	55                   	push   %ebp$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	e8 2c ff ff ff       	call   f0100b0e <cons_getc>$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	74 f2                	je     f0100bdd <getchar+0x6>$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	c9                   	leave  $/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	c3                   	ret    $/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0 <iscons>:$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	55                   	push   %ebp$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	5d                   	pop    %ebp$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	c3                   	ret    $/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa <continue_exec>:$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	55                   	push   %ebp$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	80 e4 fe             	and    $0xfe,%ah$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	89 c2                	mov    %eax,%edx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	5d                   	pop    %ebp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	c3                   	ret    $/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15 <single_step>:$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	55                   	push   %ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	80 cc 01             	or     $0x1,%ah$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 c2                	mov    %eax,%edx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	5d                   	pop    %ebp$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	c3                   	ret    $/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30 <setperms>:$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	55                   	push   %ebp$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	53                   	push   %ebx$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	e8 29 77 00 00       	call   f0108378 <strlen>$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	01 d8                	add    %ebx,%eax$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	00 $/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	e8 38 7b 00 00       	call   f01087ae <strtol>$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	e8 e7 76 00 00       	call   f0108378 <strlen>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	01 d8                	add    %ebx,%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	00 $/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	e8 f6 7a 00 00       	call   f01087ae <strtol>$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	00 $/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 6f 0f 00 00       	call   f0101c46 <pgdir_walk>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	75 13                	jne    f0100cf3 <setperms+0xc3>$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	c7 04 24 47 aa 10 f0 	movl   $0xf010aa47,(%esp)$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	e8 53 46 00 00       	call   f010533f <cprintf>$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	eb 6b                	jmp    f0100d5e <setperms+0x12e>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	81 65 f0 ff 0f 00 00 	andl   $0xfff,-0x10(%ebp)$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	8b 00                	mov    (%eax),%eax$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	89 c2                	mov    %eax,%edx$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	0b 45 f0             	or     -0x10(%ebp),%eax$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	89 c2                	mov    %eax,%edx$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	01 d0                	add    %edx,%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 c2                	mov    %eax,%edx$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	0b 45 f0             	or     -0x10(%ebp),%eax$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	89 c2                	mov    %eax,%edx$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	c7 04 24 5c aa 10 f0 	movl   $0xf010aa5c,(%esp)$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	e8 e6 45 00 00       	call   f010533f <cprintf>$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	83 c4 34             	add    $0x34,%esp$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	5b                   	pop    %ebx$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	5d                   	pop    %ebp$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	c3                   	ret    $/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64 <showmappings>:$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	55                   	push   %ebp$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	53                   	push   %ebx$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	e8 f5 75 00 00       	call   f0108378 <strlen>$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	01 d8                	add    %ebx,%eax$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	00 $/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	e8 04 7a 00 00       	call   f01087ae <strtol>$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	8b 00                	mov    (%eax),%eax$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	e8 b3 75 00 00       	call   f0108378 <strlen>$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	01 d8                	add    %ebx,%eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	8b 00                	mov    (%eax),%eax$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	00 $/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	e8 c2 79 00 00       	call   f01087ae <strtol>$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	e9 ef 01 00 00       	jmp    f0100fea <showmappings+0x286>$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	00 $/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	e8 2f 0e 00 00       	call   f0101c46 <pgdir_walk>$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	74 0c                	je     f0100e2c <showmappings+0xc8>$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	85 c0                	test   %eax,%eax$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	75 18                	jne    f0100e44 <showmappings+0xe0>$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	c7 04 24 89 aa 10 f0 	movl   $0xf010aa89,(%esp)$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	e8 00 45 00 00       	call   f010533f <cprintf>$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	e9 7e 01 00 00       	jmp    f0100fc2 <showmappings+0x25e>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	c7 04 24 a8 aa 10 f0 	movl   $0xf010aaa8,(%esp)$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	e8 da 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	c7 04 24 d1 aa 10 f0 	movl   $0xf010aad1,(%esp)$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	e8 c6 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	e9 27 01 00 00       	jmp    f0100fac <showmappings+0x248>$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	25 00 0e 00 00       	and    $0xe00,%eax$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	85 c0                	test   %eax,%eax$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	74 18                	je     f0100ea9 <showmappings+0x145>$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	c7 04 24 d3 aa 10 f0 	movl   $0xf010aad3,(%esp)$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	e8 a2 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	81 65 f4 ff f1 ff ff 	andl   $0xfffff1ff,-0xc(%ebp)$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	e9 ff 00 00 00       	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	85 c0                	test   %eax,%eax$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	74 18                	je     f0100ecd <showmappings+0x169>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	c7 04 24 d6 aa 10 f0 	movl   $0xf010aad6,(%esp)$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	e8 7e 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	81 65 f4 ff fe ff ff 	andl   $0xfffffeff,-0xc(%ebp)$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	e9 db 00 00 00       	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	85 c0                	test   %eax,%eax$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	74 18                	je     f0100ef1 <showmappings+0x18d>$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	c7 04 24 d8 aa 10 f0 	movl   $0xf010aad8,(%esp)$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	e8 5a 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	81 65 f4 7f ff ff ff 	andl   $0xffffff7f,-0xc(%ebp)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	e9 b7 00 00 00       	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	83 e0 40             	and    $0x40,%eax$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	85 c0                	test   %eax,%eax$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	74 15                	je     f0100f10 <showmappings+0x1ac>$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	c7 04 24 db aa 10 f0 	movl   $0xf010aadb,(%esp)$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	e8 38 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	83 65 f4 bf          	andl   $0xffffffbf,-0xc(%ebp)$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	e9 98 00 00 00       	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	83 e0 20             	and    $0x20,%eax$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	85 c0                	test   %eax,%eax$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	74 12                	je     f0100f2c <showmappings+0x1c8>$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	c7 04 24 dd aa 10 f0 	movl   $0xf010aadd,(%esp)$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	e8 19 44 00 00       	call   f010533f <cprintf>$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	83 65 f4 df          	andl   $0xffffffdf,-0xc(%ebp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	eb 7c                	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	83 e0 10             	and    $0x10,%eax$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	85 c0                	test   %eax,%eax$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	74 12                	je     f0100f48 <showmappings+0x1e4>$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	c7 04 24 df aa 10 f0 	movl   $0xf010aadf,(%esp)$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	e8 fd 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	83 65 f4 ef          	andl   $0xffffffef,-0xc(%ebp)$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	eb 60                	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	83 e0 08             	and    $0x8,%eax$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	85 c0                	test   %eax,%eax$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	74 12                	je     f0100f64 <showmappings+0x200>$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	c7 04 24 e2 aa 10 f0 	movl   $0xf010aae2,(%esp)$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	e8 e1 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	83 65 f4 f7          	andl   $0xfffffff7,-0xc(%ebp)$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	eb 44                	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	85 c0                	test   %eax,%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	74 12                	je     f0100f80 <showmappings+0x21c>$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	c7 04 24 e5 aa 10 f0 	movl   $0xf010aae5,(%esp)$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	e8 c5 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	83 65 f4 fb          	andl   $0xfffffffb,-0xc(%ebp)$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	eb 28                	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	85 c0                	test   %eax,%eax$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	74 12                	je     f0100f9c <showmappings+0x238>$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	c7 04 24 e7 aa 10 f0 	movl   $0xf010aae7,(%esp)$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	e8 a9 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	83 65 f4 fd          	andl   $0xfffffffd,-0xc(%ebp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	eb 0c                	jmp    f0100fa8 <showmappings+0x244>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	c7 04 24 e9 aa 10 f0 	movl   $0xf010aae9,(%esp)$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	e8 97 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	0f 8e cf fe ff ff    	jle    f0100e85 <showmappings+0x121>$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	c7 04 24 eb aa 10 f0 	movl   $0xf010aaeb,(%esp)$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	e8 7d 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	8b 00                	mov    (%eax),%eax$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	e8 2d 00 00 00       	call   f0101001 <convert_to_binary>$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	c7 04 24 ed aa 10 f0 	movl   $0xf010aaed,(%esp)$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	e8 5b 43 00 00       	call   f010533f <cprintf>$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	0f 86 05 fe ff ff    	jbe    f0100dfb <showmappings+0x97>$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 c4 34             	add    $0x34,%esp$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	5b                   	pop    %ebx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	5d                   	pop    %ebp$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	c3                   	ret    $/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001 <convert_to_binary>:$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	55                   	push   %ebp$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	89 e5                	mov    %esp,%ebp$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	c7 45 fc 0b 00 00 00 	movl   $0xb,-0x4(%ebp)$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	eb 2f                	jmp    f010103f <convert_to_binary+0x3e>$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	85 c0                	test   %eax,%eax$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	74 10                	je     f010102a <convert_to_binary+0x29>$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	8b 15 74 a5 12 f0    	mov    0xf012a574,%edx$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	01 d0                	add    %edx,%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	c6 00 31             	movb   $0x31,(%eax)$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	eb 0e                	jmp    f0101038 <convert_to_binary+0x37>$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	8b 15 74 a5 12 f0    	mov    0xf012a574,%edx$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	01 d0                	add    %edx,%eax$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	c6 00 30             	movb   $0x30,(%eax)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	d1 6d 08             	shrl   0x8(%ebp)$/;"	d
f010103b	obj/kern/kernel.asm	/^f010103b:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	79 cb                	jns    f0101010 <convert_to_binary+0xf>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	a1 74 a5 12 f0       	mov    0xf012a574,%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	c9                   	leave  $/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	c3                   	ret    $/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c <mon_help>:$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	55                   	push   %ebp$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	89 e5                	mov    %esp,%ebp$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	eb 3f                	jmp    f010109a <mon_help+0x4e>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	89 d0                	mov    %edx,%eax$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	01 c0                	add    %eax,%eax$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	01 d0                	add    %edx,%eax$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	05 20 a5 12 f0       	add    $0xf012a520,%eax$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	89 d0                	mov    %edx,%eax$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	01 c0                	add    %eax,%eax$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	01 d0                	add    %edx,%eax$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	05 20 a5 12 f0       	add    $0xf012a520,%eax$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	8b 00                	mov    (%eax),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	c7 04 24 f5 aa 10 f0 	movl   $0xf010aaf5,(%esp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	e8 a9 42 00 00       	call   f010533f <cprintf>$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	76 b9                	jbe    f010105b <mon_help+0xf>$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	c9                   	leave  $/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	c3                   	ret    $/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9 <mon_kerninfo>:$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	55                   	push   %ebp$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	c7 04 24 fe aa 10 f0 	movl   $0xf010aafe,(%esp)$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	e8 84 42 00 00       	call   f010533f <cprintf>$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	00 $/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	c7 04 24 18 ab 10 f0 	movl   $0xf010ab18,(%esp)$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	e8 70 42 00 00       	call   f010533f <cprintf>$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	00 $/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	f0 $/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	c7 04 24 40 ab 10 f0 	movl   $0xf010ab40,(%esp)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	e8 54 42 00 00       	call   f010533f <cprintf>$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	c7 44 24 08 a7 a7 10 	movl   $0x10a7a7,0x8(%esp)$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	00 $/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	c7 44 24 04 a7 a7 10 	movl   $0xf010a7a7,0x4(%esp)$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	f0 $/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	c7 04 24 64 ab 10 f0 	movl   $0xf010ab64,(%esp)$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	e8 38 42 00 00       	call   f010533f <cprintf>$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	c7 44 24 08 86 f1 2e 	movl   $0x2ef186,0x8(%esp)$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	00 $/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	c7 44 24 04 86 f1 2e 	movl   $0xf02ef186,0x4(%esp)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	f0 $/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	c7 04 24 88 ab 10 f0 	movl   $0xf010ab88,(%esp)$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	e8 1c 42 00 00       	call   f010533f <cprintf>$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	c7 44 24 08 40 2a 38 	movl   $0x382a40,0x8(%esp)$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	00 $/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	c7 44 24 04 40 2a 38 	movl   $0xf0382a40,0x4(%esp)$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	f0 $/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	c7 04 24 ac ab 10 f0 	movl   $0xf010abac,(%esp)$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	e8 00 42 00 00       	call   f010533f <cprintf>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	c7 45 f4 00 04 00 00 	movl   $0x400,-0xc(%ebp)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	b8 0c 00 10 f0       	mov    $0xf010000c,%eax$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	29 c2                	sub    %eax,%edx$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	b8 40 2a 38 f0       	mov    $0xf0382a40,%eax$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	01 d0                	add    %edx,%eax$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	89 d0                	mov    %edx,%eax$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	29 c2                	sub    %eax,%edx$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	89 d0                	mov    %edx,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	85 c0                	test   %eax,%eax$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	c7 04 24 d0 ab 10 f0 	movl   $0xf010abd0,(%esp)$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	e8 b0 41 00 00       	call   f010533f <cprintf>$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	c9                   	leave  $/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	c3                   	ret    $/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196 <mon_backtrace>:$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	55                   	push   %ebp$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	89 e5                	mov    %esp,%ebp$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	57                   	push   %edi$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	56                   	push   %esi$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	53                   	push   %ebx$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	81 ec 8c 00 00 00    	sub    $0x8c,%esp$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	89 e0                	mov    %esp,%eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	89 c7                	mov    %eax,%edi$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	c6 45 df 05          	movb   $0x5,-0x21(%ebp)$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	8d 50 03             	lea    0x3(%eax),%edx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	01 d0                	add    %edx,%eax$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	f7 f3                	div    %ebx$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	6b c0 10             	imul   $0x10,%eax,%eax$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	29 c4                	sub    %eax,%esp$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	8d 44 24 20          	lea    0x20(%esp),%eax$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	83 c0 03             	add    $0x3,%eax$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	c7 45 d0 fc ab 10 f0 	movl   $0xf010abfc,-0x30(%ebp)$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	c7 45 cc 2d ac 10 f0 	movl   $0xf010ac2d,-0x34(%ebp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	c7 04 24 3e ac 10 f0 	movl   $0xf010ac3e,(%esp)$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	e8 3a 41 00 00       	call   f010533f <cprintf>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	89 e8                	mov    %ebp,%eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	e9 08 01 00 00       	jmp    f010131d <mon_backtrace+0x187>$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	8b 00                	mov    (%eax),%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	eb 37                	jmp    f010127d <mon_backtrace+0xe7>$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	0f b6 55 e7          	movzbl -0x19(%ebp),%edx$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	83 c0 02             	add    $0x2,%eax$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	01 c8                	add    %ecx,%eax$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	8b 00                	mov    (%eax),%eax$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	89 c1                	mov    %eax,%ecx$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	89 0c 90             	mov    %ecx,(%eax,%edx,4)$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	83 c0 01             	add    $0x1,%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	3a 45 df             	cmp    -0x21(%ebp),%al$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	72 c0                	jb     f0101246 <mon_backtrace+0xb0>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	8b 70 10             	mov    0x10(%eax),%esi$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	8b 58 0c             	mov    0xc(%eax),%ebx$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	8b 00                	mov    (%eax),%eax$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	89 74 24 1c          	mov    %esi,0x1c(%esp)$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	89 5c 24 18          	mov    %ebx,0x18(%esp)$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	e8 6f 40 00 00       	call   f010533f <cprintf>$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	8d 45 90             	lea    -0x70(%ebp),%eax$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	e8 f5 64 00 00       	call   f01077d7 <debuginfo_eip>$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	89 d6                	mov    %edx,%esi$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	29 c6                	sub    %eax,%esi$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	8b 5d 98             	mov    -0x68(%ebp),%ebx$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	8b 4d 9c             	mov    -0x64(%ebp),%ecx$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	e8 28 40 00 00       	call   f010533f <cprintf>$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	0f 85 ee fe ff ff    	jne    f0101215 <mon_backtrace+0x7f>$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	89 fc                	mov    %edi,%esp$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	5b                   	pop    %ebx$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	5e                   	pop    %esi$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	5f                   	pop    %edi$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	5d                   	pop    %ebp$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	c3                   	ret    $/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336 <runcmd>:$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	55                   	push   %ebp$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	89 e5                	mov    %esp,%ebp$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	83 ec 68             	sub    $0x68,%esp$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	c7 44 85 b0 00 00 00 	movl   $0x0,-0x50(%ebp,%eax,4)$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	00 $/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	eb 0c                	jmp    f010135c <runcmd+0x26>$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	84 c0                	test   %al,%al$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	74 1d                	je     f0101383 <runcmd+0x4d>$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	0f be c0             	movsbl %al,%eax$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	c7 04 24 50 ac 10 f0 	movl   $0xf010ac50,(%esp)$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	e8 da 71 00 00       	call   f0108559 <strchr>$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	85 c0                	test   %eax,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	75 cd                	jne    f0101350 <runcmd+0x1a>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	84 c0                	test   %al,%al$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	75 14                	jne    f01013a1 <runcmd+0x6b>$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	90                   	nop$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	c7 44 85 b0 00 00 00 	movl   $0x0,-0x50(%ebp,%eax,4)$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	00 $/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	75 70                	jne    f010140f <runcmd+0xd9>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	eb 67                	jmp    f0101408 <runcmd+0xd2>$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	75 1e                	jne    f01013c5 <runcmd+0x8f>$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	00 $/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	c7 04 24 55 ac 10 f0 	movl   $0xf010ac55,(%esp)$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	e8 84 3f 00 00       	call   f010533f <cprintf>$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	e9 c9 00 00 00       	jmp    f010148e <runcmd+0x158>$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	89 54 85 b0          	mov    %edx,-0x50(%ebp,%eax,4)$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	eb 04                	jmp    f01013db <runcmd+0xa5>$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	84 c0                	test   %al,%al$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	74 1d                	je     f0101402 <runcmd+0xcc>$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	0f be c0             	movsbl %al,%eax$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	c7 04 24 50 ac 10 f0 	movl   $0xf010ac50,(%esp)$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	e8 5b 71 00 00       	call   f0108559 <strchr>$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	85 c0                	test   %eax,%eax$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	74 d5                	je     f01013d7 <runcmd+0xa1>$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	90                   	nop$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e9 54 ff ff ff       	jmp    f010135c <runcmd+0x26>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	eb 7f                	jmp    f010148e <runcmd+0x158>$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	eb 56                	jmp    f010146e <runcmd+0x138>$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	89 d0                	mov    %edx,%eax$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	01 c0                	add    %eax,%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	01 d0                	add    %edx,%eax$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	05 20 a5 12 f0       	add    $0xf012a520,%eax$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	8b 10                	mov    (%eax),%edx$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	e8 8a 70 00 00       	call   f01084c4 <strcmp>$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	85 c0                	test   %eax,%eax$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	75 2c                	jne    f010146a <runcmd+0x134>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	89 d0                	mov    %edx,%eax$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	01 c0                	add    %eax,%eax$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	01 d0                	add    %edx,%eax$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	05 20 a5 12 f0       	add    $0xf012a520,%eax$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	ff d0                	call   *%eax$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	eb 24                	jmp    f010148e <runcmd+0x158>$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	76 a2                	jbe    f0101418 <runcmd+0xe2>$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	c7 04 24 72 ac 10 f0 	movl   $0xf010ac72,(%esp)$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	e8 b6 3e 00 00       	call   f010533f <cprintf>$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	c9                   	leave  $/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	c3                   	ret    $/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490 <monitor>:$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	55                   	push   %ebp$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	89 e5                	mov    %esp,%ebp$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	c7 04 24 88 ac 10 f0 	movl   $0xf010ac88,(%esp)$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	e8 9d 3e 00 00       	call   f010533f <cprintf>$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	c7 04 24 ac ac 10 f0 	movl   $0xf010acac,(%esp)$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	e8 91 3e 00 00       	call   f010533f <cprintf>$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	74 0b                	je     f01014bf <monitor+0x2f>$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	e8 4f 4d 00 00       	call   f010620e <print_trapframe>$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	c7 04 24 d1 ac 10 f0 	movl   $0xf010acd1,(%esp)$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	e8 9a 6d 00 00       	call   f0108265 <readline>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	74 18                	je     f01014ec <monitor+0x5c>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	e8 50 fe ff ff       	call   f0101336 <runcmd>$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	85 c0                	test   %eax,%eax$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	79 02                	jns    f01014ec <monitor+0x5c>$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	eb 02                	jmp    f01014ee <monitor+0x5e>$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	eb d1                	jmp    f01014bf <monitor+0x2f>$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	c9                   	leave  $/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	c3                   	ret    $/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0 <_paddr>:$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	55                   	push   %ebp$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	77 21                	ja     f0101521 <_paddr+0x31>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	c7 44 24 08 e4 ac 10 	movl   $0xf010ace4,0x8(%esp)$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	f0 $/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	e8 e1 ed ff ff       	call   f0100302 <_panic>$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	c9                   	leave  $/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	c3                   	ret    $/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b <_kaddr>:$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	55                   	push   %ebp$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	89 e5                	mov    %esp,%ebp$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	89 c2                	mov    %eax,%edx$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	39 c2                	cmp    %eax,%edx$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	72 21                	jb     f0101563 <_kaddr+0x38>$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	c7 44 24 08 08 ad 10 	movl   $0xf010ad08,0x8(%esp)$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	f0 $/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	e8 9f ed ff ff       	call   f0100302 <_panic>$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	c9                   	leave  $/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	c3                   	ret    $/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d <page2pa>:$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	55                   	push   %ebp$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	29 c2                	sub    %eax,%edx$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	89 d0                	mov    %edx,%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	5d                   	pop    %ebp$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	c3                   	ret    $/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584 <pa2page>:$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	55                   	push   %ebp$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	89 e5                	mov    %esp,%ebp$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	89 c2                	mov    %eax,%edx$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	39 c2                	cmp    %eax,%edx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	72 1c                	jb     f01015b7 <pa2page+0x33>$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	c7 44 24 08 2c ad 10 	movl   $0xf010ad2c,0x8(%esp)$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	f0 $/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	00 $/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	c7 04 24 4b ad 10 f0 	movl   $0xf010ad4b,(%esp)$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	e8 4b ed ff ff       	call   f0100302 <_panic>$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	01 d0                	add    %edx,%eax$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	c9                   	leave  $/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	c3                   	ret    $/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9 <page2kva>:$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	55                   	push   %ebp$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	e8 93 ff ff ff       	call   f010156d <page2pa>$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	00 $/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	c7 04 24 4b ad 10 f0 	movl   $0xf010ad4b,(%esp)$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	e8 39 ff ff ff       	call   f010152b <_kaddr>$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	c9                   	leave  $/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	c3                   	ret    $/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4 <nvram_read>:$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	55                   	push   %ebp$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	53                   	push   %ebx$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	e8 5a 3a 00 00       	call   f0105060 <mc146818_read>$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	89 c3                	mov    %eax,%ebx$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	e8 4a 3a 00 00       	call   f0105060 <mc146818_read>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	09 d8                	or     %ebx,%eax$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	5b                   	pop    %ebx$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	5d                   	pop    %ebp$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	c3                   	ret    $/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621 <i386_detect_memory>:$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	55                   	push   %ebp$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 e5                	mov    %esp,%ebp$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	e8 c1 ff ff ff       	call   f01015f4 <nvram_read>$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	85 c0                	test   %eax,%eax$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	a3 2c 02 2f f0       	mov    %eax,0xf02f022c$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	e8 9f ff ff ff       	call   f01015f4 <nvram_read>$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	85 c0                	test   %eax,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	74 0f                	je     f010167e <i386_detect_memory+0x5d>$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	a3 28 0f 2f f0       	mov    %eax,0xf02f0f28$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	eb 0a                	jmp    f0101688 <i386_detect_memory+0x67>$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	a1 2c 02 2f f0       	mov    0xf02f022c,%eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	a3 28 0f 2f f0       	mov    %eax,0xf02f0f28$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	89 c1                	mov    %eax,%ecx$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	a1 2c 02 2f f0       	mov    0xf02f022c,%eax$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	89 c2                	mov    %eax,%edx$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	c7 04 24 5c ad 10 f0 	movl   $0xf010ad5c,(%esp)$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	e8 7c 3c 00 00       	call   f010533f <cprintf>$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	c9                   	leave  $/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	c3                   	ret    $/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5 <boot_alloc>:$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	55                   	push   %ebp$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	83 ec 48             	sub    $0x48,%esp$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	a1 38 02 2f f0       	mov    0xf02f0238,%eax$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	85 c0                	test   %eax,%eax$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	75 30                	jne    f0101704 <boot_alloc+0x3f>$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	b8 40 2a 38 f0       	mov    $0xf0382a40,%eax$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	01 d0                	add    %edx,%eax$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	89 d0                	mov    %edx,%eax$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	29 c2                	sub    %eax,%edx$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	89 d0                	mov    %edx,%eax$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	a3 38 02 2f f0       	mov    %eax,0xf02f0238$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	a1 38 02 2f f0       	mov    0xf02f0238,%eax$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	8b 15 38 02 2f f0    	mov    0xf02f0238,%edx$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	01 d0                	add    %edx,%eax$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	89 c2                	mov    %eax,%edx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	01 d0                	add    %edx,%eax$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	89 d0                	mov    %edx,%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	29 c2                	sub    %eax,%edx$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	89 d0                	mov    %edx,%eax$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	a3 38 02 2f f0       	mov    %eax,0xf02f0238$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	a1 38 02 2f f0       	mov    0xf02f0238,%eax$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	39 c2                	cmp    %eax,%edx$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	76 39                	jbe    f0101794 <boot_alloc+0xcf>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	89 c2                	mov    %eax,%edx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	a1 38 02 2f f0       	mov    0xf02f0238,%eax$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	c7 44 24 08 98 ad 10 	movl   $0xf010ad98,0x8(%esp)$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	f0 $/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	00 $/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	e8 6e eb ff ff       	call   f0100302 <_panic>$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	c9                   	leave  $/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	c3                   	ret    $/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799 <mem_init>:$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	55                   	push   %ebp$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	89 e5                	mov    %esp,%ebp$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	53                   	push   %ebx$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	e8 7c fe ff ff       	call   f0101621 <i386_detect_memory>$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	e8 14 ff ff ff       	call   f01016c5 <boot_alloc>$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	a3 2c 0f 2f f0       	mov    %eax,0xf02f0f2c$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	00 $/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	00 $/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	e8 e7 6d 00 00       	call   f01085ba <memset>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	8d 98 f4 0e 00 00    	lea    0xef4(%eax),%ebx$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	00 $/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	e8 f5 fc ff ff       	call   f01014f0 <_paddr>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	83 c8 05             	or     $0x5,%eax$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	e8 b5 fe ff ff       	call   f01016c5 <boot_alloc>$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	a3 30 0f 2f f0       	mov    %eax,0xf02f0f30$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	00 $/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	e8 80 6d 00 00       	call   f01085ba <memset>$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c7 04 24 00 10 02 00 	movl   $0x21000,(%esp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	e8 7f fe ff ff       	call   f01016c5 <boot_alloc>$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	a3 3c 02 2f f0       	mov    %eax,0xf02f023c$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	a1 3c 02 2f f0       	mov    0xf02f023c,%eax$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	c7 44 24 08 00 10 02 	movl   $0x21000,0x8(%esp)$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	00 $/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	00 $/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	e8 52 6d 00 00       	call   f01085ba <memset>$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	e8 b7 01 00 00       	call   f0101a24 <page_init>$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	e8 7e 08 00 00       	call   f01020f7 <check_page_free_list>$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	e8 1d 0c 00 00       	call   f010249b <check_page_alloc>$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	e8 62 16 00 00       	call   f0102ee5 <check_page>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	00 $/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	e8 50 fc ff ff       	call   f01014f0 <_paddr>$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	8b 15 2c 0f 2f f0    	mov    0xf02f0f2c,%edx$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	00 $/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	00 $/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	c7 44 24 04 00 00 00 	movl   $0xef000000,0x4(%esp)$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	ef $/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	e8 4c 04 00 00       	call   f0101d16 <boot_map_region>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	a1 3c 02 2f f0       	mov    0xf02f023c,%eax$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	00 $/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	e8 09 fc ff ff       	call   f01014f0 <_paddr>$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	8b 15 2c 0f 2f f0    	mov    0xf02f0f2c,%edx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	00 $/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	00 $/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	c7 44 24 04 00 00 c0 	movl   $0xeec00000,0x4(%esp)$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	ee $/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	e8 05 04 00 00       	call   f0101d16 <boot_map_region>$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%esp)$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	00 $/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	00 $/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	c7 44 24 08 ff ff ff 	movl   $0xfffffff,0x8(%esp)$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	0f $/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	c7 44 24 04 00 00 00 	movl   $0xf0000000,0x4(%esp)$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	f0 $/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	e8 d8 03 00 00       	call   f0101d16 <boot_map_region>$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 65 00 00 00       	call   f01019a8 <mem_init_mp>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	e8 05 11 00 00       	call   f0102a4d <check_kern_pgdir>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	c7 44 24 04 e8 00 00 	movl   $0xe8,0x4(%esp)$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	00 $/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	e8 8b fb ff ff       	call   f01014f0 <_paddr>$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	e8 7d 07 00 00       	call   f01020f7 <check_page_free_list>$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	81 4d f4 23 00 05 80 	orl    $0x80050023,-0xc(%ebp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	83 65 f4 f3          	andl   $0xfffffff3,-0xc(%ebp)$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	e8 ba 27 00 00       	call   f010415c <check_page_installed_pgdir>$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	83 c4 34             	add    $0x34,%esp$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	5b                   	pop    %ebx$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	5d                   	pop    %ebp$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	c3                   	ret    $/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8 <mem_init_mp>:$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	55                   	push   %ebp$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	c7 45 f0 00 80 ff ef 	movl   $0xefff8000,-0x10(%ebp)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	eb 5e                	jmp    f0101a1c <mem_init_mp+0x74>$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	05 00 20 2f f0       	add    $0xf02f2000,%eax$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c7 44 24 04 10 01 00 	movl   $0x110,0x4(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	00 $/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	e8 0f fb ff ff       	call   f01014f0 <_paddr>$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	8b 15 2c 0f 2f f0    	mov    0xf02f0f2c,%edx$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%esp)$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	00 $/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	c7 44 24 08 00 80 00 	movl   $0x8000,0x8(%esp)$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	00 $/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	e8 0c 03 00 00       	call   f0101d16 <boot_map_region>$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	81 6d f0 00 80 00 00 	subl   $0x8000,-0x10(%ebp)$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	81 6d f0 00 80 00 00 	subl   $0x8000,-0x10(%ebp)$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	76 9c                	jbe    f01019be <mem_init_mp+0x16>$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	c9                   	leave  $/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	c3                   	ret    $/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24 <page_init>:$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	55                   	push   %ebp$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	c7 05 30 02 2f f0 00 	movl   $0x0,0xf02f0230$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	00 00 00 $/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	e8 85 fc ff ff       	call   f01016c5 <boot_alloc>$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	c7 45 ec 60 00 00 00 	movl   $0x60,-0x14(%ebp)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	e9 9d 00 00 00       	jmp    f0101afb <page_init+0xd7>$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	74 45                	je     f0101aa9 <page_init+0x85>$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	74 3f                	je     f0101aa9 <page_init+0x85>$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	a1 2c 02 2f f0       	mov    0xf02f022c,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	77 10                	ja     f0101a84 <page_init+0x60>$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	8b 15 2c 02 2f f0    	mov    0xf02f022c,%edx$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	01 d0                	add    %edx,%eax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	77 25                	ja     f0101aa9 <page_init+0x85>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	8b 15 2c 02 2f f0    	mov    0xf02f022c,%edx$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	01 d0                	add    %edx,%eax$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	77 2a                	ja     f0101abe <page_init+0x9a>$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	8b 15 2c 02 2f f0    	mov    0xf02f022c,%edx$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	01 c2                	add    %eax,%edx$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	01 d0                	add    %edx,%eax$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	76 15                	jbe    f0101abe <page_init+0x9a>$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	01 d0                	add    %edx,%eax$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	eb 39                	jmp    f0101af7 <page_init+0xd3>$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	01 d0                	add    %edx,%eax$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	01 c2                	add    %eax,%edx$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	89 02                	mov    %eax,(%edx)$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	01 d0                	add    %edx,%eax$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	0f 82 55 ff ff ff    	jb     f0101a5e <page_init+0x3a>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	c9                   	leave  $/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	c3                   	ret    $/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b <page_alloc>:$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	55                   	push   %ebp$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	85 c0                	test   %eax,%eax$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	75 07                	jne    f0101b21 <page_alloc+0x16>$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	eb 7b                	jmp    f0101b9c <page_alloc+0x91>$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	66 85 c0             	test   %ax,%ax$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	74 24                	je     f0101b59 <page_alloc+0x4e>$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	c7 44 24 0c ed ad 10 	movl   $0xf010aded,0xc(%esp)$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	f0 $/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	f0 $/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	c7 44 24 04 66 01 00 	movl   $0x166,0x4(%esp)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	00 $/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	e8 a9 e7 ff ff       	call   f0100302 <_panic>$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	85 c0                	test   %eax,%eax$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	74 23                	je     f0101b99 <page_alloc+0x8e>$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	e8 48 fa ff ff       	call   f01015c9 <page2kva>$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	00 $/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	00 $/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	e8 21 6a 00 00       	call   f01085ba <memset>$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c9                   	leave  $/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	c3                   	ret    $/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e <page_free>:$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	55                   	push   %ebp$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	66 85 c0             	test   %ax,%ax$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	74 24                	je     f0101bd4 <page_free+0x36>$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	c7 44 24 0c ed ad 10 	movl   $0xf010aded,0xc(%esp)$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	f0 $/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	f0 $/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	00 $/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	e8 2e e7 ff ff       	call   f0100302 <_panic>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	8b 00                	mov    (%eax),%eax$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	85 c0                	test   %eax,%eax$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	74 24                	je     f0101c01 <page_free+0x63>$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	c7 44 24 0c 12 ae 10 	movl   $0xf010ae12,0xc(%esp)$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	f0 $/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	f0 $/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	00 $/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	e8 01 e7 ff ff       	call   f0100302 <_panic>$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	8b 15 30 02 2f f0    	mov    0xf02f0230,%edx$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	89 10                	mov    %edx,(%eax)$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	c9                   	leave  $/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	c3                   	ret    $/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16 <page_decref>:$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	55                   	push   %ebp$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	66 85 c0             	test   %ax,%ax$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	75 0b                	jne    f0101c44 <page_decref+0x2e>$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	e8 5a ff ff ff       	call   f0101b9e <page_free>$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	c9                   	leave  $/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	c3                   	ret    $/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46 <pgdir_walk>:$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	55                   	push   %ebp$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	01 d0                	add    %edx,%eax$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	85 c0                	test   %eax,%eax$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	75 10                	jne    f0101c84 <pgdir_walk+0x3e>$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	75 0a                	jne    f0101c84 <pgdir_walk+0x3e>$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	e9 90 00 00 00       	jmp    f0101d14 <pgdir_walk+0xce>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	85 c0                	test   %eax,%eax$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	75 48                	jne    f0101cd8 <pgdir_walk+0x92>$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	74 42                	je     f0101cd8 <pgdir_walk+0x92>$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	e8 69 fe ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	75 07                	jne    f0101cb2 <pgdir_walk+0x6c>$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	eb 62                	jmp    f0101d14 <pgdir_walk+0xce>$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	e8 9f f8 ff ff       	call   f010156d <page2pa>$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	89 c2                	mov    %eax,%edx$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	89 10                	mov    %edx,(%eax)$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	8b 00                	mov    (%eax),%eax$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	c7 44 24 04 b1 01 00 	movl   $0x1b1,0x4(%esp)$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	00 $/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	e8 31 f8 ff ff       	call   f010152b <_kaddr>$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	01 d0                	add    %edx,%eax$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	c9                   	leave  $/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	c3                   	ret    $/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16 <boot_map_region>:$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	55                   	push   %ebp$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	89 e5                	mov    %esp,%ebp$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	01 d0                	add    %edx,%eax$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	c7 45 e4 00 f0 ff ff 	movl   $0xfffff000,-0x1c(%ebp)$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	eb 45                	jmp    f0101d88 <boot_map_region+0x72>$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	00 $/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	e8 e9 fe ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	0b 45 f0             	or     -0x10(%ebp),%eax$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	89 c2                	mov    %eax,%edx$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	75 02                	jne    f0101d7a <boot_map_region+0x64>$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	eb 25                	jmp    f0101d9f <boot_map_region+0x89>$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	81 45 f0 00 10 00 00 	addl   $0x1000,-0x10(%ebp)$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	3b 55 ec             	cmp    -0x14(%ebp),%edx$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	72 ae                	jb     f0101d43 <boot_map_region+0x2d>$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	3b 55 ec             	cmp    -0x14(%ebp),%edx$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	77 05                	ja     f0101d9f <boot_map_region+0x89>$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	72 a4                	jb     f0101d43 <boot_map_region+0x2d>$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	c9                   	leave  $/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	c3                   	ret    $/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1 <page_insert>:$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	55                   	push   %ebp$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	89 e5                	mov    %esp,%ebp$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	00 $/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	e8 85 fe ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	75 07                	jne    f0101dd1 <page_insert+0x30>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	eb 7b                	jmp    f0101e4c <page_insert+0xab>$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	8b 00                	mov    (%eax),%eax$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	85 c0                	test   %eax,%eax$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	74 12                	je     f0101e00 <page_insert+0x5f>$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	e8 b9 00 00 00       	call   f0101eb9 <page_remove>$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	e8 62 f7 ff ff       	call   f010156d <page2pa>$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	09 d0                	or     %edx,%eax$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	89 c2                	mov    %eax,%edx$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	89 10                	mov    %edx,(%eax)$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	01 d0                	add    %edx,%eax$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	01 ca                	add    %ecx,%edx$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	09 ca                	or     %ecx,%edx$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	89 10                	mov    %edx,(%eax)$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	c9                   	leave  $/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	c3                   	ret    $/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e <page_lookup>:$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	55                   	push   %ebp$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	00 $/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	e8 d8 fd ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	75 07                	jne    f0101e7e <page_lookup+0x30>$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	eb 39                	jmp    f0101eb7 <page_lookup+0x69>$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	85 c0                	test   %eax,%eax$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	75 07                	jne    f0101e91 <page_lookup+0x43>$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	eb 26                	jmp    f0101eb7 <page_lookup+0x69>$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	74 08                	je     f0101e9f <page_lookup+0x51>$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	89 10                	mov    %edx,(%eax)$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	e8 cd f6 ff ff       	call   f0101584 <pa2page>$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	c9                   	leave  $/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	c3                   	ret    $/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9 <page_remove>:$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	55                   	push   %ebp$/;"	l
f0101eba	obj/kern/kernel.asm	/^f0101eba:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	e8 76 ff ff ff       	call   f0101e4e <page_lookup>$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	74 26                	je     f0101f07 <page_remove+0x4e>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	e8 2a fd ff ff       	call   f0101c16 <page_decref>$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101eef	obj/kern/kernel.asm	/^f0101eef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	e8 0b 00 00 00       	call   f0101f09 <tlb_invalidate>$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	c9                   	leave  $/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	c3                   	ret    $/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09 <tlb_invalidate>:$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	55                   	push   %ebp$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	e8 6e 71 00 00       	call   f0109082 <cpunum>$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	85 c0                	test   %eax,%eax$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	74 17                	je     f0101f39 <tlb_invalidate+0x30>$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	e8 5b 71 00 00       	call   f0109082 <cpunum>$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	75 0c                	jne    f0101f45 <tlb_invalidate+0x3c>$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	0f 01 38             	invlpg (%eax)$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	c9                   	leave  $/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	c3                   	ret    $/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47 <mmio_map_region>:$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	55                   	push   %ebp$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	89 e5                	mov    %esp,%ebp$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	01 d0                	add    %edx,%eax$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	89 d0                	mov    %edx,%eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	29 c2                	sub    %eax,%edx$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	89 d0                	mov    %edx,%eax$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	8b 15 78 a5 12 f0    	mov    0xf012a578,%edx$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	01 d0                	add    %edx,%eax$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	76 1c                	jbe    f0101fa7 <mmio_map_region+0x60>$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	c7 44 24 08 28 ae 10 	movl   $0xf010ae28,0x8(%esp)$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	f0 $/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	c7 44 24 04 61 02 00 	movl   $0x261,0x4(%esp)$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	00 $/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	e8 5b e3 ff ff       	call   f0100302 <_panic>$/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	8b 15 78 a5 12 f0    	mov    0xf012a578,%edx$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	c7 44 24 10 1a 00 00 	movl   $0x1a,0x10(%esp)$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	00 $/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	e8 42 fd ff ff       	call   f0101d16 <boot_map_region>$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	a1 78 a5 12 f0       	mov    0xf012a578,%eax$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	8b 15 78 a5 12 f0    	mov    0xf012a578,%edx$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	01 d0                	add    %edx,%eax$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	a3 78 a5 12 f0       	mov    %eax,0xf012a578$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	c9                   	leave  $/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	c3                   	ret    $/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1 <user_mem_check>:$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	55                   	push   %ebp$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102000	obj/kern/kernel.asm	/^f0102000:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	01 d0                	add    %edx,%eax$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	eb 73                	jmp    f010208e <user_mem_check+0x9d>$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	00 $/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	e8 0e fc ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	74 1a                	je     f010205b <user_mem_check+0x6a>$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	81 7d f4 00 00 80 ef 	cmpl   $0xef800000,-0xc(%ebp)$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	77 11                	ja     f010205b <user_mem_check+0x6a>$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	8b 10                	mov    (%eax),%edx$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	21 c2                	and    %eax,%edx$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	39 c2                	cmp    %eax,%edx$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	74 2c                	je     f0102087 <user_mem_check+0x96>$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	75 0a                	jne    f0102078 <user_mem_check+0x87>$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	a3 34 02 2f f0       	mov    %eax,0xf02f0234$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	eb 08                	jmp    f0102080 <user_mem_check+0x8f>$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	a3 34 02 2f f0       	mov    %eax,0xf02f0234$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	eb 14                	jmp    f010209b <user_mem_check+0xaa>$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	72 85                	jb     f010201b <user_mem_check+0x2a>$/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	c9                   	leave  $/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	c3                   	ret    $/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d <user_mem_assert>:$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	55                   	push   %ebp$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	89 e5                	mov    %esp,%ebp$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	83 c8 05             	or     $0x5,%eax$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	e8 2b ff ff ff       	call   f0101ff1 <user_mem_check>$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	85 c0                	test   %eax,%eax$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	79 2b                	jns    f01020f5 <user_mem_assert+0x58>$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	8b 15 34 02 2f f0    	mov    0xf02f0234,%edx$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	c7 04 24 64 ae 10 f0 	movl   $0xf010ae64,(%esp)$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	e8 55 32 00 00       	call   f010533f <cprintf>$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	e8 e7 2d 00 00       	call   f0104edc <env_destroy>$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	c9                   	leave  $/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	c3                   	ret    $/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7 <check_page_free_list>:$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	55                   	push   %ebp$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	88 45 c4             	mov    %al,-0x3c(%ebp)$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	74 07                	je     f0102110 <check_page_free_list+0x19>$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	eb 05                	jmp    f0102115 <check_page_free_list+0x1e>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	b8 00 04 00 00       	mov    $0x400,%eax$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	85 c0                	test   %eax,%eax$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	75 1c                	jne    f010214b <check_page_free_list+0x54>$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	c7 44 24 08 9c ae 10 	movl   $0xf010ae9c,0x8(%esp)$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	f0 $/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	00 $/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	e8 b7 e1 ff ff       	call   f0100302 <_panic>$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	74 6d                	je     f01021be <check_page_free_list+0xc7>$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	eb 38                	jmp    f010219f <check_page_free_list+0xa8>$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	e8 fb f3 ff ff       	call   f010156d <page2pa>$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	0f 93 c0             	setae  %al$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	8b 44 85 d0          	mov    -0x30(%ebp,%eax,4),%eax$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	89 10                	mov    %edx,(%eax)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	89 54 85 d0          	mov    %edx,-0x30(%ebp,%eax,4)$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	8b 00                	mov    (%eax),%eax$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	75 c2                	jne    f0102167 <check_page_free_list+0x70>$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	89 10                	mov    %edx,(%eax)$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	eb 3e                	jmp    f0102206 <check_page_free_list+0x10f>$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	e8 9a f3 ff ff       	call   f010156d <page2pa>$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	73 23                	jae    f01021fe <check_page_free_list+0x107>$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	e8 e3 f3 ff ff       	call   f01015c9 <page2kva>$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	00 $/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	00 $/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	e8 bc 63 00 00       	call   f01085ba <memset>$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	8b 00                	mov    (%eax),%eax$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	75 bc                	jne    f01021c8 <check_page_free_list+0xd1>$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	e8 ad f4 ff ff       	call   f01016c5 <boot_alloc>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	e9 13 02 00 00       	jmp    f010243b <check_page_free_list+0x344>$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	73 24                	jae    f0102256 <check_page_free_list+0x15f>$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	c7 44 24 0c c0 ae 10 	movl   $0xf010aec0,0xc(%esp)$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	f0 $/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	f0 $/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	00 $/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	e8 ac e0 ff ff       	call   f0100302 <_panic>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	8b 15 28 0f 2f f0    	mov    0xf02f0f28,%edx$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	01 d0                	add    %edx,%eax$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	77 24                	ja     f010228f <check_page_free_list+0x198>$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	c7 44 24 0c cc ae 10 	movl   $0xf010aecc,0xc(%esp)$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	f0 $/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	f0 $/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	00 $/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	e8 73 e0 ff ff       	call   f0100302 <_panic>$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	29 c2                	sub    %eax,%edx$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	89 d0                	mov    %edx,%eax$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	83 e0 07             	and    $0x7,%eax$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	85 c0                	test   %eax,%eax$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	74 24                	je     f01022c6 <check_page_free_list+0x1cf>$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	c7 44 24 0c e0 ae 10 	movl   $0xf010aee0,0xc(%esp)$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	f0 $/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	f0 $/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	00 $/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	e8 3c e0 ff ff       	call   f0100302 <_panic>$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	e8 9c f2 ff ff       	call   f010156d <page2pa>$/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	85 c0                	test   %eax,%eax$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	75 24                	jne    f01022f9 <check_page_free_list+0x202>$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	c7 44 24 0c 12 af 10 	movl   $0xf010af12,0xc(%esp)$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	f0 $/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	f0 $/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	c7 44 24 04 d7 02 00 	movl   $0x2d7,0x4(%esp)$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	00 $/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	e8 09 e0 ff ff       	call   f0100302 <_panic>$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	e8 69 f2 ff ff       	call   f010156d <page2pa>$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	75 24                	jne    f010232f <check_page_free_list+0x238>$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	c7 44 24 0c 23 af 10 	movl   $0xf010af23,0xc(%esp)$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	f0 $/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	f0 $/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	00 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	e8 d3 df ff ff       	call   f0100302 <_panic>$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	e8 33 f2 ff ff       	call   f010156d <page2pa>$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	75 24                	jne    f0102365 <check_page_free_list+0x26e>$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	c7 44 24 0c 3c af 10 	movl   $0xf010af3c,0xc(%esp)$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	f0 $/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	f0 $/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	c7 44 24 04 d9 02 00 	movl   $0x2d9,0x4(%esp)$/;"	l
f0102358	obj/kern/kernel.asm	/^f0102358:	00 $/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	e8 9d df ff ff       	call   f0100302 <_panic>$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	e8 fd f1 ff ff       	call   f010156d <page2pa>$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	75 24                	jne    f010239b <check_page_free_list+0x2a4>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	c7 44 24 0c 5f af 10 	movl   $0xf010af5f,0xc(%esp)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	f0 $/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	f0 $/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	00 $/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	e8 67 df ff ff       	call   f0100302 <_panic>$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	e8 c7 f1 ff ff       	call   f010156d <page2pa>$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	76 34                	jbe    f01023e1 <check_page_free_list+0x2ea>$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	e8 11 f2 ff ff       	call   f01015c9 <page2kva>$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	73 24                	jae    f01023e1 <check_page_free_list+0x2ea>$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	c7 44 24 0c 7c af 10 	movl   $0xf010af7c,0xc(%esp)$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	f0 $/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	f0 $/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	c7 44 24 04 db 02 00 	movl   $0x2db,0x4(%esp)$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	00 $/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	e8 21 df ff ff       	call   f0100302 <_panic>$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	e8 81 f1 ff ff       	call   f010156d <page2pa>$/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	75 24                	jne    f0102417 <check_page_free_list+0x320>$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	c7 44 24 0c c1 af 10 	movl   $0xf010afc1,0xc(%esp)$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	f0 $/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	f0 $/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	c7 44 24 04 dd 02 00 	movl   $0x2dd,0x4(%esp)$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	00 $/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	e8 eb de ff ff       	call   f0100302 <_panic>$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	e8 4b f1 ff ff       	call   f010156d <page2pa>$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	77 06                	ja     f010242f <check_page_free_list+0x338>$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	eb 04                	jmp    f0102433 <check_page_free_list+0x33c>$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	8b 00                	mov    (%eax),%eax$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	0f 85 e3 fd ff ff    	jne    f0102228 <check_page_free_list+0x131>$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	7f 24                	jg     f010246f <check_page_free_list+0x378>$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	c7 44 24 0c de af 10 	movl   $0xf010afde,0xc(%esp)$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	f0 $/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	f0 $/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	00 $/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	e8 93 de ff ff       	call   f0100302 <_panic>$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	7f 24                	jg     f0102499 <check_page_free_list+0x3a2>$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	c7 44 24 0c f0 af 10 	movl   $0xf010aff0,0xc(%esp)$/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	f0 $/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	f0 $/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	00 $/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	e8 69 de ff ff       	call   f0100302 <_panic>$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	c9                   	leave  $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	c3                   	ret    $/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b <check_page_alloc>:$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	55                   	push   %ebp$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	89 e5                	mov    %esp,%ebp$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	85 c0                	test   %eax,%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	75 1c                	jne    f01024c6 <check_page_alloc+0x2b>$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	c7 44 24 08 01 b0 10 	movl   $0xf010b001,0x8(%esp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	f0 $/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c7 44 24 04 f7 02 00 	movl   $0x2f7,0x4(%esp)$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	00 $/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	e8 3c de ff ff       	call   f0100302 <_panic>$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	eb 0c                	jmp    f01024e3 <check_page_alloc+0x48>$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	8b 00                	mov    (%eax),%eax$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	75 ee                	jne    f01024d7 <check_page_alloc+0x3c>$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	e8 03 f6 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	75 24                	jne    f0102535 <check_page_alloc+0x9a>$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	c7 44 24 0c 1c b0 10 	movl   $0xf010b01c,0xc(%esp)$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	f0 $/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	f0 $/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	00 $/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	e8 cd dd ff ff       	call   f0100302 <_panic>$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	e8 ca f5 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	75 24                	jne    f010256e <check_page_alloc+0xd3>$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	c7 44 24 0c 32 b0 10 	movl   $0xf010b032,0xc(%esp)$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	f0 $/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	f0 $/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	00 $/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	e8 94 dd ff ff       	call   f0100302 <_panic>$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	e8 91 f5 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	75 24                	jne    f01025a7 <check_page_alloc+0x10c>$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	c7 44 24 0c 48 b0 10 	movl   $0xf010b048,0xc(%esp)$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	f0 $/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	f0 $/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	00 $/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	e8 5b dd ff ff       	call   f0100302 <_panic>$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	75 24                	jne    f01025d1 <check_page_alloc+0x136>$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	c7 44 24 0c 5e b0 10 	movl   $0xf010b05e,0xc(%esp)$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	f0 $/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	f0 $/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	00 $/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	e8 31 dd ff ff       	call   f0100302 <_panic>$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	74 08                	je     f01025df <check_page_alloc+0x144>$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	75 24                	jne    f0102603 <check_page_alloc+0x168>$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	c7 44 24 0c 62 b0 10 	movl   $0xf010b062,0xc(%esp)$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	f0 $/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	f0 $/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 44 24 04 04 03 00 	movl   $0x304,0x4(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	00 $/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	e8 ff dc ff ff       	call   f0100302 <_panic>$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	74 10                	je     f0102619 <check_page_alloc+0x17e>$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	74 08                	je     f0102619 <check_page_alloc+0x17e>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	75 24                	jne    f010263d <check_page_alloc+0x1a2>$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	c7 44 24 0c 74 b0 10 	movl   $0xf010b074,0xc(%esp)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	f0 $/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	f0 $/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	c7 44 24 04 05 03 00 	movl   $0x305,0x4(%esp)$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	00 $/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	e8 c5 dc ff ff       	call   f0100302 <_panic>$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	e8 25 ef ff ff       	call   f010156d <page2pa>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	8b 15 28 0f 2f f0    	mov    0xf02f0f28,%edx$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	39 d0                	cmp    %edx,%eax$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	72 24                	jb     f0102679 <check_page_alloc+0x1de>$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	c7 44 24 0c 94 b0 10 	movl   $0xf010b094,0xc(%esp)$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	f0 $/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	f0 $/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	00 $/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	e8 89 dc ff ff       	call   f0100302 <_panic>$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	e8 e9 ee ff ff       	call   f010156d <page2pa>$/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	8b 15 28 0f 2f f0    	mov    0xf02f0f28,%edx$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	39 d0                	cmp    %edx,%eax$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	72 24                	jb     f01026b5 <check_page_alloc+0x21a>$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	c7 44 24 0c b1 b0 10 	movl   $0xf010b0b1,0xc(%esp)$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	f0 $/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	f0 $/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	00 $/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	e8 4d dc ff ff       	call   f0100302 <_panic>$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	e8 ad ee ff ff       	call   f010156d <page2pa>$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	8b 15 28 0f 2f f0    	mov    0xf02f0f28,%edx$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	39 d0                	cmp    %edx,%eax$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	72 24                	jb     f01026f1 <check_page_alloc+0x256>$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	c7 44 24 0c ce b0 10 	movl   $0xf010b0ce,0xc(%esp)$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	f0 $/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	f0 $/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	00 $/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	e8 11 dc ff ff       	call   f0100302 <_panic>$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	c7 05 30 02 2f f0 00 	movl   $0x0,0xf02f0230$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	00 00 00 $/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	e8 fc f3 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	85 c0                	test   %eax,%eax$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	74 24                	je     f0102737 <check_page_alloc+0x29c>$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	f0 $/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	f0 $/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	00 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	e8 cb db ff ff       	call   f0100302 <_panic>$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	e8 5c f4 ff ff       	call   f0101b9e <page_free>$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	e8 51 f4 ff ff       	call   f0101b9e <page_free>$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	e8 46 f4 ff ff       	call   f0101b9e <page_free>$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	e8 94 f3 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	75 24                	jne    f01027a4 <check_page_alloc+0x309>$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 44 24 0c 1c b0 10 	movl   $0xf010b01c,0xc(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	f0 $/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	f0 $/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	c7 44 24 04 16 03 00 	movl   $0x316,0x4(%esp)$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	00 $/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	e8 5e db ff ff       	call   f0100302 <_panic>$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	e8 5b f3 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	75 24                	jne    f01027dd <check_page_alloc+0x342>$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	c7 44 24 0c 32 b0 10 	movl   $0xf010b032,0xc(%esp)$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	f0 $/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	f0 $/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	00 $/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	e8 25 db ff ff       	call   f0100302 <_panic>$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	e8 22 f3 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	75 24                	jne    f0102816 <check_page_alloc+0x37b>$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	c7 44 24 0c 48 b0 10 	movl   $0xf010b048,0xc(%esp)$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	f0 $/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	f0 $/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	c7 44 24 04 18 03 00 	movl   $0x318,0x4(%esp)$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	00 $/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	e8 ec da ff ff       	call   f0100302 <_panic>$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	75 24                	jne    f0102840 <check_page_alloc+0x3a5>$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	c7 44 24 0c 5e b0 10 	movl   $0xf010b05e,0xc(%esp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	f0 $/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	f0 $/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	00 $/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	e8 c2 da ff ff       	call   f0100302 <_panic>$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	74 08                	je     f010284e <check_page_alloc+0x3b3>$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	75 24                	jne    f0102872 <check_page_alloc+0x3d7>$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	c7 44 24 0c 62 b0 10 	movl   $0xf010b062,0xc(%esp)$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	f0 $/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	f0 $/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	00 $/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	e8 90 da ff ff       	call   f0100302 <_panic>$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	74 10                	je     f0102888 <check_page_alloc+0x3ed>$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	74 08                	je     f0102888 <check_page_alloc+0x3ed>$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	75 24                	jne    f01028ac <check_page_alloc+0x411>$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	c7 44 24 0c 74 b0 10 	movl   $0xf010b074,0xc(%esp)$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	f0 $/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	f0 $/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	00 $/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	e8 56 da ff ff       	call   f0100302 <_panic>$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	e8 53 f2 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	85 c0                	test   %eax,%eax$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	74 24                	je     f01028e0 <check_page_alloc+0x445>$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	f0 $/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	f0 $/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	c7 44 24 04 1c 03 00 	movl   $0x31c,0x4(%esp)$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	00 $/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	e8 22 da ff ff       	call   f0100302 <_panic>$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	e8 de ec ff ff       	call   f01015c9 <page2kva>$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	00 $/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	00 $/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	e8 b7 5c 00 00       	call   f01085ba <memset>$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	e8 90 f2 ff ff       	call   f0101b9e <page_free>$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	e8 f1 f1 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	75 24                	jne    f0102947 <check_page_alloc+0x4ac>$/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	c7 44 24 0c fa b0 10 	movl   $0xf010b0fa,0xc(%esp)$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	f0 $/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	f0 $/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	00 $/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	e8 bb d9 ff ff       	call   f0100302 <_panic>$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	74 08                	je     f0102955 <check_page_alloc+0x4ba>$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	74 24                	je     f0102979 <check_page_alloc+0x4de>$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	c7 44 24 0c 18 b1 10 	movl   $0xf010b118,0xc(%esp)$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	f0 $/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	f0 $/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	c7 44 24 04 22 03 00 	movl   $0x322,0x4(%esp)$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	00 $/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	e8 89 d9 ff ff       	call   f0100302 <_panic>$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	e8 45 ec ff ff       	call   f01015c9 <page2kva>$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	eb 37                	jmp    f01029c7 <check_page_alloc+0x52c>$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	01 d0                	add    %edx,%eax$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	84 c0                	test   %al,%al$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	74 24                	je     f01029c3 <check_page_alloc+0x528>$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	c7 44 24 0c 28 b1 10 	movl   $0xf010b128,0xc(%esp)$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	f0 $/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	f0 $/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	00 $/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	e8 3f d9 ff ff       	call   f0100302 <_panic>$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%ebp)$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	7e c0                	jle    f0102990 <check_page_alloc+0x4f5>$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	e8 bb f1 ff ff       	call   f0101b9e <page_free>$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	e8 b0 f1 ff ff       	call   f0101b9e <page_free>$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	e8 a5 f1 ff ff       	call   f0101b9e <page_free>$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	eb 0c                	jmp    f0102a0f <check_page_alloc+0x574>$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	8b 00                	mov    (%eax),%eax$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	75 ee                	jne    f0102a03 <check_page_alloc+0x568>$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	74 24                	je     f0102a3f <check_page_alloc+0x5a4>$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	c7 44 24 0c 32 b1 10 	movl   $0xf010b132,0xc(%esp)$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	f0 $/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	f0 $/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	c7 44 24 04 32 03 00 	movl   $0x332,0x4(%esp)$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	00 $/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	e8 c3 d8 ff ff       	call   f0100302 <_panic>$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	c7 04 24 40 b1 10 f0 	movl   $0xf010b140,(%esp)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	e8 f4 28 00 00       	call   f010533f <cprintf>$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	c9                   	leave  $/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	c3                   	ret    $/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d <check_kern_pgdir>:$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	55                   	push   %ebp$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	53                   	push   %ebx$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102a72	obj/kern/kernel.asm	/^f0102a72:	01 d0                	add    %edx,%eax$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	89 d0                	mov    %edx,%eax$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	29 c2                	sub    %eax,%edx$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	89 d0                	mov    %edx,%eax$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	eb 6a                	jmp    f0102b04 <check_kern_pgdir+0xb7>$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	2d 00 00 00 11       	sub    $0x11000000,%eax$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	e8 a3 03 00 00       	call   f0102e54 <check_va2pa>$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	89 c3                	mov    %eax,%ebx$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	00 $/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102acb	obj/kern/kernel.asm	/^f0102acb:	e8 20 ea ff ff       	call   f01014f0 <_paddr>$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	01 d0                	add    %edx,%eax$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	74 24                	je     f0102afd <check_kern_pgdir+0xb0>$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	c7 44 24 0c 60 b1 10 	movl   $0xf010b160,0xc(%esp)$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	f0 $/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	f0 $/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	00 $/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	e8 05 d8 ff ff       	call   f0100302 <_panic>$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	72 8e                	jb     f0102a9a <check_kern_pgdir+0x4d>$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	c7 45 e0 00 10 00 00 	movl   $0x1000,-0x20(%ebp)$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	05 ff 0f 02 00       	add    $0x20fff,%eax$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	f7 75 e0             	divl   -0x20(%ebp)$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	89 d0                	mov    %edx,%eax$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	29 c2                	sub    %eax,%edx$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	89 d0                	mov    %edx,%eax$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	eb 6a                	jmp    f0102ba8 <check_kern_pgdir+0x15b>$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	2d 00 00 40 11       	sub    $0x11400000,%eax$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	e8 ff 02 00 00       	call   f0102e54 <check_va2pa>$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	89 c3                	mov    %eax,%ebx$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	a1 3c 02 2f f0       	mov    0xf02f023c,%eax$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	00 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 7c e9 ff ff       	call   f01014f0 <_paddr>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	01 d0                	add    %edx,%eax$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	74 24                	je     f0102ba1 <check_kern_pgdir+0x154>$/;"	l
f0102b7d	obj/kern/kernel.asm	/^f0102b7d:	c7 44 24 0c 94 b1 10 	movl   $0xf010b194,0xc(%esp)$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	f0 $/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	f0 $/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	00 $/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	e8 61 d7 ff ff       	call   f0100302 <_panic>$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	72 8e                	jb     f0102b3e <check_kern_pgdir+0xf1>$/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	eb 47                	jmp    f0102c00 <check_kern_pgdir+0x1b3>$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	e8 84 02 00 00       	call   f0102e54 <check_va2pa>$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	74 24                	je     f0102bf9 <check_kern_pgdir+0x1ac>$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	c7 44 24 0c c8 b1 10 	movl   $0xf010b1c8,0xc(%esp)$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	f0 $/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	f0 $/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	00 $/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	e8 09 d7 ff ff       	call   f0100302 <_panic>$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	77 ac                	ja     f0102bb9 <check_kern_pgdir+0x16c>$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	e9 f9 00 00 00       	jmp    f0102d12 <check_kern_pgdir+0x2c5>$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	29 d0                	sub    %edx,%eax$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	2d 00 00 01 10       	sub    $0x10010000,%eax$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	eb 75                	jmp    f0102cac <check_kern_pgdir+0x25f>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	01 d0                	add    %edx,%eax$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	05 00 80 00 00       	add    $0x8000,%eax$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	e8 01 02 00 00       	call   f0102e54 <check_va2pa>$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	89 c3                	mov    %eax,%ebx$/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	05 00 20 2f f0       	add    $0xf02f2000,%eax$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	00 $/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	e8 78 e8 ff ff       	call   f01014f0 <_paddr>$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	01 d0                	add    %edx,%eax$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	74 24                	je     f0102ca5 <check_kern_pgdir+0x258>$/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	c7 44 24 0c f0 b1 10 	movl   $0xf010b1f0,0xc(%esp)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	f0 $/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	f0 $/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	00 $/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	e8 5d d6 ff ff       	call   f0100302 <_panic>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	81 7d f4 ff 7f 00 00 	cmpl   $0x7fff,-0xc(%ebp)$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	76 82                	jbe    f0102c37 <check_kern_pgdir+0x1ea>$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	eb 47                	jmp    f0102d05 <check_kern_pgdir+0x2b8>$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	01 d0                	add    %edx,%eax$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	e8 7f 01 00 00       	call   f0102e54 <check_va2pa>$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	74 24                	je     f0102cfe <check_kern_pgdir+0x2b1>$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	c7 44 24 0c 38 b2 10 	movl   $0xf010b238,0xc(%esp)$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	f0 $/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	f0 $/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	00 $/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	e8 04 d6 ff ff       	call   f0100302 <_panic>$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	81 7d f4 ff 7f 00 00 	cmpl   $0x7fff,-0xc(%ebp)$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	76 b0                	jbe    f0102cbe <check_kern_pgdir+0x271>$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	83 7d f0 07          	cmpl   $0x7,-0x10(%ebp)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	0f 86 fd fe ff ff    	jbe    f0102c19 <check_kern_pgdir+0x1cc>$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	e9 0d 01 00 00       	jmp    f0102e35 <check_kern_pgdir+0x3e8>$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	2d bb 03 00 00       	sub    $0x3bb,%eax$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	77 41                	ja     f0102d76 <check_kern_pgdir+0x329>$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	01 d0                	add    %edx,%eax$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	8b 00                	mov    (%eax),%eax$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	85 c0                	test   %eax,%eax$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	75 24                	jne    f0102d71 <check_kern_pgdir+0x324>$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	c7 44 24 0c 5b b2 10 	movl   $0xf010b25b,0xc(%esp)$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	f0 $/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	f0 $/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	00 $/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	e8 91 d5 ff ff       	call   f0100302 <_panic>$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	e9 bb 00 00 00       	jmp    f0102e31 <check_kern_pgdir+0x3e4>$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	81 7d f4 bf 03 00 00 	cmpl   $0x3bf,-0xc(%ebp)$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	76 78                	jbe    f0102df7 <check_kern_pgdir+0x3aa>$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	01 d0                	add    %edx,%eax$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	8b 00                	mov    (%eax),%eax$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	85 c0                	test   %eax,%eax$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	75 24                	jne    f0102dbb <check_kern_pgdir+0x36e>$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c7 44 24 0c 5b b2 10 	movl   $0xf010b25b,0xc(%esp)$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	f0 $/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	f0 $/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	00 $/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	e8 47 d5 ff ff       	call   f0100302 <_panic>$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	01 d0                	add    %edx,%eax$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	8b 00                	mov    (%eax),%eax$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	83 e0 02             	and    $0x2,%eax$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	85 c0                	test   %eax,%eax$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	75 5d                	jne    f0102e30 <check_kern_pgdir+0x3e3>$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	c7 44 24 0c 6c b2 10 	movl   $0xf010b26c,0xc(%esp)$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	f0 $/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	f0 $/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	00 $/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	e8 0b d5 ff ff       	call   f0100302 <_panic>$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	01 d0                	add    %edx,%eax$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	8b 00                	mov    (%eax),%eax$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	85 c0                	test   %eax,%eax$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	74 24                	je     f0102e30 <check_kern_pgdir+0x3e3>$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	c7 44 24 0c 7d b2 10 	movl   $0xf010b27d,0xc(%esp)$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	f0 $/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	f0 $/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	c7 44 24 04 6f 03 00 	movl   $0x36f,0x4(%esp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	00 $/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	e8 d2 d4 ff ff       	call   f0100302 <_panic>$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	90                   	nop$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	0f 86 e6 fe ff ff    	jbe    f0102d28 <check_kern_pgdir+0x2db>$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	c7 04 24 8c b2 10 f0 	movl   $0xf010b28c,(%esp)$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	e8 f1 24 00 00       	call   f010533f <cprintf>$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	83 c4 34             	add    $0x34,%esp$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	5b                   	pop    %ebx$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	5d                   	pop    %ebp$/;"	l
f0102e53	obj/kern/kernel.asm	/^f0102e53:	c3                   	ret    $/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54 <check_va2pa>:$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	55                   	push   %ebp$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	01 45 08             	add    %eax,0x8(%ebp)$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	8b 00                	mov    (%eax),%eax$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	85 c0                	test   %eax,%eax$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	75 07                	jne    f0102e79 <check_va2pa+0x25>$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	eb 6a                	jmp    f0102ee3 <check_va2pa+0x8f>$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	8b 00                	mov    (%eax),%eax$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	c7 44 24 04 83 03 00 	movl   $0x383,0x4(%esp)$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	00 $/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	e8 90 e6 ff ff       	call   f010152b <_kaddr>$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102ea4	obj/kern/kernel.asm	/^f0102ea4:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	01 d0                	add    %edx,%eax$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	8b 00                	mov    (%eax),%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	85 c0                	test   %eax,%eax$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	75 07                	jne    f0102ec5 <check_va2pa+0x71>$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	eb 1e                	jmp    f0102ee3 <check_va2pa+0x8f>$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	01 d0                	add    %edx,%eax$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	8b 00                	mov    (%eax),%eax$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	c9                   	leave  $/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	c3                   	ret    $/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5 <check_page>:$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	55                   	push   %ebp$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	53                   	push   %ebx$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	83 ec 44             	sub    $0x44,%esp$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	e8 00 ec ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	75 24                	jne    f0102f38 <check_page+0x53>$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	c7 44 24 0c 1c b0 10 	movl   $0xf010b01c,0xc(%esp)$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	f0 $/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	f0 $/;"	l
f0102f24	obj/kern/kernel.asm	/^f0102f24:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	00 $/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	e8 ca d3 ff ff       	call   f0100302 <_panic>$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	e8 c7 eb ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	75 24                	jne    f0102f71 <check_page+0x8c>$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	c7 44 24 0c 32 b0 10 	movl   $0xf010b032,0xc(%esp)$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	f0 $/;"	l
f0102f55	obj/kern/kernel.asm	/^f0102f55:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	f0 $/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	00 $/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	e8 91 d3 ff ff       	call   f0100302 <_panic>$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	e8 8e eb ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	75 24                	jne    f0102faa <check_page+0xc5>$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	c7 44 24 0c 48 b0 10 	movl   $0xf010b048,0xc(%esp)$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	f0 $/;"	l
f0102f8e	obj/kern/kernel.asm	/^f0102f8e:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	f0 $/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	00 $/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	e8 58 d3 ff ff       	call   f0100302 <_panic>$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	75 24                	jne    f0102fd4 <check_page+0xef>$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	c7 44 24 0c 5e b0 10 	movl   $0xf010b05e,0xc(%esp)$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	f0 $/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	f0 $/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	00 $/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	e8 2e d3 ff ff       	call   f0100302 <_panic>$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	74 08                	je     f0102fe2 <check_page+0xfd>$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	75 24                	jne    f0103006 <check_page+0x121>$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c7 44 24 0c 62 b0 10 	movl   $0xf010b062,0xc(%esp)$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	f0 $/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	f0 $/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	00 $/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	e8 fc d2 ff ff       	call   f0100302 <_panic>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	74 10                	je     f010301c <check_page+0x137>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	74 08                	je     f010301c <check_page+0x137>$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	75 24                	jne    f0103040 <check_page+0x15b>$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	c7 44 24 0c 74 b0 10 	movl   $0xf010b074,0xc(%esp)$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	f0 $/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	f0 $/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	00 $/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	e8 c2 d2 ff ff       	call   f0100302 <_panic>$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	a1 30 02 2f f0       	mov    0xf02f0230,%eax$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	c7 05 30 02 2f f0 00 	movl   $0x0,0xf02f0230$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	00 00 00 $/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	e8 ad ea ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	85 c0                	test   %eax,%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	74 24                	je     f0103086 <check_page+0x1a1>$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	f0 $/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	f0 $/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	c7 44 24 04 a5 03 00 	movl   $0x3a5,0x4(%esp)$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	00 $/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	e8 7c d2 ff ff       	call   f0100302 <_panic>$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	8d 55 cc             	lea    -0x34(%ebp),%edx$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	00 $/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	e8 ac ed ff ff       	call   f0101e4e <page_lookup>$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	85 c0                	test   %eax,%eax$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	74 24                	je     f01030ca <check_page+0x1e5>$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	c7 44 24 0c ac b2 10 	movl   $0xf010b2ac,0xc(%esp)$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	f0 $/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	f0 $/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	00 $/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	e8 38 d2 ff ff       	call   f0100302 <_panic>$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	00 $/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	00 $/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	e8 b3 ec ff ff       	call   f0101da1 <page_insert>$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	85 c0                	test   %eax,%eax$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	78 24                	js     f0103116 <check_page+0x231>$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	c7 44 24 0c e4 b2 10 	movl   $0xf010b2e4,0xc(%esp)$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	f0 $/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	f0 $/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	00 $/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	e8 ec d1 ff ff       	call   f0100302 <_panic>$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	e8 7d ea ff ff       	call   f0101b9e <page_free>$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	00 $/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	00 $/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	e8 5c ec ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	85 c0                	test   %eax,%eax$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	74 24                	je     f010316d <check_page+0x288>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 44 24 0c 14 b3 10 	movl   $0xf010b314,0xc(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	f0 $/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	f0 $/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	00 $/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	e8 95 d1 ff ff       	call   f0100302 <_panic>$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	8b 00                	mov    (%eax),%eax$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	89 c3                	mov    %eax,%ebx$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	e8 e7 e3 ff ff       	call   f010156d <page2pa>$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	74 24                	je     f01031ae <check_page+0x2c9>$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	c7 44 24 0c 44 b3 10 	movl   $0xf010b344,0xc(%esp)$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	f0 $/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	f0 $/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	00 $/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	e8 54 d1 ff ff       	call   f0100302 <_panic>$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	00 $/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	e8 91 fc ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	89 c3                	mov    %eax,%ebx$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	e8 9d e3 ff ff       	call   f010156d <page2pa>$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	74 24                	je     f01031f8 <check_page+0x313>$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	c7 44 24 0c 6c b3 10 	movl   $0xf010b36c,0xc(%esp)$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	f0 $/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	f0 $/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	00 $/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	e8 0a d1 ff ff       	call   f0100302 <_panic>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	74 24                	je     f0103229 <check_page+0x344>$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	c7 44 24 0c 99 b3 10 	movl   $0xf010b399,0xc(%esp)$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	f0 $/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	f0 $/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	00 $/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	e8 d9 d0 ff ff       	call   f0100302 <_panic>$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	74 24                	je     f010325a <check_page+0x375>$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	c7 44 24 0c aa b3 10 	movl   $0xf010b3aa,0xc(%esp)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	f0 $/;"	l
f010323e	obj/kern/kernel.asm	/^f010323e:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	f0 $/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	00 $/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	e8 a8 d0 ff ff       	call   f0100302 <_panic>$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	00 $/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	00 $/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	e8 23 eb ff ff       	call   f0101da1 <page_insert>$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	85 c0                	test   %eax,%eax$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	74 24                	je     f01032a6 <check_page+0x3c1>$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	c7 44 24 0c bc b3 10 	movl   $0xf010b3bc,0xc(%esp)$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	f0 $/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	f0 $/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	00 $/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	e8 5c d0 ff ff       	call   f0100302 <_panic>$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	00 $/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	e8 99 fb ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	89 c3                	mov    %eax,%ebx$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	e8 a5 e2 ff ff       	call   f010156d <page2pa>$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	39 c3                	cmp    %eax,%ebx$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	74 24                	je     f01032f0 <check_page+0x40b>$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	c7 44 24 0c f8 b3 10 	movl   $0xf010b3f8,0xc(%esp)$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	f0 $/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	f0 $/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	00 $/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	e8 12 d0 ff ff       	call   f0100302 <_panic>$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	74 24                	je     f0103321 <check_page+0x43c>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	c7 44 24 0c 28 b4 10 	movl   $0xf010b428,0xc(%esp)$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	f0 $/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	f0 $/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	00 $/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	e8 e1 cf ff ff       	call   f0100302 <_panic>$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	e8 de e7 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	85 c0                	test   %eax,%eax$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	74 24                	je     f0103355 <check_page+0x470>$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	f0 $/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	f0 $/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	c7 44 24 04 bb 03 00 	movl   $0x3bb,0x4(%esp)$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	00 $/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	e8 ad cf ff ff       	call   f0100302 <_panic>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	00 $/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	00 $/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	e8 28 ea ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	85 c0                	test   %eax,%eax$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	74 24                	je     f01033a1 <check_page+0x4bc>$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	c7 44 24 0c bc b3 10 	movl   $0xf010b3bc,0xc(%esp)$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	f0 $/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	f0 $/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	00 $/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	e8 61 cf ff ff       	call   f0100302 <_panic>$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	00 $/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	e8 9e fa ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	e8 aa e1 ff ff       	call   f010156d <page2pa>$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	74 24                	je     f01033eb <check_page+0x506>$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	c7 44 24 0c f8 b3 10 	movl   $0xf010b3f8,0xc(%esp)$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	f0 $/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	f0 $/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	00 $/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	e8 17 cf ff ff       	call   f0100302 <_panic>$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	74 24                	je     f010341c <check_page+0x537>$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	c7 44 24 0c 28 b4 10 	movl   $0xf010b428,0xc(%esp)$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	f0 $/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	f0 $/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	00 $/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	e8 e6 ce ff ff       	call   f0100302 <_panic>$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	e8 e3 e6 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	85 c0                	test   %eax,%eax$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	74 24                	je     f0103450 <check_page+0x56b>$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f0103433	obj/kern/kernel.asm	/^f0103433:	f0 $/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	f0 $/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	00 $/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	e8 b2 ce ff ff       	call   f0100302 <_panic>$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	8b 00                	mov    (%eax),%eax$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	00 $/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	e8 b7 e0 ff ff       	call   f010152b <_kaddr>$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	00 $/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	00 $/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	e8 b2 e7 ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	83 c2 04             	add    $0x4,%edx$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	39 d0                	cmp    %edx,%eax$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	74 24                	je     f01034c2 <check_page+0x5dd>$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	c7 44 24 0c 3c b4 10 	movl   $0xf010b43c,0xc(%esp)$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	f0 $/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	f0 $/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	00 $/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	e8 40 ce ff ff       	call   f0100302 <_panic>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	00 $/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	00 $/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	e8 bb e8 ff ff       	call   f0101da1 <page_insert>$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	85 c0                	test   %eax,%eax$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	74 24                	je     f010350e <check_page+0x629>$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	c7 44 24 0c 7c b4 10 	movl   $0xf010b47c,0xc(%esp)$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	f0 $/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	f0 $/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	00 $/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	e8 f4 cd ff ff       	call   f0100302 <_panic>$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	00 $/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	e8 31 f9 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	89 c3                	mov    %eax,%ebx$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	e8 3d e0 ff ff       	call   f010156d <page2pa>$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	74 24                	je     f0103558 <check_page+0x673>$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	c7 44 24 0c f8 b3 10 	movl   $0xf010b3f8,0xc(%esp)$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	f0 $/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	f0 $/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	00 $/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	e8 aa cd ff ff       	call   f0100302 <_panic>$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	74 24                	je     f0103589 <check_page+0x6a4>$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	c7 44 24 0c 28 b4 10 	movl   $0xf010b428,0xc(%esp)$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	f0 $/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	f0 $/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	00 $/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	e8 79 cd ff ff       	call   f0100302 <_panic>$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	00 $/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	00 $/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	e8 a0 e6 ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	8b 00                	mov    (%eax),%eax$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	83 e0 04             	and    $0x4,%eax$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	85 c0                	test   %eax,%eax$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	75 24                	jne    f01035d3 <check_page+0x6ee>$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	c7 44 24 0c bc b4 10 	movl   $0xf010b4bc,0xc(%esp)$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	f0 $/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	f0 $/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	00 $/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	e8 2f cd ff ff       	call   f0100302 <_panic>$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	8b 00                	mov    (%eax),%eax$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	83 e0 04             	and    $0x4,%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	85 c0                	test   %eax,%eax$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	75 24                	jne    f0103605 <check_page+0x720>$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	c7 44 24 0c ef b4 10 	movl   $0xf010b4ef,0xc(%esp)$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	f0 $/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	f0 $/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	00 $/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	e8 fd cc ff ff       	call   f0100302 <_panic>$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	00 $/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	00 $/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	e8 78 e7 ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	85 c0                	test   %eax,%eax$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	74 24                	je     f0103651 <check_page+0x76c>$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	c7 44 24 0c bc b3 10 	movl   $0xf010b3bc,0xc(%esp)$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	f0 $/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	f0 $/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	00 $/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	e8 b1 cc ff ff       	call   f0100302 <_panic>$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	00 $/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	00 $/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	e8 d8 e5 ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	8b 00                	mov    (%eax),%eax$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	83 e0 02             	and    $0x2,%eax$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	85 c0                	test   %eax,%eax$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	75 24                	jne    f010369b <check_page+0x7b6>$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	c7 44 24 0c 08 b5 10 	movl   $0xf010b508,0xc(%esp)$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	f0 $/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	f0 $/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	00 $/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	e8 67 cc ff ff       	call   f0100302 <_panic>$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	00 $/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	00 $/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	e8 8e e5 ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	8b 00                	mov    (%eax),%eax$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	83 e0 04             	and    $0x4,%eax$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	85 c0                	test   %eax,%eax$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	74 24                	je     f01036e5 <check_page+0x800>$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	c7 44 24 0c 3c b5 10 	movl   $0xf010b53c,0xc(%esp)$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	f0 $/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	f0 $/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	00 $/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	e8 1d cc ff ff       	call   f0100302 <_panic>$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	00 $/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	00 $/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	e8 98 e6 ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	85 c0                	test   %eax,%eax$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	78 24                	js     f0103731 <check_page+0x84c>$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	c7 44 24 0c 74 b5 10 	movl   $0xf010b574,0xc(%esp)$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	f0 $/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	f0 $/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	00 $/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	e8 d1 cb ff ff       	call   f0100302 <_panic>$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	00 $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	00 $/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	e8 4c e6 ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	85 c0                	test   %eax,%eax$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	74 24                	je     f010377d <check_page+0x898>$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	c7 44 24 0c ac b5 10 	movl   $0xf010b5ac,0xc(%esp)$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	f0 $/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	f0 $/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	00 $/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	e8 85 cb ff ff       	call   f0100302 <_panic>$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	00 $/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	00 $/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	e8 ac e4 ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	8b 00                	mov    (%eax),%eax$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	83 e0 04             	and    $0x4,%eax$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	85 c0                	test   %eax,%eax$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	74 24                	je     f01037c7 <check_page+0x8e2>$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	c7 44 24 0c 3c b5 10 	movl   $0xf010b53c,0xc(%esp)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	f0 $/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	f0 $/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	00 $/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	e8 3b cb ff ff       	call   f0100302 <_panic>$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	00 $/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	e8 78 f6 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	89 c3                	mov    %eax,%ebx$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	e8 84 dd ff ff       	call   f010156d <page2pa>$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	39 c3                	cmp    %eax,%ebx$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	74 24                	je     f0103811 <check_page+0x92c>$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	c7 44 24 0c e8 b5 10 	movl   $0xf010b5e8,0xc(%esp)$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	f0 $/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	f0 $/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	00 $/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	e8 f1 ca ff ff       	call   f0100302 <_panic>$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	00 $/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	e8 2e f6 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	89 c3                	mov    %eax,%ebx$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	e8 3a dd ff ff       	call   f010156d <page2pa>$/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	74 24                	je     f010385b <check_page+0x976>$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	c7 44 24 0c 14 b6 10 	movl   $0xf010b614,0xc(%esp)$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	f0 $/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	f0 $/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	00 $/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	e8 a7 ca ff ff       	call   f0100302 <_panic>$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	74 24                	je     f010388c <check_page+0x9a7>$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	c7 44 24 0c 44 b6 10 	movl   $0xf010b644,0xc(%esp)$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	f0 $/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	f0 $/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	00 $/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	e8 76 ca ff ff       	call   f0100302 <_panic>$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	66 85 c0             	test   %ax,%ax$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	74 24                	je     f01038bc <check_page+0x9d7>$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	c7 44 24 0c 55 b6 10 	movl   $0xf010b655,0xc(%esp)$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	f0 $/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	f0 $/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	00 $/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	e8 46 ca ff ff       	call   f0100302 <_panic>$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	e8 43 e2 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	74 08                	je     f01038d9 <check_page+0x9f4>$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	74 24                	je     f01038fd <check_page+0xa18>$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	c7 44 24 0c 68 b6 10 	movl   $0xf010b668,0xc(%esp)$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	f0 $/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	f0 $/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	00 $/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	e8 05 ca ff ff       	call   f0100302 <_panic>$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	00 $/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	e8 a7 e5 ff ff       	call   f0101eb9 <page_remove>$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	00 $/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	e8 2d f5 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	74 24                	je     f0103950 <check_page+0xa6b>$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	c7 44 24 0c 8c b6 10 	movl   $0xf010b68c,0xc(%esp)$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	f0 $/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	f0 $/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	00 $/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	e8 b2 c9 ff ff       	call   f0100302 <_panic>$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	00 $/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	e8 ef f4 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	89 c3                	mov    %eax,%ebx$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	e8 fb db ff ff       	call   f010156d <page2pa>$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	74 24                	je     f010399a <check_page+0xab5>$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	c7 44 24 0c 14 b6 10 	movl   $0xf010b614,0xc(%esp)$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	f0 $/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	f0 $/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	00 $/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	e8 68 c9 ff ff       	call   f0100302 <_panic>$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	74 24                	je     f01039cb <check_page+0xae6>$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	c7 44 24 0c 99 b3 10 	movl   $0xf010b399,0xc(%esp)$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	f0 $/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	f0 $/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	00 $/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	e8 37 c9 ff ff       	call   f0100302 <_panic>$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	66 85 c0             	test   %ax,%ax$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	74 24                	je     f01039fb <check_page+0xb16>$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	c7 44 24 0c 55 b6 10 	movl   $0xf010b655,0xc(%esp)$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	f0 $/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	f0 $/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	00 $/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	e8 07 c9 ff ff       	call   f0100302 <_panic>$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	00 $/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	00 $/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	e8 82 e3 ff ff       	call   f0101da1 <page_insert>$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	85 c0                	test   %eax,%eax$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	74 24                	je     f0103a47 <check_page+0xb62>$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	c7 44 24 0c b0 b6 10 	movl   $0xf010b6b0,0xc(%esp)$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	f0 $/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	f0 $/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	00 $/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	e8 bb c8 ff ff       	call   f0100302 <_panic>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	66 85 c0             	test   %ax,%ax$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	75 24                	jne    f0103a77 <check_page+0xb92>$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	c7 44 24 0c e5 b6 10 	movl   $0xf010b6e5,0xc(%esp)$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	f0 $/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	f0 $/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	00 $/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	e8 8b c8 ff ff       	call   f0100302 <_panic>$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	8b 00                	mov    (%eax),%eax$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	85 c0                	test   %eax,%eax$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	74 24                	je     f0103aa4 <check_page+0xbbf>$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	c7 44 24 0c f1 b6 10 	movl   $0xf010b6f1,0xc(%esp)$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	f0 $/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	f0 $/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	00 $/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	e8 5e c8 ff ff       	call   f0100302 <_panic>$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	00 $/;"	l
f0103ab1	obj/kern/kernel.asm	/^f0103ab1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	e8 00 e4 ff ff       	call   f0101eb9 <page_remove>$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	00 $/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	e8 86 f3 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	74 24                	je     f0103af7 <check_page+0xc12>$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	c7 44 24 0c 8c b6 10 	movl   $0xf010b68c,0xc(%esp)$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	f0 $/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	f0 $/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	00 $/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	e8 0b c8 ff ff       	call   f0100302 <_panic>$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	00 $/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	e8 48 f3 ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	74 24                	je     f0103b35 <check_page+0xc50>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	c7 44 24 0c 08 b7 10 	movl   $0xf010b708,0xc(%esp)$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	f0 $/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	f0 $/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	00 $/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	e8 cd c7 ff ff       	call   f0100302 <_panic>$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	66 85 c0             	test   %ax,%ax$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	74 24                	je     f0103b65 <check_page+0xc80>$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	c7 44 24 0c 2e b7 10 	movl   $0xf010b72e,0xc(%esp)$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	f0 $/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	f0 $/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	00 $/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	e8 9d c7 ff ff       	call   f0100302 <_panic>$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	66 85 c0             	test   %ax,%ax$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	74 24                	je     f0103b95 <check_page+0xcb0>$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	c7 44 24 0c 55 b6 10 	movl   $0xf010b655,0xc(%esp)$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	f0 $/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	f0 $/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	00 $/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	e8 6d c7 ff ff       	call   f0100302 <_panic>$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	e8 6a df ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	74 08                	je     f0103bb2 <check_page+0xccd>$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	74 24                	je     f0103bd6 <check_page+0xcf1>$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	c7 44 24 0c 40 b7 10 	movl   $0xf010b740,0xc(%esp)$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	f0 $/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	f0 $/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	00 $/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	e8 2c c7 ff ff       	call   f0100302 <_panic>$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	e8 29 df ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	85 c0                	test   %eax,%eax$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	74 24                	je     f0103c0a <check_page+0xd25>$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	c7 44 24 0c eb b0 10 	movl   $0xf010b0eb,0xc(%esp)$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	f0 $/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	f0 $/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	00 $/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	e8 f8 c6 ff ff       	call   f0100302 <_panic>$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	8b 00                	mov    (%eax),%eax$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	89 c3                	mov    %eax,%ebx$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	e8 4a d9 ff ff       	call   f010156d <page2pa>$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	74 24                	je     f0103c4b <check_page+0xd66>$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	c7 44 24 0c 44 b3 10 	movl   $0xf010b344,0xc(%esp)$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	f0 $/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	f0 $/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	00 $/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	e8 b7 c6 ff ff       	call   f0100302 <_panic>$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	74 24                	je     f0103c87 <check_page+0xda2>$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	c7 44 24 0c aa b3 10 	movl   $0xf010b3aa,0xc(%esp)$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	f0 $/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	f0 $/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	00 $/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	e8 7b c6 ff ff       	call   f0100302 <_panic>$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	e8 03 df ff ff       	call   f0101b9e <page_free>$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	c7 45 dc 00 10 40 00 	movl   $0x401000,-0x24(%ebp)$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	00 $/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	e8 88 df ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	01 d0                	add    %edx,%eax$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	8b 00                	mov    (%eax),%eax$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	00 $/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	e8 3b d8 ff ff       	call   f010152b <_kaddr>$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	01 c2                	add    %eax,%edx$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	39 c2                	cmp    %eax,%edx$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	74 24                	je     f0103d35 <check_page+0xe50>$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	c7 44 24 0c 62 b7 10 	movl   $0xf010b762,0xc(%esp)$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	f0 $/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	f0 $/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	00 $/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	e8 cd c5 ff ff       	call   f0100302 <_panic>$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	01 d0                	add    %edx,%eax$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	e8 6a d8 ff ff       	call   f01015c9 <page2kva>$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	00 $/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	00 $/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	e8 43 48 00 00       	call   f01085ba <memset>$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	e8 1c de ff ff       	call   f0101b9e <page_free>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	00 $/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	00 $/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	e8 a7 de ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	e8 1f d8 ff ff       	call   f01015c9 <page2kva>$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	eb 3c                	jmp    f0103df2 <check_page+0xf0d>$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	01 d0                	add    %edx,%eax$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	8b 00                	mov    (%eax),%eax$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	83 e0 01             	and    $0x1,%eax$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	85 c0                	test   %eax,%eax$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	74 24                	je     f0103dee <check_page+0xf09>$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	c7 44 24 0c 7a b7 10 	movl   $0xf010b77a,0xc(%esp)$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	f0 $/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	f0 $/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	00 $/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	e8 14 c5 ff ff       	call   f0100302 <_panic>$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	7e bb                	jle    f0103db6 <check_page+0xed1>$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	a3 30 02 2f f0       	mov    %eax,0xf02f0230$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	e8 7c dd ff ff       	call   f0101b9e <page_free>$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	e8 71 dd ff ff       	call   f0101b9e <page_free>$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	e8 66 dd ff ff       	call   f0101b9e <page_free>$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	00 $/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	e8 fb e0 ff ff       	call   f0101f47 <mmio_map_region>$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	00 $/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	e8 e4 e0 ff ff       	call   f0101f47 <mmio_map_region>$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	81 7d d4 ff ff 7f ef 	cmpl   $0xef7fffff,-0x2c(%ebp)$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	76 0f                	jbe    f0103e7e <check_page+0xf99>$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	76 24                	jbe    f0103ea2 <check_page+0xfbd>$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	c7 44 24 0c 94 b7 10 	movl   $0xf010b794,0xc(%esp)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	f0 $/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	f0 $/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	00 $/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	e8 60 c4 ff ff       	call   f0100302 <_panic>$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	81 7d d0 ff ff 7f ef 	cmpl   $0xef7fffff,-0x30(%ebp)$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	76 0f                	jbe    f0103eba <check_page+0xfd5>$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	76 24                	jbe    f0103ede <check_page+0xff9>$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	c7 44 24 0c bc b7 10 	movl   $0xf010b7bc,0xc(%esp)$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	f0 $/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	f0 $/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	00 $/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	e8 24 c4 ff ff       	call   f0100302 <_panic>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	85 c0                	test   %eax,%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	75 0c                	jne    f0103ef6 <check_page+0x1011>$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	85 c0                	test   %eax,%eax$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	74 24                	je     f0103f1a <check_page+0x1035>$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	c7 44 24 0c e4 b7 10 	movl   $0xf010b7e4,0xc(%esp)$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	f0 $/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	f0 $/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	00 $/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	e8 e8 c3 ff ff       	call   f0100302 <_panic>$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	76 24                	jbe    f0103f4b <check_page+0x1066>$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	c7 44 24 0c 0b b8 10 	movl   $0xf010b80b,0xc(%esp)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	f0 $/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	f0 $/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	00 $/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	e8 b7 c3 ff ff       	call   f0100302 <_panic>$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	e8 f5 ee ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	85 c0                	test   %eax,%eax$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	74 24                	je     f0103f87 <check_page+0x10a2>$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	c7 44 24 0c 20 b8 10 	movl   $0xf010b820,0xc(%esp)$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	f0 $/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	f0 $/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	00 $/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	e8 7b c3 ff ff       	call   f0100302 <_panic>$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	e8 b3 ee ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	74 24                	je     f0103fcc <check_page+0x10e7>$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	c7 44 24 0c 44 b8 10 	movl   $0xf010b844,0xc(%esp)$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	f0 $/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	f0 $/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	00 $/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	e8 36 c3 ff ff       	call   f0100302 <_panic>$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	e8 74 ee ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	85 c0                	test   %eax,%eax$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	74 24                	je     f0104008 <check_page+0x1123>$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	c7 44 24 0c 74 b8 10 	movl   $0xf010b874,0xc(%esp)$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	f0 $/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	f0 $/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	c7 44 24 04 2e 04 00 	movl   $0x42e,0x4(%esp)$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	00 $/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	e8 fa c2 ff ff       	call   f0100302 <_panic>$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	e8 32 ee ff ff       	call   f0102e54 <check_va2pa>$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	74 24                	je     f010404b <check_page+0x1166>$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	c7 44 24 0c 98 b8 10 	movl   $0xf010b898,0xc(%esp)$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	f0 $/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	f0 $/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	00 $/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	e8 b7 c2 ff ff       	call   f0100302 <_panic>$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	00 $/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	e8 df db ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	8b 00                	mov    (%eax),%eax$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	83 e0 1a             	and    $0x1a,%eax$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	85 c0                	test   %eax,%eax$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	75 24                	jne    f0104094 <check_page+0x11af>$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	c7 44 24 0c c4 b8 10 	movl   $0xf010b8c4,0xc(%esp)$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	f0 $/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	f0 $/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	00 $/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	e8 6e c2 ff ff       	call   f0100302 <_panic>$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	00 $/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	e8 96 db ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	8b 00                	mov    (%eax),%eax$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	83 e0 04             	and    $0x4,%eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	85 c0                	test   %eax,%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	74 24                	je     f01040dd <check_page+0x11f8>$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	c7 44 24 0c 08 b9 10 	movl   $0xf010b908,0xc(%esp)$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	f0 $/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	f0 $/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	00 $/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	e8 25 c2 ff ff       	call   f0100302 <_panic>$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	00 $/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	e8 4d db ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	89 c2                	mov    %eax,%edx$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	00 $/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	e8 24 db ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	00 $/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	e8 02 db ff ff       	call   f0101c46 <pgdir_walk>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	c7 04 24 3b b9 10 f0 	movl   $0xf010b93b,(%esp)$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	e8 e9 11 00 00       	call   f010533f <cprintf>$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	83 c4 44             	add    $0x44,%esp$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	5b                   	pop    %ebx$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	5d                   	pop    %ebp$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	c3                   	ret    $/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c <check_page_installed_pgdir>:$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	55                   	push   %ebp$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	89 e5                	mov    %esp,%ebp$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	53                   	push   %ebx$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	e8 8f d9 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	75 24                	jne    f01041a9 <check_page_installed_pgdir+0x4d>$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	c7 44 24 0c 1c b0 10 	movl   $0xf010b01c,0xc(%esp)$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	f0 $/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	f0 $/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	00 $/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	e8 59 c1 ff ff       	call   f0100302 <_panic>$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	e8 56 d9 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	75 24                	jne    f01041e2 <check_page_installed_pgdir+0x86>$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	c7 44 24 0c 32 b0 10 	movl   $0xf010b032,0xc(%esp)$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	f0 $/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	f0 $/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	00 $/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	e8 20 c1 ff ff       	call   f0100302 <_panic>$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	e8 1d d9 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	75 24                	jne    f010421b <check_page_installed_pgdir+0xbf>$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	c7 44 24 0c 48 b0 10 	movl   $0xf010b048,0xc(%esp)$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	f0 $/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	f0 $/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	c7 44 24 04 49 04 00 	movl   $0x449,0x4(%esp)$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	00 $/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	e8 e7 c0 ff ff       	call   f0100302 <_panic>$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	e8 78 d9 ff ff       	call   f0101b9e <page_free>$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	e8 98 d3 ff ff       	call   f01015c9 <page2kva>$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	00 $/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	00 $/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	e8 71 43 00 00       	call   f01085ba <memset>$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	e8 75 d3 ff ff       	call   f01015c9 <page2kva>$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	00 $/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	00 $/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	e8 4e 43 00 00       	call   f01085ba <memset>$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	00 $/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	00 $/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	e8 11 db ff ff       	call   f0101da1 <page_insert>$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	74 24                	je     f01042c1 <check_page_installed_pgdir+0x165>$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	c7 44 24 0c 99 b3 10 	movl   $0xf010b399,0xc(%esp)$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	f0 $/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	f0 $/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	00 $/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	e8 41 c0 ff ff       	call   f0100302 <_panic>$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	8b 00                	mov    (%eax),%eax$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	3d 01 01 01 01       	cmp    $0x1010101,%eax$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	74 24                	je     f01042f3 <check_page_installed_pgdir+0x197>$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	c7 44 24 0c 54 b9 10 	movl   $0xf010b954,0xc(%esp)$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	f0 $/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	f0 $/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	c7 44 24 04 4f 04 00 	movl   $0x44f,0x4(%esp)$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	00 $/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	e8 0f c0 ff ff       	call   f0100302 <_panic>$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	00 $/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	00 $/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	e8 8a da ff ff       	call   f0101da1 <page_insert>$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	8b 00                	mov    (%eax),%eax$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	3d 02 02 02 02       	cmp    $0x2020202,%eax$/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	74 24                	je     f0104349 <check_page_installed_pgdir+0x1ed>$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	c7 44 24 0c 78 b9 10 	movl   $0xf010b978,0xc(%esp)$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	f0 $/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	f0 $/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	c7 44 24 04 51 04 00 	movl   $0x451,0x4(%esp)$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	00 $/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	e8 b9 bf ff ff       	call   f0100302 <_panic>$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	74 24                	je     f010437a <check_page_installed_pgdir+0x21e>$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	c7 44 24 0c 28 b4 10 	movl   $0xf010b428,0xc(%esp)$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	f0 $/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	f0 $/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	00 $/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	e8 88 bf ff ff       	call   f0100302 <_panic>$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	66 85 c0             	test   %ax,%ax$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	74 24                	je     f01043aa <check_page_installed_pgdir+0x24e>$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	c7 44 24 0c 2e b7 10 	movl   $0xf010b72e,0xc(%esp)$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	f0 $/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	f0 $/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	00 $/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	e8 58 bf ff ff       	call   f0100302 <_panic>$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	c7 00 03 03 03 03    	movl   $0x3030303,(%eax)$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	e8 09 d2 ff ff       	call   f01015c9 <page2kva>$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	8b 00                	mov    (%eax),%eax$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	3d 03 03 03 03       	cmp    $0x3030303,%eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	74 24                	je     f01043ed <check_page_installed_pgdir+0x291>$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	c7 44 24 0c 9c b9 10 	movl   $0xf010b99c,0xc(%esp)$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	f0 $/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	f0 $/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	00 $/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	e8 15 bf ff ff       	call   f0100302 <_panic>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	00 $/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	e8 b7 da ff ff       	call   f0101eb9 <page_remove>$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	66 85 c0             	test   %ax,%ax$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	74 24                	je     f0104432 <check_page_installed_pgdir+0x2d6>$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	c7 44 24 0c 55 b6 10 	movl   $0xf010b655,0xc(%esp)$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	f0 $/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	f0 $/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	c7 44 24 04 57 04 00 	movl   $0x457,0x4(%esp)$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	00 $/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	e8 d0 be ff ff       	call   f0100302 <_panic>$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	8b 00                	mov    (%eax),%eax$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	e8 22 d1 ff ff       	call   f010156d <page2pa>$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	74 24                	je     f0104473 <check_page_installed_pgdir+0x317>$/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	c7 44 24 0c 44 b3 10 	movl   $0xf010b344,0xc(%esp)$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	f0 $/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	f0 $/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	c7 44 24 04 5a 04 00 	movl   $0x45a,0x4(%esp)$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	00 $/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	e8 8f be ff ff       	call   f0100302 <_panic>$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	74 24                	je     f01044af <check_page_installed_pgdir+0x353>$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	c7 44 24 0c aa b3 10 	movl   $0xf010b3aa,0xc(%esp)$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	f0 $/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	c7 44 24 08 fd ad 10 	movl   $0xf010adfd,0x8(%esp)$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	f0 $/;"	l
f010449b	obj/kern/kernel.asm	/^f010449b:	c7 44 24 04 5c 04 00 	movl   $0x45c,0x4(%esp)$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	00 $/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	c7 04 24 e1 ad 10 f0 	movl   $0xf010ade1,(%esp)$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	e8 53 be ff ff       	call   f0100302 <_panic>$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	e8 db d6 ff ff       	call   f0101b9e <page_free>$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	c7 04 24 c8 b9 10 f0 	movl   $0xf010b9c8,(%esp)$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	e8 70 0e 00 00       	call   f010533f <cprintf>$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	83 c4 24             	add    $0x24,%esp$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	5b                   	pop    %ebx$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	5d                   	pop    %ebp$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	c3                   	ret    $/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5 <lgdt>:$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	55                   	push   %ebp$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	5d                   	pop    %ebp$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	c3                   	ret    $/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0 <_paddr>:$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	55                   	push   %ebp$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	77 21                	ja     f0104511 <_paddr+0x31>$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	c7 44 24 08 f4 b9 10 	movl   $0xf010b9f4,0x8(%esp)$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	f0 $/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	e8 f1 bd ff ff       	call   f0100302 <_panic>$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	c9                   	leave  $/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	c3                   	ret    $/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b <_kaddr>:$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	55                   	push   %ebp$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	89 e5                	mov    %esp,%ebp$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	89 c2                	mov    %eax,%edx$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	39 c2                	cmp    %eax,%edx$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	72 21                	jb     f0104553 <_kaddr+0x38>$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	c7 44 24 08 18 ba 10 	movl   $0xf010ba18,0x8(%esp)$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	f0 $/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	e8 af bd ff ff       	call   f0100302 <_panic>$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	c9                   	leave  $/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	c3                   	ret    $/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d <page2pa>:$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	55                   	push   %ebp$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	29 c2                	sub    %eax,%edx$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	89 d0                	mov    %edx,%eax$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	5d                   	pop    %ebp$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	c3                   	ret    $/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574 <pa2page>:$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	55                   	push   %ebp$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	89 e5                	mov    %esp,%ebp$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	89 c2                	mov    %eax,%edx$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	39 c2                	cmp    %eax,%edx$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	72 1c                	jb     f01045a7 <pa2page+0x33>$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	c7 44 24 08 3c ba 10 	movl   $0xf010ba3c,0x8(%esp)$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	f0 $/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	00 $/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	c7 04 24 5b ba 10 f0 	movl   $0xf010ba5b,(%esp)$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	e8 5b bd ff ff       	call   f0100302 <_panic>$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	a1 30 0f 2f f0       	mov    0xf02f0f30,%eax$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	01 d0                	add    %edx,%eax$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	c9                   	leave  $/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	c3                   	ret    $/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9 <page2kva>:$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	55                   	push   %ebp$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	e8 93 ff ff ff       	call   f010455d <page2pa>$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	00 $/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	c7 04 24 5b ba 10 f0 	movl   $0xf010ba5b,(%esp)$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	e8 39 ff ff ff       	call   f010451b <_kaddr>$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	c9                   	leave  $/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	c3                   	ret    $/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4 <unlock_kernel>:$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	55                   	push   %ebp$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	c7 04 24 00 a6 12 f0 	movl   $0xf012a600,(%esp)$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	e8 8f 4d 00 00       	call   f0109385 <spin_unlock>$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	f3 90                	pause  $/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	c9                   	leave  $/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	c3                   	ret    $/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa <envid2env>:$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	55                   	push   %ebp$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	53                   	push   %ebx$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	75 1e                	jne    f010462b <envid2env+0x31>$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	e8 70 4a 00 00       	call   f0109082 <cpunum>$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	8b 10                	mov    (%eax),%edx$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	89 10                	mov    %edx,(%eax)$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	e9 95 00 00 00       	jmp    f01046c0 <envid2env+0xc6>$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	89 c1                	mov    %eax,%ecx$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	01 c8                	add    %ecx,%eax$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	01 d0                	add    %edx,%eax$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	85 c0                	test   %eax,%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	74 0b                	je     f010465d <envid2env+0x63>$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	74 10                	je     f010466d <envid2env+0x73>$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	eb 53                	jmp    f01046c0 <envid2env+0xc6>$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	74 40                	je     f01046b3 <envid2env+0xb9>$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	e8 0a 4a 00 00       	call   f0109082 <cpunum>$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	8b 00                	mov    (%eax),%eax$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	74 2c                	je     f01046b3 <envid2env+0xb9>$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	8b 58 4c             	mov    0x4c(%eax),%ebx$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	e8 f0 49 00 00       	call   f0109082 <cpunum>$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	8b 00                	mov    (%eax),%eax$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	39 c3                	cmp    %eax,%ebx$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	74 10                	je     f01046b3 <envid2env+0xb9>$/;"	l
f01046a3	obj/kern/kernel.asm	/^f01046a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	eb 0d                	jmp    f01046c0 <envid2env+0xc6>$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	89 10                	mov    %edx,(%eax)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	83 c4 24             	add    $0x24,%esp$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	5b                   	pop    %ebx$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	5d                   	pop    %ebp$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	c3                   	ret    $/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6 <env_init>:$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	55                   	push   %ebp$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	53                   	push   %ebx$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	e9 93 00 00 00       	jmp    f010476f <env_init+0xa9>$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	89 c1                	mov    %eax,%ecx$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	01 c8                	add    %ecx,%eax$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	01 d0                	add    %edx,%eax$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	89 c1                	mov    %eax,%ecx$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	01 c8                	add    %ecx,%eax$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	01 d0                	add    %edx,%eax$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	75 1e                	jne    f010473b <env_init+0x75>$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	89 c1                	mov    %eax,%ecx$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	01 c8                	add    %ecx,%eax$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	01 d0                	add    %edx,%eax$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	eb 30                	jmp    f010476b <env_init+0xa5>$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	89 c1                	mov    %eax,%ecx$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	01 c8                	add    %ecx,%eax$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	01 c2                	add    %eax,%edx$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	8b 0d 3c 02 2f f0    	mov    0xf02f023c,%ecx$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	83 c0 01             	add    $0x1,%eax$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	c1 e3 05             	shl    $0x5,%ebx$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764:	01 d8                	add    %ebx,%eax$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	01 c8                	add    %ecx,%eax$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	0f 8e 60 ff ff ff    	jle    f01046dc <env_init+0x16>$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	a1 3c 02 2f f0       	mov    0xf02f023c,%eax$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	a3 40 02 2f f0       	mov    %eax,0xf02f0240$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	e8 09 00 00 00       	call   f0104794 <env_init_percpu>$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	5b                   	pop    %ebx$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	5d                   	pop    %ebp$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	c3                   	ret    $/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794 <env_init_percpu>:$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	55                   	push   %ebp$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	89 e5                	mov    %esp,%ebp$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	c7 04 24 e8 a5 12 f0 	movl   $0xf012a5e8,(%esp)$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	e8 2f fd ff ff       	call   f01044d5 <lgdt>$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	8e e8                	mov    %eax,%gs$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2:	8e e0                	mov    %eax,%fs$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	8e c0                	mov    %eax,%es$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	8e d8                	mov    %eax,%ds$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	8e d0                	mov    %eax,%ss$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	ea d0 47 10 f0 08 00 	ljmp   $0x8,$0xf01047d0$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	66 c7 45 fe 00 00    	movw   $0x0,-0x2(%ebp)$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	0f 00 d0             	lldt   %ax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	c9                   	leave  $/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	c3                   	ret    $/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df <env_setup_vm>:$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	55                   	push   %ebp$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	53                   	push   %ebx$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	e8 12 d3 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	75 0a                	jne    f010480c <env_setup_vm+0x2d>$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	e9 b6 00 00 00       	jmp    f01048c2 <env_setup_vm+0xe3>$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	e8 91 fd ff ff       	call   f01045b9 <page2kva>$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	89 42 60             	mov    %eax,0x60(%edx)$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	eb 18                	jmp    f010484f <env_setup_vm+0x70>$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	01 d0                	add    %edx,%eax$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	3d ba 03 00 00       	cmp    $0x3ba,%eax$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	76 de                	jbe    f0104837 <env_setup_vm+0x58>$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	c7 45 f4 bb 03 00 00 	movl   $0x3bb,-0xc(%ebp)$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	eb 23                	jmp    f0104885 <env_setup_vm+0xa6>$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	01 c2                	add    %eax,%edx$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	01 c8                	add    %ecx,%eax$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	8b 00                	mov    (%eax),%eax$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	89 02                	mov    %eax,(%edx)$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	7e d4                	jle    f0104862 <env_setup_vm+0x83>$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	8d 98 f4 0e 00 00    	lea    0xef4(%eax),%ebx$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	c7 44 24 04 d2 00 00 	movl   $0xd2,0x4(%esp)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	00 $/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	e8 28 fc ff ff       	call   f01044e0 <_paddr>$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	83 c8 05             	or     $0x5,%eax$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	89 03                	mov    %eax,(%ebx)$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	83 c4 24             	add    $0x24,%esp$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	5b                   	pop    %ebx$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	5d                   	pop    %ebp$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	c3                   	ret    $/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8 <env_alloc>:$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	55                   	push   %ebp$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	a1 40 02 2f f0       	mov    0xf02f0240,%eax$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	75 0a                	jne    f01048e6 <env_alloc+0x1e>$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	e9 1d 01 00 00       	jmp    f0104a03 <env_alloc+0x13b>$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048ec	obj/kern/kernel.asm	/^f01048ec:	e8 ee fe ff ff       	call   f01047df <env_setup_vm>$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	79 08                	jns    f0104902 <env_alloc+0x3a>$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	e9 01 01 00 00       	jmp    f0104a03 <env_alloc+0x13b>$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	7f 07                	jg     f0104922 <env_alloc+0x5a>$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	a1 3c 02 2f f0       	mov    0xf02f023c,%eax$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	29 c2                	sub    %eax,%edx$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	89 d0                	mov    %edx,%eax$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	69 c0 e1 83 0f 3e    	imul   $0x3e0f83e1,%eax,%eax$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	0b 45 f4             	or     -0xc(%ebp),%eax$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	89 c2                	mov    %eax,%edx$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	89 50 48             	mov    %edx,0x48(%eax)$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	89 50 4c             	mov    %edx,0x4c(%eax)$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	c7 40 7c 01 00 00 00 	movl   $0x1,0x7c(%eax)$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	c7 80 80 00 00 00 ff 	movl   $0x7fff,0x80(%eax)$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	7f 00 00 $/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010498a	obj/kern/kernel.asm	/^f010498a:	00 $/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	00 $/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	e8 1f 3c 00 00       	call   f01085ba <memset>$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	66 c7 40 24 23 00    	movw   $0x23,0x24(%eax)$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	66 c7 40 20 23 00    	movw   $0x23,0x20(%eax)$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	66 c7 40 40 23 00    	movw   $0x23,0x40(%eax)$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	c7 40 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%eax)$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	c6 40 68 00          	movb   $0x0,0x68(%eax)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	80 cc 02             	or     $0x2,%ah$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	89 c2                	mov    %eax,%edx$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	a3 40 02 2f f0       	mov    %eax,0xf02f0240$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	89 10                	mov    %edx,(%eax)$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	c9                   	leave  $/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	c3                   	ret    $/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05 <region_alloc>:$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	55                   	push   %ebp$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%ebp)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	01 c2                	add    %eax,%edx$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	01 d0                	add    %edx,%eax$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	89 d0                	mov    %edx,%eax$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	29 c2                	sub    %eax,%edx$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	89 d0                	mov    %edx,%eax$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	76 1c                	jbe    f0104a73 <region_alloc+0x6e>$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	c7 44 24 08 74 ba 10 	movl   $0xf010ba74,0x8(%esp)$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	f0 $/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	00 $/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	e8 8f b8 ff ff       	call   f0100302 <_panic>$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	e9 88 00 00 00       	jmp    f0104b00 <region_alloc+0xfb>$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	e8 87 d0 ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	75 1c                	jne    f0104aa9 <region_alloc+0xa4>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	c7 44 24 08 b4 ba 10 	movl   $0xf010bab4,0x8(%esp)$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	f0 $/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	c7 44 24 04 3c 01 00 	movl   $0x13c,0x4(%esp)$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	00 $/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	e8 59 b8 ff ff       	call   f0100302 <_panic>$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	00 $/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	e8 d4 d2 ff ff       	call   f0101da1 <page_insert>$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	74 23                	je     f0104af9 <region_alloc+0xf4>$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	c7 44 24 08 d4 ba 10 	movl   $0xf010bad4,0x8(%esp)$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	f0 $/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	c7 44 24 04 3f 01 00 	movl   $0x13f,0x4(%esp)$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	00 $/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	e8 09 b8 ff ff       	call   f0100302 <_panic>$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	0f 82 6c ff ff ff    	jb     f0104a78 <region_alloc+0x73>$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	c9                   	leave  $/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	c3                   	ret    $/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e <load_icode>:$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	55                   	push   %ebp$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	53                   	push   %ebx$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	74 1c                	je     f0104b43 <load_icode+0x35>$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	c7 44 24 08 e8 ba 10 	movl   $0xf010bae8,0x8(%esp)$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	f0 $/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	c7 44 24 04 7f 01 00 	movl   $0x17f,0x4(%esp)$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	00 $/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	e8 bf b7 ff ff       	call   f0100302 <_panic>$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	85 c0                	test   %eax,%eax$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	75 1c                	jne    f0104b69 <load_icode+0x5b>$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	c7 44 24 08 2c bb 10 	movl   $0xf010bb2c,0x8(%esp)$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	f0 $/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	c7 44 24 04 82 01 00 	movl   $0x182,0x4(%esp)$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	00 $/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	e8 99 b7 ff ff       	call   f0100302 <_panic>$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	c7 44 24 04 8a 01 00 	movl   $0x18a,0x4(%esp)$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	00 $/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	e8 4d f9 ff ff       	call   f01044e0 <_paddr>$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	01 d0                	add    %edx,%eax$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	e9 ec 00 00 00       	jmp    f0104ca2 <load_icode+0x194>$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	89 c2                	mov    %eax,%edx$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	01 d0                	add    %edx,%eax$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	8b 00                	mov    (%eax),%eax$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	0f 85 d0 00 00 00    	jne    f0104c9e <load_icode+0x190>$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	89 c2                	mov    %eax,%edx$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	01 d0                	add    %edx,%eax$/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	89 c1                	mov    %eax,%ecx$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	01 c8                	add    %ecx,%eax$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	e8 04 fe ff ff       	call   f0104a05 <region_alloc>$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	89 c2                	mov    %eax,%edx$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	01 d0                	add    %edx,%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	89 c1                	mov    %eax,%ecx$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	01 c8                	add    %ecx,%eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	01 c1                	add    %eax,%ecx$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	89 c3                	mov    %eax,%ebx$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	01 d8                	add    %ebx,%eax$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	e8 e2 39 00 00       	call   f0108628 <memmove>$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	89 c2                	mov    %eax,%edx$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	01 d0                	add    %edx,%eax$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	01 c8                	add    %ecx,%eax$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	29 c2                	sub    %eax,%edx$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	01 c8                	add    %ecx,%eax$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	01 d8                	add    %ebx,%eax$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	01 c8                	add    %ecx,%eax$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	00 $/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	e8 1c 39 00 00       	call   f01085ba <memset>$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	0f 8f 01 ff ff ff    	jg     f0104bb6 <load_icode+0xa8>$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	00 $/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	c7 44 24 04 00 d0 bf 	movl   $0xeebfd000,0x4(%esp)$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	ee $/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	e8 35 fd ff ff       	call   f0104a05 <region_alloc>$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	83 c4 24             	add    $0x24,%esp$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	5b                   	pop    %ebx$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	5d                   	pop    %ebp$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	c3                   	ret    $/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6 <env_create>:$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	55                   	push   %ebp$/;"	l
f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	00 $/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	e8 d9 fb ff ff       	call   f01048c8 <env_alloc>$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	74 23                	je     f0104d1b <env_create+0x45>$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	c7 44 24 08 4d bb 10 	movl   $0xf010bb4d,0x8(%esp)$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	f0 $/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	c7 44 24 04 b3 01 00 	movl   $0x1b3,0x4(%esp)$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	00 $/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	e8 e7 b5 ff ff       	call   f0100302 <_panic>$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	89 50 7c             	mov    %edx,0x7c(%eax)$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	e8 d8 fd ff ff       	call   f0104b0e <load_icode>$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	75 0f                	jne    f0104d54 <env_create+0x7e>$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	80 ce 30             	or     $0x30,%dh$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	c9                   	leave  $/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	c3                   	ret    $/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56 <env_free>:$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	55                   	push   %ebp$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	e8 21 43 00 00       	call   f0109082 <cpunum>$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	8b 00                	mov    (%eax),%eax$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	75 26                	jne    f0104d96 <env_free+0x40>$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	c7 44 24 04 cf 01 00 	movl   $0x1cf,0x4(%esp)$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	00 $/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	e8 53 f7 ff ff       	call   f01044e0 <_paddr>$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	e9 cf 00 00 00       	jmp    f0104e71 <env_free+0x11b>$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	01 d0                	add    %edx,%eax$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	8b 00                	mov    (%eax),%eax$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	85 c0                	test   %eax,%eax$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	75 05                	jne    f0104dbe <env_free+0x68>$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	e9 af 00 00 00       	jmp    f0104e6d <env_free+0x117>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	01 d0                	add    %edx,%eax$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	8b 00                	mov    (%eax),%eax$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	00 $/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	e8 2a f7 ff ff       	call   f010451b <_kaddr>$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	eb 40                	jmp    f0104e3d <env_free+0xe7>$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	01 d0                	add    %edx,%eax$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	8b 00                	mov    (%eax),%eax$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	85 c0                	test   %eax,%eax$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	74 24                	je     f0104e39 <env_free+0xe3>$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	89 c2                	mov    %eax,%edx$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	09 d0                	or     %edx,%eax$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	89 c2                	mov    %eax,%edx$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	e8 80 d0 ff ff       	call   f0101eb9 <page_remove>$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	76 b7                	jbe    f0104dfd <env_free+0xa7>$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	01 d0                	add    %edx,%eax$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	e8 0f f7 ff ff       	call   f0104574 <pa2page>$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	e8 a9 cd ff ff       	call   f0101c16 <page_decref>$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	81 7d f4 ba 03 00 00 	cmpl   $0x3ba,-0xc(%ebp)$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	0f 86 24 ff ff ff    	jbe    f0104da2 <env_free+0x4c>$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	c7 44 24 04 ec 01 00 	movl   $0x1ec,0x4(%esp)$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	00 $/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	e8 44 f6 ff ff       	call   f01044e0 <_paddr>$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	e8 c0 f6 ff ff       	call   f0104574 <pa2page>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	e8 5a cd ff ff       	call   f0101c16 <page_decref>$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	8b 15 40 02 2f f0    	mov    0xf02f0240,%edx$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	a3 40 02 2f f0       	mov    %eax,0xf02f0240$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	c9                   	leave  $/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	c3                   	ret    $/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc <env_destroy>:$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	55                   	push   %ebp$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	89 e5                	mov    %esp,%ebp$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	75 20                	jne    f0104f0d <env_destroy+0x31>$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	e8 90 41 00 00       	call   f0109082 <cpunum>$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	8b 00                	mov    (%eax),%eax$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	74 0c                	je     f0104f0d <env_destroy+0x31>$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%eax)$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	eb 37                	jmp    f0104f44 <env_destroy+0x68>$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	e8 3e fe ff ff       	call   f0104d56 <env_free>$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	e8 65 41 00 00       	call   f0109082 <cpunum>$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	75 18                	jne    f0104f44 <env_destroy+0x68>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	e8 51 41 00 00       	call   f0109082 <cpunum>$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	e8 29 1b 00 00       	call   f0106a6d <sched_yield>$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	c9                   	leave  $/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	c3                   	ret    $/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46 <env_pop_tf>:$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	55                   	push   %ebp$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	53                   	push   %ebx$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	e8 30 41 00 00       	call   f0109082 <cpunum>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	8b 18                	mov    (%eax),%ebx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	e8 21 41 00 00       	call   f0109082 <cpunum>$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	61                   	popa   $/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	07                   	pop    %es$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	1f                   	pop    %ds$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	cf                   	iret   $/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	c7 44 24 08 5c bb 10 	movl   $0xf010bb5c,0x8(%esp)$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	f0 $/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	c7 44 24 04 22 02 00 	movl   $0x222,0x4(%esp)$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	00 $/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	e8 78 b3 ff ff       	call   f0100302 <_panic>$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a <env_run>:$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	55                   	push   %ebp$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	e8 ed 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	85 c0                	test   %eax,%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	74 2d                	je     f0104fd0 <env_run+0x46>$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	e8 da 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	8b 00                	mov    (%eax),%eax$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	75 16                	jne    f0104fd0 <env_run+0x46>$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	e8 c3 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	8b 00                	mov    (%eax),%eax$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	e8 ad 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	8d 90 28 10 2f f0    	lea    -0xfd0efd8(%eax),%edx$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	89 02                	mov    %eax,(%edx)$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	e8 9a 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	8b 00                	mov    (%eax),%eax$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	e8 84 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	8b 00                	mov    (%eax),%eax$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	8b 50 58             	mov    0x58(%eax),%edx$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	89 50 58             	mov    %edx,0x58(%eax)$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	e8 6c 40 00 00       	call   f0109082 <cpunum>$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	8b 00                	mov    (%eax),%eax$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	c7 44 24 04 47 02 00 	movl   $0x247,0x4(%esp)$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	00 $/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	c7 04 24 69 ba 10 f0 	movl   $0xf010ba69,(%esp)$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	e8 a5 f4 ff ff       	call   f01044e0 <_paddr>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	e8 9b f5 ff ff       	call   f01045e4 <unlock_kernel>$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	e8 34 40 00 00       	call   f0109082 <cpunum>$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	8b 00                	mov    (%eax),%eax$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	e8 e6 fe ff ff       	call   f0104f46 <env_pop_tf>$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060 <mc146818_read>:$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	55                   	push   %ebp$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	89 e5                	mov    %esp,%ebp$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	c7 45 fc 70 00 00 00 	movl   $0x70,-0x4(%ebp)$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	ee                   	out    %al,(%dx)$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	c7 45 f4 71 00 00 00 	movl   $0x71,-0xc(%ebp)$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	89 c2                	mov    %eax,%edx$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	ec                   	in     (%dx),%al$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	c9                   	leave  $/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	c3                   	ret    $/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097 <mc146818_write>:$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	55                   	push   %ebp$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	89 e5                	mov    %esp,%ebp$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	c7 45 fc 70 00 00 00 	movl   $0x70,-0x4(%ebp)$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	ee                   	out    %al,(%dx)$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	c7 45 f4 71 00 00 00 	movl   $0x71,-0xc(%ebp)$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	ee                   	out    %al,(%dx)$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	c9                   	leave  $/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	c3                   	ret    $/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf <pic_init>:$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	55                   	push   %ebp$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	81 ec 88 00 00 00    	sub    $0x88,%esp$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	c6 05 44 02 2f f0 01 	movb   $0x1,0xf02f0244$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	c7 45 f4 21 00 00 00 	movl   $0x21,-0xc(%ebp)$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	c6 45 f3 ff          	movb   $0xff,-0xd(%ebp)$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	ee                   	out    %al,(%dx)$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	c7 45 ec a1 00 00 00 	movl   $0xa1,-0x14(%ebp)$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	c6 45 eb ff          	movb   $0xff,-0x15(%ebp)$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	ee                   	out    %al,(%dx)$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	c7 45 e4 20 00 00 00 	movl   $0x20,-0x1c(%ebp)$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	c6 45 e3 11          	movb   $0x11,-0x1d(%ebp)$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	ee                   	out    %al,(%dx)$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	c7 45 dc 21 00 00 00 	movl   $0x21,-0x24(%ebp)$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	0f b6 45 db          	movzbl -0x25(%ebp),%eax$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	ee                   	out    %al,(%dx)$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	c7 45 d4 21 00 00 00 	movl   $0x21,-0x2c(%ebp)$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	c6 45 d3 04          	movb   $0x4,-0x2d(%ebp)$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	ee                   	out    %al,(%dx)$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	c7 45 cc 21 00 00 00 	movl   $0x21,-0x34(%ebp)$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	c6 45 cb 03          	movb   $0x3,-0x35(%ebp)$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	ee                   	out    %al,(%dx)$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	c7 45 c4 a0 00 00 00 	movl   $0xa0,-0x3c(%ebp)$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	c6 45 c3 11          	movb   $0x11,-0x3d(%ebp)$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	0f b6 45 c3          	movzbl -0x3d(%ebp),%eax$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	ee                   	out    %al,(%dx)$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	c7 45 bc a1 00 00 00 	movl   $0xa1,-0x44(%ebp)$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	c6 45 bb 28          	movb   $0x28,-0x45(%ebp)$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	0f b6 45 bb          	movzbl -0x45(%ebp),%eax$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	ee                   	out    %al,(%dx)$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	c7 45 b4 a1 00 00 00 	movl   $0xa1,-0x4c(%ebp)$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	c6 45 b3 02          	movb   $0x2,-0x4d(%ebp)$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	0f b6 45 b3          	movzbl -0x4d(%ebp),%eax$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	ee                   	out    %al,(%dx)$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	c7 45 ac a1 00 00 00 	movl   $0xa1,-0x54(%ebp)$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	c6 45 ab 01          	movb   $0x1,-0x55(%ebp)$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	0f b6 45 ab          	movzbl -0x55(%ebp),%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	ee                   	out    %al,(%dx)$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	c7 45 a4 20 00 00 00 	movl   $0x20,-0x5c(%ebp)$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	c6 45 a3 68          	movb   $0x68,-0x5d(%ebp)$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	0f b6 45 a3          	movzbl -0x5d(%ebp),%eax$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	ee                   	out    %al,(%dx)$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	c7 45 9c 20 00 00 00 	movl   $0x20,-0x64(%ebp)$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	c6 45 9b 0a          	movb   $0xa,-0x65(%ebp)$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	0f b6 45 9b          	movzbl -0x65(%ebp),%eax$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	ee                   	out    %al,(%dx)$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	c7 45 94 a0 00 00 00 	movl   $0xa0,-0x6c(%ebp)$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	c6 45 93 68          	movb   $0x68,-0x6d(%ebp)$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	0f b6 45 93          	movzbl -0x6d(%ebp),%eax$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	ee                   	out    %al,(%dx)$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	c7 45 8c a0 00 00 00 	movl   $0xa0,-0x74(%ebp)$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	c6 45 8b 0a          	movb   $0xa,-0x75(%ebp)$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	0f b6 45 8b          	movzbl -0x75(%ebp),%eax$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	8b 55 8c             	mov    -0x74(%ebp),%edx$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	ee                   	out    %al,(%dx)$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	0f b7 05 ee a5 12 f0 	movzwl 0xf012a5ee,%eax$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	74 12                	je     f0105208 <pic_init+0x139>$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	0f b7 05 ee a5 12 f0 	movzwl 0xf012a5ee,%eax$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105203	obj/kern/kernel.asm	/^f0105203:	e8 02 00 00 00       	call   f010520a <irq_setmask_8259A>$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	c9                   	leave  $/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	c3                   	ret    $/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a <irq_setmask_8259A>:$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	55                   	push   %ebp$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	89 e5                	mov    %esp,%ebp$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	66 a3 ee a5 12 f0    	mov    %ax,0xf012a5ee$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	0f b6 05 44 02 2f f0 	movzbl 0xf02f0244,%eax$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	83 f0 01             	xor    $0x1,%eax$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	84 c0                	test   %al,%al$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	74 05                	je     f0105234 <irq_setmask_8259A+0x2a>$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	e9 8c 00 00 00       	jmp    f01052c0 <irq_setmask_8259A+0xb6>$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	c7 45 f0 21 00 00 00 	movl   $0x21,-0x10(%ebp)$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	ee                   	out    %al,(%dx)$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	c7 45 e8 a1 00 00 00 	movl   $0xa1,-0x18(%ebp)$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	ee                   	out    %al,(%dx)$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	c7 04 24 68 bb 10 f0 	movl   $0xf010bb68,(%esp)$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	e8 c9 00 00 00       	call   f010533f <cprintf>$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	eb 2f                	jmp    f01052ae <irq_setmask_8259A+0xa4>$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	f7 d0                	not    %eax$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	89 c2                	mov    %eax,%edx$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	89 c1                	mov    %eax,%ecx$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	d3 fa                	sar    %cl,%edx$/;"	d
f010528e	obj/kern/kernel.asm	/^f010528e:	89 d0                	mov    %edx,%eax$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	83 e0 01             	and    $0x1,%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	85 c0                	test   %eax,%eax$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	74 13                	je     f01052aa <irq_setmask_8259A+0xa0>$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	c7 04 24 7c bb 10 f0 	movl   $0xf010bb7c,(%esp)$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	e8 95 00 00 00       	call   f010533f <cprintf>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	7e cb                	jle    f010527f <irq_setmask_8259A+0x75>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	c7 04 24 80 bb 10 f0 	movl   $0xf010bb80,(%esp)$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	e8 7f 00 00 00       	call   f010533f <cprintf>$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	c9                   	leave  $/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	c3                   	ret    $/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2 <irq_eoi>:$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	55                   	push   %ebp$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%ebp)$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	c6 45 fb 20          	movb   $0x20,-0x5(%ebp)$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
f01052d7	obj/kern/kernel.asm	/^f01052d7:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	ee                   	out    %al,(%dx)$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	c7 45 f4 a0 00 00 00 	movl   $0xa0,-0xc(%ebp)$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	c6 45 f3 20          	movb   $0x20,-0xd(%ebp)$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	ee                   	out    %al,(%dx)$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	c9                   	leave  $/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	c3                   	ret    $/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0 <putch>:$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	55                   	push   %ebp$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	e8 c3 b8 ff ff       	call   f0100bc4 <cputchar>$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	83 c0 04             	add    $0x4,%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	c9                   	leave  $/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	c3                   	ret    $/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c <vcprintf>:$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	55                   	push   %ebp$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	89 e5                	mov    %esp,%ebp$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	c7 04 24 f0 52 10 f0 	movl   $0xf01052f0,(%esp)$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	e8 4e 2a 00 00       	call   f0107d88 <vprintfmt>$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	c9                   	leave  $/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	c3                   	ret    $/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f <cprintf>:$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	55                   	push   %ebp$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	89 e5                	mov    %esp,%ebp$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	e8 af ff ff ff       	call   f010530c <vcprintf>$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	c9                   	leave  $/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	c3                   	ret    $/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365 <xchg>:$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	55                   	push   %ebp$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	89 e5                	mov    %esp,%ebp$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	c9                   	leave  $/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	c3                   	ret    $/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f <lock_kernel>:$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	55                   	push   %ebp$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	89 e5                	mov    %esp,%ebp$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	c7 04 24 00 a6 12 f0 	movl   $0xf012a600,(%esp)$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	e8 6c 3f 00 00       	call   f01092fd <spin_lock>$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	c9                   	leave  $/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	c3                   	ret    $/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393 <trapname>:$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	55                   	push   %ebp$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	89 e5                	mov    %esp,%ebp$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	77 0c                	ja     f01053aa <trapname+0x17>$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	8b 04 85 40 c0 10 f0 	mov    -0xfef3fc0(,%eax,4),%eax$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	eb 25                	jmp    f01053cf <trapname+0x3c>$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	83 7d 08 30          	cmpl   $0x30,0x8(%ebp)$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	75 07                	jne    f01053b7 <trapname+0x24>$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	b8 a0 bb 10 f0       	mov    $0xf010bba0,%eax$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	eb 18                	jmp    f01053cf <trapname+0x3c>$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	7e 0d                	jle    f01053ca <trapname+0x37>$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	7f 07                	jg     f01053ca <trapname+0x37>$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	b8 ac bb 10 f0       	mov    $0xf010bbac,%eax$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	eb 05                	jmp    f01053cf <trapname+0x3c>$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	b8 bf bb 10 f0       	mov    $0xf010bbbf,%eax$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	5d                   	pop    %ebp$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	c3                   	ret    $/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1 <trap_init>:$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	55                   	push   %ebp$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	b8 64 69 10 f0       	mov    $0xf0106964,%eax$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	66 a3 60 02 2f f0    	mov    %ax,0xf02f0260$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	66 c7 05 62 02 2f f0 	movw   $0x8,0xf02f0262$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	08 00 $/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	0f b6 05 64 02 2f f0 	movzbl 0xf02f0264,%eax$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	a2 64 02 2f f0       	mov    %al,0xf02f0264$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	0f b6 05 64 02 2f f0 	movzbl 0xf02f0264,%eax$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	a2 64 02 2f f0       	mov    %al,0xf02f0264$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	0f b6 05 65 02 2f f0 	movzbl 0xf02f0265,%eax$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	a2 65 02 2f f0       	mov    %al,0xf02f0265$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	0f b6 05 65 02 2f f0 	movzbl 0xf02f0265,%eax$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	a2 65 02 2f f0       	mov    %al,0xf02f0265$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	0f b6 05 65 02 2f f0 	movzbl 0xf02f0265,%eax$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	a2 65 02 2f f0       	mov    %al,0xf02f0265$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	0f b6 05 65 02 2f f0 	movzbl 0xf02f0265,%eax$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	a2 65 02 2f f0       	mov    %al,0xf02f0265$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	b8 64 69 10 f0       	mov    $0xf0106964,%eax$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	66 a3 66 02 2f f0    	mov    %ax,0xf02f0266$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	b8 6e 69 10 f0       	mov    $0xf010696e,%eax$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	66 a3 68 02 2f f0    	mov    %ax,0xf02f0268$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	66 c7 05 6a 02 2f f0 	movw   $0x8,0xf02f026a$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	08 00 $/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	0f b6 05 6c 02 2f f0 	movzbl 0xf02f026c,%eax$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	a2 6c 02 2f f0       	mov    %al,0xf02f026c$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	0f b6 05 6c 02 2f f0 	movzbl 0xf02f026c,%eax$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	a2 6c 02 2f f0       	mov    %al,0xf02f026c$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	0f b6 05 6d 02 2f f0 	movzbl 0xf02f026d,%eax$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	a2 6d 02 2f f0       	mov    %al,0xf02f026d$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	0f b6 05 6d 02 2f f0 	movzbl 0xf02f026d,%eax$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	a2 6d 02 2f f0       	mov    %al,0xf02f026d$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	0f b6 05 6d 02 2f f0 	movzbl 0xf02f026d,%eax$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	a2 6d 02 2f f0       	mov    %al,0xf02f026d$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	0f b6 05 6d 02 2f f0 	movzbl 0xf02f026d,%eax$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	a2 6d 02 2f f0       	mov    %al,0xf02f026d$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	b8 6e 69 10 f0       	mov    $0xf010696e,%eax$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	66 a3 6e 02 2f f0    	mov    %ax,0xf02f026e$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	b8 74 69 10 f0       	mov    $0xf0106974,%eax$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	66 a3 70 02 2f f0    	mov    %ax,0xf02f0270$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	66 c7 05 72 02 2f f0 	movw   $0x8,0xf02f0272$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	08 00 $/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	0f b6 05 74 02 2f f0 	movzbl 0xf02f0274,%eax$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	a2 74 02 2f f0       	mov    %al,0xf02f0274$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	0f b6 05 74 02 2f f0 	movzbl 0xf02f0274,%eax$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	a2 74 02 2f f0       	mov    %al,0xf02f0274$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	0f b6 05 75 02 2f f0 	movzbl 0xf02f0275,%eax$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	a2 75 02 2f f0       	mov    %al,0xf02f0275$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	0f b6 05 75 02 2f f0 	movzbl 0xf02f0275,%eax$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	a2 75 02 2f f0       	mov    %al,0xf02f0275$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	0f b6 05 75 02 2f f0 	movzbl 0xf02f0275,%eax$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	a2 75 02 2f f0       	mov    %al,0xf02f0275$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	0f b6 05 75 02 2f f0 	movzbl 0xf02f0275,%eax$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	a2 75 02 2f f0       	mov    %al,0xf02f0275$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	b8 74 69 10 f0       	mov    $0xf0106974,%eax$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	66 a3 76 02 2f f0    	mov    %ax,0xf02f0276$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	b8 7a 69 10 f0       	mov    $0xf010697a,%eax$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	66 a3 78 02 2f f0    	mov    %ax,0xf02f0278$/;"	l
f010555f	obj/kern/kernel.asm	/^f010555f:	66 c7 05 7a 02 2f f0 	movw   $0x8,0xf02f027a$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	08 00 $/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	0f b6 05 7c 02 2f f0 	movzbl 0xf02f027c,%eax$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	a2 7c 02 2f f0       	mov    %al,0xf02f027c$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	0f b6 05 7c 02 2f f0 	movzbl 0xf02f027c,%eax$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	a2 7c 02 2f f0       	mov    %al,0xf02f027c$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	0f b6 05 7d 02 2f f0 	movzbl 0xf02f027d,%eax$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	a2 7d 02 2f f0       	mov    %al,0xf02f027d$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	0f b6 05 7d 02 2f f0 	movzbl 0xf02f027d,%eax$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	a2 7d 02 2f f0       	mov    %al,0xf02f027d$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	0f b6 05 7d 02 2f f0 	movzbl 0xf02f027d,%eax$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	83 c8 60             	or     $0x60,%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	a2 7d 02 2f f0       	mov    %al,0xf02f027d$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	0f b6 05 7d 02 2f f0 	movzbl 0xf02f027d,%eax$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	a2 7d 02 2f f0       	mov    %al,0xf02f027d$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	b8 7a 69 10 f0       	mov    $0xf010697a,%eax$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	66 a3 7e 02 2f f0    	mov    %ax,0xf02f027e$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	b8 80 69 10 f0       	mov    $0xf0106980,%eax$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	66 a3 80 02 2f f0    	mov    %ax,0xf02f0280$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	66 c7 05 82 02 2f f0 	movw   $0x8,0xf02f0282$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	08 00 $/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	0f b6 05 84 02 2f f0 	movzbl 0xf02f0284,%eax$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	a2 84 02 2f f0       	mov    %al,0xf02f0284$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	0f b6 05 84 02 2f f0 	movzbl 0xf02f0284,%eax$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	a2 84 02 2f f0       	mov    %al,0xf02f0284$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	0f b6 05 85 02 2f f0 	movzbl 0xf02f0285,%eax$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	a2 85 02 2f f0       	mov    %al,0xf02f0285$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	0f b6 05 85 02 2f f0 	movzbl 0xf02f0285,%eax$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	a2 85 02 2f f0       	mov    %al,0xf02f0285$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	0f b6 05 85 02 2f f0 	movzbl 0xf02f0285,%eax$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	a2 85 02 2f f0       	mov    %al,0xf02f0285$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	0f b6 05 85 02 2f f0 	movzbl 0xf02f0285,%eax$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	a2 85 02 2f f0       	mov    %al,0xf02f0285$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	b8 80 69 10 f0       	mov    $0xf0106980,%eax$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	66 a3 86 02 2f f0    	mov    %ax,0xf02f0286$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	b8 86 69 10 f0       	mov    $0xf0106986,%eax$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	66 a3 88 02 2f f0    	mov    %ax,0xf02f0288$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	66 c7 05 8a 02 2f f0 	movw   $0x8,0xf02f028a$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	08 00 $/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	0f b6 05 8c 02 2f f0 	movzbl 0xf02f028c,%eax$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	a2 8c 02 2f f0       	mov    %al,0xf02f028c$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	0f b6 05 8c 02 2f f0 	movzbl 0xf02f028c,%eax$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	a2 8c 02 2f f0       	mov    %al,0xf02f028c$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	0f b6 05 8d 02 2f f0 	movzbl 0xf02f028d,%eax$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	a2 8d 02 2f f0       	mov    %al,0xf02f028d$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	0f b6 05 8d 02 2f f0 	movzbl 0xf02f028d,%eax$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	a2 8d 02 2f f0       	mov    %al,0xf02f028d$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	0f b6 05 8d 02 2f f0 	movzbl 0xf02f028d,%eax$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	a2 8d 02 2f f0       	mov    %al,0xf02f028d$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	0f b6 05 8d 02 2f f0 	movzbl 0xf02f028d,%eax$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	a2 8d 02 2f f0       	mov    %al,0xf02f028d$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	b8 86 69 10 f0       	mov    $0xf0106986,%eax$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	66 a3 8e 02 2f f0    	mov    %ax,0xf02f028e$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	b8 8c 69 10 f0       	mov    $0xf010698c,%eax$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	66 a3 90 02 2f f0    	mov    %ax,0xf02f0290$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	66 c7 05 92 02 2f f0 	movw   $0x8,0xf02f0292$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	08 00 $/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	0f b6 05 94 02 2f f0 	movzbl 0xf02f0294,%eax$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	a2 94 02 2f f0       	mov    %al,0xf02f0294$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	0f b6 05 94 02 2f f0 	movzbl 0xf02f0294,%eax$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	a2 94 02 2f f0       	mov    %al,0xf02f0294$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	0f b6 05 95 02 2f f0 	movzbl 0xf02f0295,%eax$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	a2 95 02 2f f0       	mov    %al,0xf02f0295$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	0f b6 05 95 02 2f f0 	movzbl 0xf02f0295,%eax$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	a2 95 02 2f f0       	mov    %al,0xf02f0295$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	0f b6 05 95 02 2f f0 	movzbl 0xf02f0295,%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	a2 95 02 2f f0       	mov    %al,0xf02f0295$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	0f b6 05 95 02 2f f0 	movzbl 0xf02f0295,%eax$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	a2 95 02 2f f0       	mov    %al,0xf02f0295$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	b8 8c 69 10 f0       	mov    $0xf010698c,%eax$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	66 a3 96 02 2f f0    	mov    %ax,0xf02f0296$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	b8 92 69 10 f0       	mov    $0xf0106992,%eax$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	66 a3 98 02 2f f0    	mov    %ax,0xf02f0298$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	66 c7 05 9a 02 2f f0 	movw   $0x8,0xf02f029a$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	08 00 $/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	0f b6 05 9c 02 2f f0 	movzbl 0xf02f029c,%eax$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	a2 9c 02 2f f0       	mov    %al,0xf02f029c$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	0f b6 05 9c 02 2f f0 	movzbl 0xf02f029c,%eax$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	a2 9c 02 2f f0       	mov    %al,0xf02f029c$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	0f b6 05 9d 02 2f f0 	movzbl 0xf02f029d,%eax$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	83 c8 0e             	or     $0xe,%eax$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	a2 9d 02 2f f0       	mov    %al,0xf02f029d$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	0f b6 05 9d 02 2f f0 	movzbl 0xf02f029d,%eax$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	a2 9d 02 2f f0       	mov    %al,0xf02f029d$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	0f b6 05 9d 02 2f f0 	movzbl 0xf02f029d,%eax$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	a2 9d 02 2f f0       	mov    %al,0xf02f029d$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	0f b6 05 9d 02 2f f0 	movzbl 0xf02f029d,%eax$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	a2 9d 02 2f f0       	mov    %al,0xf02f029d$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	b8 92 69 10 f0       	mov    $0xf0106992,%eax$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	66 a3 9e 02 2f f0    	mov    %ax,0xf02f029e$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	b8 98 69 10 f0       	mov    $0xf0106998,%eax$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	66 a3 a0 02 2f f0    	mov    %ax,0xf02f02a0$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	66 c7 05 a2 02 2f f0 	movw   $0x8,0xf02f02a2$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	08 00 $/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	0f b6 05 a4 02 2f f0 	movzbl 0xf02f02a4,%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	a2 a4 02 2f f0       	mov    %al,0xf02f02a4$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	0f b6 05 a4 02 2f f0 	movzbl 0xf02f02a4,%eax$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	a2 a4 02 2f f0       	mov    %al,0xf02f02a4$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	0f b6 05 a5 02 2f f0 	movzbl 0xf02f02a5,%eax$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	83 c8 0e             	or     $0xe,%eax$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	a2 a5 02 2f f0       	mov    %al,0xf02f02a5$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	0f b6 05 a5 02 2f f0 	movzbl 0xf02f02a5,%eax$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	a2 a5 02 2f f0       	mov    %al,0xf02f02a5$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	0f b6 05 a5 02 2f f0 	movzbl 0xf02f02a5,%eax$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	a2 a5 02 2f f0       	mov    %al,0xf02f02a5$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	0f b6 05 a5 02 2f f0 	movzbl 0xf02f02a5,%eax$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	a2 a5 02 2f f0       	mov    %al,0xf02f02a5$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	b8 98 69 10 f0       	mov    $0xf0106998,%eax$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	66 a3 a6 02 2f f0    	mov    %ax,0xf02f02a6$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	b8 9c 69 10 f0       	mov    $0xf010699c,%eax$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	66 a3 b0 02 2f f0    	mov    %ax,0xf02f02b0$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	66 c7 05 b2 02 2f f0 	movw   $0x8,0xf02f02b2$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	08 00 $/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	0f b6 05 b4 02 2f f0 	movzbl 0xf02f02b4,%eax$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	a2 b4 02 2f f0       	mov    %al,0xf02f02b4$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	0f b6 05 b4 02 2f f0 	movzbl 0xf02f02b4,%eax$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	a2 b4 02 2f f0       	mov    %al,0xf02f02b4$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	0f b6 05 b5 02 2f f0 	movzbl 0xf02f02b5,%eax$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	83 c8 0e             	or     $0xe,%eax$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	a2 b5 02 2f f0       	mov    %al,0xf02f02b5$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	0f b6 05 b5 02 2f f0 	movzbl 0xf02f02b5,%eax$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	a2 b5 02 2f f0       	mov    %al,0xf02f02b5$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	0f b6 05 b5 02 2f f0 	movzbl 0xf02f02b5,%eax$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	a2 b5 02 2f f0       	mov    %al,0xf02f02b5$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	0f b6 05 b5 02 2f f0 	movzbl 0xf02f02b5,%eax$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	a2 b5 02 2f f0       	mov    %al,0xf02f02b5$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	b8 9c 69 10 f0       	mov    $0xf010699c,%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	66 a3 b6 02 2f f0    	mov    %ax,0xf02f02b6$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	b8 a0 69 10 f0       	mov    $0xf01069a0,%eax$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	66 a3 b8 02 2f f0    	mov    %ax,0xf02f02b8$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	66 c7 05 ba 02 2f f0 	movw   $0x8,0xf02f02ba$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	08 00 $/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	0f b6 05 bc 02 2f f0 	movzbl 0xf02f02bc,%eax$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	a2 bc 02 2f f0       	mov    %al,0xf02f02bc$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	0f b6 05 bc 02 2f f0 	movzbl 0xf02f02bc,%eax$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	a2 bc 02 2f f0       	mov    %al,0xf02f02bc$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	0f b6 05 bd 02 2f f0 	movzbl 0xf02f02bd,%eax$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	83 c8 0e             	or     $0xe,%eax$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	a2 bd 02 2f f0       	mov    %al,0xf02f02bd$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	0f b6 05 bd 02 2f f0 	movzbl 0xf02f02bd,%eax$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	a2 bd 02 2f f0       	mov    %al,0xf02f02bd$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	0f b6 05 bd 02 2f f0 	movzbl 0xf02f02bd,%eax$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	a2 bd 02 2f f0       	mov    %al,0xf02f02bd$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	0f b6 05 bd 02 2f f0 	movzbl 0xf02f02bd,%eax$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	a2 bd 02 2f f0       	mov    %al,0xf02f02bd$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	b8 a0 69 10 f0       	mov    $0xf01069a0,%eax$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	66 a3 be 02 2f f0    	mov    %ax,0xf02f02be$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	b8 a4 69 10 f0       	mov    $0xf01069a4,%eax$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	66 a3 c0 02 2f f0    	mov    %ax,0xf02f02c0$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	66 c7 05 c2 02 2f f0 	movw   $0x8,0xf02f02c2$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	08 00 $/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	0f b6 05 c4 02 2f f0 	movzbl 0xf02f02c4,%eax$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	a2 c4 02 2f f0       	mov    %al,0xf02f02c4$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	0f b6 05 c4 02 2f f0 	movzbl 0xf02f02c4,%eax$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	a2 c4 02 2f f0       	mov    %al,0xf02f02c4$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	0f b6 05 c5 02 2f f0 	movzbl 0xf02f02c5,%eax$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	83 c8 0e             	or     $0xe,%eax$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	a2 c5 02 2f f0       	mov    %al,0xf02f02c5$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	0f b6 05 c5 02 2f f0 	movzbl 0xf02f02c5,%eax$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	a2 c5 02 2f f0       	mov    %al,0xf02f02c5$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	0f b6 05 c5 02 2f f0 	movzbl 0xf02f02c5,%eax$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	a2 c5 02 2f f0       	mov    %al,0xf02f02c5$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	0f b6 05 c5 02 2f f0 	movzbl 0xf02f02c5,%eax$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	a2 c5 02 2f f0       	mov    %al,0xf02f02c5$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	b8 a4 69 10 f0       	mov    $0xf01069a4,%eax$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	66 a3 c6 02 2f f0    	mov    %ax,0xf02f02c6$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	b8 a8 69 10 f0       	mov    $0xf01069a8,%eax$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	66 a3 c8 02 2f f0    	mov    %ax,0xf02f02c8$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	66 c7 05 ca 02 2f f0 	movw   $0x8,0xf02f02ca$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	08 00 $/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	0f b6 05 cc 02 2f f0 	movzbl 0xf02f02cc,%eax$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	a2 cc 02 2f f0       	mov    %al,0xf02f02cc$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	0f b6 05 cc 02 2f f0 	movzbl 0xf02f02cc,%eax$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	a2 cc 02 2f f0       	mov    %al,0xf02f02cc$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	0f b6 05 cd 02 2f f0 	movzbl 0xf02f02cd,%eax$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	a2 cd 02 2f f0       	mov    %al,0xf02f02cd$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	0f b6 05 cd 02 2f f0 	movzbl 0xf02f02cd,%eax$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	a2 cd 02 2f f0       	mov    %al,0xf02f02cd$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	0f b6 05 cd 02 2f f0 	movzbl 0xf02f02cd,%eax$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	a2 cd 02 2f f0       	mov    %al,0xf02f02cd$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	0f b6 05 cd 02 2f f0 	movzbl 0xf02f02cd,%eax$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	a2 cd 02 2f f0       	mov    %al,0xf02f02cd$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	b8 a8 69 10 f0       	mov    $0xf01069a8,%eax$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	66 a3 ce 02 2f f0    	mov    %ax,0xf02f02ce$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	b8 ac 69 10 f0       	mov    $0xf01069ac,%eax$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	66 a3 d0 02 2f f0    	mov    %ax,0xf02f02d0$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	66 c7 05 d2 02 2f f0 	movw   $0x8,0xf02f02d2$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	08 00 $/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	0f b6 05 d4 02 2f f0 	movzbl 0xf02f02d4,%eax$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	a2 d4 02 2f f0       	mov    %al,0xf02f02d4$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	0f b6 05 d4 02 2f f0 	movzbl 0xf02f02d4,%eax$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	a2 d4 02 2f f0       	mov    %al,0xf02f02d4$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	0f b6 05 d5 02 2f f0 	movzbl 0xf02f02d5,%eax$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	a2 d5 02 2f f0       	mov    %al,0xf02f02d5$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	0f b6 05 d5 02 2f f0 	movzbl 0xf02f02d5,%eax$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	a2 d5 02 2f f0       	mov    %al,0xf02f02d5$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	0f b6 05 d5 02 2f f0 	movzbl 0xf02f02d5,%eax$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	a2 d5 02 2f f0       	mov    %al,0xf02f02d5$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	0f b6 05 d5 02 2f f0 	movzbl 0xf02f02d5,%eax$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	a2 d5 02 2f f0       	mov    %al,0xf02f02d5$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	b8 ac 69 10 f0       	mov    $0xf01069ac,%eax$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	66 a3 d6 02 2f f0    	mov    %ax,0xf02f02d6$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	b8 b0 69 10 f0       	mov    $0xf01069b0,%eax$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	66 a3 e0 02 2f f0    	mov    %ax,0xf02f02e0$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	66 c7 05 e2 02 2f f0 	movw   $0x8,0xf02f02e2$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	08 00 $/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	0f b6 05 e4 02 2f f0 	movzbl 0xf02f02e4,%eax$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	a2 e4 02 2f f0       	mov    %al,0xf02f02e4$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	0f b6 05 e4 02 2f f0 	movzbl 0xf02f02e4,%eax$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	a2 e4 02 2f f0       	mov    %al,0xf02f02e4$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	0f b6 05 e5 02 2f f0 	movzbl 0xf02f02e5,%eax$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	a2 e5 02 2f f0       	mov    %al,0xf02f02e5$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	0f b6 05 e5 02 2f f0 	movzbl 0xf02f02e5,%eax$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	a2 e5 02 2f f0       	mov    %al,0xf02f02e5$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	0f b6 05 e5 02 2f f0 	movzbl 0xf02f02e5,%eax$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	a2 e5 02 2f f0       	mov    %al,0xf02f02e5$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	0f b6 05 e5 02 2f f0 	movzbl 0xf02f02e5,%eax$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	a2 e5 02 2f f0       	mov    %al,0xf02f02e5$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	b8 b0 69 10 f0       	mov    $0xf01069b0,%eax$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	66 a3 e6 02 2f f0    	mov    %ax,0xf02f02e6$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	b8 b6 69 10 f0       	mov    $0xf01069b6,%eax$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	66 a3 e8 02 2f f0    	mov    %ax,0xf02f02e8$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	66 c7 05 ea 02 2f f0 	movw   $0x8,0xf02f02ea$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	08 00 $/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	0f b6 05 ec 02 2f f0 	movzbl 0xf02f02ec,%eax$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	a2 ec 02 2f f0       	mov    %al,0xf02f02ec$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	0f b6 05 ec 02 2f f0 	movzbl 0xf02f02ec,%eax$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	a2 ec 02 2f f0       	mov    %al,0xf02f02ec$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	0f b6 05 ed 02 2f f0 	movzbl 0xf02f02ed,%eax$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	a2 ed 02 2f f0       	mov    %al,0xf02f02ed$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	0f b6 05 ed 02 2f f0 	movzbl 0xf02f02ed,%eax$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	a2 ed 02 2f f0       	mov    %al,0xf02f02ed$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	0f b6 05 ed 02 2f f0 	movzbl 0xf02f02ed,%eax$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	a2 ed 02 2f f0       	mov    %al,0xf02f02ed$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	0f b6 05 ed 02 2f f0 	movzbl 0xf02f02ed,%eax$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	a2 ed 02 2f f0       	mov    %al,0xf02f02ed$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	b8 b6 69 10 f0       	mov    $0xf01069b6,%eax$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	66 a3 ee 02 2f f0    	mov    %ax,0xf02f02ee$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	b8 ba 69 10 f0       	mov    $0xf01069ba,%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	66 a3 f0 02 2f f0    	mov    %ax,0xf02f02f0$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	66 c7 05 f2 02 2f f0 	movw   $0x8,0xf02f02f2$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	08 00 $/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	0f b6 05 f4 02 2f f0 	movzbl 0xf02f02f4,%eax$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	a2 f4 02 2f f0       	mov    %al,0xf02f02f4$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	0f b6 05 f4 02 2f f0 	movzbl 0xf02f02f4,%eax$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	a2 f4 02 2f f0       	mov    %al,0xf02f02f4$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	0f b6 05 f5 02 2f f0 	movzbl 0xf02f02f5,%eax$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	a2 f5 02 2f f0       	mov    %al,0xf02f02f5$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	0f b6 05 f5 02 2f f0 	movzbl 0xf02f02f5,%eax$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	a2 f5 02 2f f0       	mov    %al,0xf02f02f5$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	0f b6 05 f5 02 2f f0 	movzbl 0xf02f02f5,%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	a2 f5 02 2f f0       	mov    %al,0xf02f02f5$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	0f b6 05 f5 02 2f f0 	movzbl 0xf02f02f5,%eax$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	a2 f5 02 2f f0       	mov    %al,0xf02f02f5$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	b8 ba 69 10 f0       	mov    $0xf01069ba,%eax$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	66 a3 f6 02 2f f0    	mov    %ax,0xf02f02f6$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	b8 c0 69 10 f0       	mov    $0xf01069c0,%eax$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	66 a3 f8 02 2f f0    	mov    %ax,0xf02f02f8$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	66 c7 05 fa 02 2f f0 	movw   $0x8,0xf02f02fa$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	08 00 $/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	0f b6 05 fc 02 2f f0 	movzbl 0xf02f02fc,%eax$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	a2 fc 02 2f f0       	mov    %al,0xf02f02fc$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	0f b6 05 fc 02 2f f0 	movzbl 0xf02f02fc,%eax$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	a2 fc 02 2f f0       	mov    %al,0xf02f02fc$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	0f b6 05 fd 02 2f f0 	movzbl 0xf02f02fd,%eax$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	a2 fd 02 2f f0       	mov    %al,0xf02f02fd$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	0f b6 05 fd 02 2f f0 	movzbl 0xf02f02fd,%eax$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	a2 fd 02 2f f0       	mov    %al,0xf02f02fd$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	0f b6 05 fd 02 2f f0 	movzbl 0xf02f02fd,%eax$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	a2 fd 02 2f f0       	mov    %al,0xf02f02fd$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	0f b6 05 fd 02 2f f0 	movzbl 0xf02f02fd,%eax$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	a2 fd 02 2f f0       	mov    %al,0xf02f02fd$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	b8 c0 69 10 f0       	mov    $0xf01069c0,%eax$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	66 a3 fe 02 2f f0    	mov    %ax,0xf02f02fe$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	b8 c6 69 10 f0       	mov    $0xf01069c6,%eax$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	66 a3 e0 03 2f f0    	mov    %ax,0xf02f03e0$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	66 c7 05 e2 03 2f f0 	movw   $0x8,0xf02f03e2$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	08 00 $/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	0f b6 05 e4 03 2f f0 	movzbl 0xf02f03e4,%eax$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	a2 e4 03 2f f0       	mov    %al,0xf02f03e4$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	0f b6 05 e4 03 2f f0 	movzbl 0xf02f03e4,%eax$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	a2 e4 03 2f f0       	mov    %al,0xf02f03e4$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	0f b6 05 e5 03 2f f0 	movzbl 0xf02f03e5,%eax$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	a2 e5 03 2f f0       	mov    %al,0xf02f03e5$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	0f b6 05 e5 03 2f f0 	movzbl 0xf02f03e5,%eax$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	a2 e5 03 2f f0       	mov    %al,0xf02f03e5$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	0f b6 05 e5 03 2f f0 	movzbl 0xf02f03e5,%eax$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	83 c8 60             	or     $0x60,%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	a2 e5 03 2f f0       	mov    %al,0xf02f03e5$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	0f b6 05 e5 03 2f f0 	movzbl 0xf02f03e5,%eax$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	a2 e5 03 2f f0       	mov    %al,0xf02f03e5$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	b8 c6 69 10 f0       	mov    $0xf01069c6,%eax$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	66 a3 e6 03 2f f0    	mov    %ax,0xf02f03e6$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	b8 cc 69 10 f0       	mov    $0xf01069cc,%eax$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	66 a3 60 03 2f f0    	mov    %ax,0xf02f0360$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	66 c7 05 62 03 2f f0 	movw   $0x8,0xf02f0362$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	08 00 $/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	0f b6 05 64 03 2f f0 	movzbl 0xf02f0364,%eax$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	a2 64 03 2f f0       	mov    %al,0xf02f0364$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	0f b6 05 64 03 2f f0 	movzbl 0xf02f0364,%eax$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	a2 64 03 2f f0       	mov    %al,0xf02f0364$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	0f b6 05 65 03 2f f0 	movzbl 0xf02f0365,%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	a2 65 03 2f f0       	mov    %al,0xf02f0365$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	0f b6 05 65 03 2f f0 	movzbl 0xf02f0365,%eax$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	a2 65 03 2f f0       	mov    %al,0xf02f0365$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	0f b6 05 65 03 2f f0 	movzbl 0xf02f0365,%eax$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	a2 65 03 2f f0       	mov    %al,0xf02f0365$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	0f b6 05 65 03 2f f0 	movzbl 0xf02f0365,%eax$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	a2 65 03 2f f0       	mov    %al,0xf02f0365$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	b8 cc 69 10 f0       	mov    $0xf01069cc,%eax$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	66 a3 66 03 2f f0    	mov    %ax,0xf02f0366$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	b8 d2 69 10 f0       	mov    $0xf01069d2,%eax$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	66 a3 68 03 2f f0    	mov    %ax,0xf02f0368$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	66 c7 05 6a 03 2f f0 	movw   $0x8,0xf02f036a$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	08 00 $/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	0f b6 05 6c 03 2f f0 	movzbl 0xf02f036c,%eax$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	a2 6c 03 2f f0       	mov    %al,0xf02f036c$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	0f b6 05 6c 03 2f f0 	movzbl 0xf02f036c,%eax$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	a2 6c 03 2f f0       	mov    %al,0xf02f036c$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	0f b6 05 6d 03 2f f0 	movzbl 0xf02f036d,%eax$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	a2 6d 03 2f f0       	mov    %al,0xf02f036d$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	0f b6 05 6d 03 2f f0 	movzbl 0xf02f036d,%eax$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	a2 6d 03 2f f0       	mov    %al,0xf02f036d$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	0f b6 05 6d 03 2f f0 	movzbl 0xf02f036d,%eax$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	a2 6d 03 2f f0       	mov    %al,0xf02f036d$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	0f b6 05 6d 03 2f f0 	movzbl 0xf02f036d,%eax$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	a2 6d 03 2f f0       	mov    %al,0xf02f036d$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	b8 d2 69 10 f0       	mov    $0xf01069d2,%eax$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	66 a3 6e 03 2f f0    	mov    %ax,0xf02f036e$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	b8 d8 69 10 f0       	mov    $0xf01069d8,%eax$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	66 a3 80 03 2f f0    	mov    %ax,0xf02f0380$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	66 c7 05 82 03 2f f0 	movw   $0x8,0xf02f0382$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	08 00 $/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	0f b6 05 84 03 2f f0 	movzbl 0xf02f0384,%eax$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	a2 84 03 2f f0       	mov    %al,0xf02f0384$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	0f b6 05 84 03 2f f0 	movzbl 0xf02f0384,%eax$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	a2 84 03 2f f0       	mov    %al,0xf02f0384$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	0f b6 05 85 03 2f f0 	movzbl 0xf02f0385,%eax$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	a2 85 03 2f f0       	mov    %al,0xf02f0385$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	0f b6 05 85 03 2f f0 	movzbl 0xf02f0385,%eax$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	a2 85 03 2f f0       	mov    %al,0xf02f0385$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	0f b6 05 85 03 2f f0 	movzbl 0xf02f0385,%eax$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	a2 85 03 2f f0       	mov    %al,0xf02f0385$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	0f b6 05 85 03 2f f0 	movzbl 0xf02f0385,%eax$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	a2 85 03 2f f0       	mov    %al,0xf02f0385$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	b8 d8 69 10 f0       	mov    $0xf01069d8,%eax$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	66 a3 86 03 2f f0    	mov    %ax,0xf02f0386$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	b8 de 69 10 f0       	mov    $0xf01069de,%eax$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	66 a3 98 03 2f f0    	mov    %ax,0xf02f0398$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	66 c7 05 9a 03 2f f0 	movw   $0x8,0xf02f039a$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	08 00 $/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	0f b6 05 9c 03 2f f0 	movzbl 0xf02f039c,%eax$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	a2 9c 03 2f f0       	mov    %al,0xf02f039c$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	0f b6 05 9c 03 2f f0 	movzbl 0xf02f039c,%eax$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	a2 9c 03 2f f0       	mov    %al,0xf02f039c$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	0f b6 05 9d 03 2f f0 	movzbl 0xf02f039d,%eax$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	a2 9d 03 2f f0       	mov    %al,0xf02f039d$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	0f b6 05 9d 03 2f f0 	movzbl 0xf02f039d,%eax$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	a2 9d 03 2f f0       	mov    %al,0xf02f039d$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	0f b6 05 9d 03 2f f0 	movzbl 0xf02f039d,%eax$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	a2 9d 03 2f f0       	mov    %al,0xf02f039d$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	0f b6 05 9d 03 2f f0 	movzbl 0xf02f039d,%eax$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	a2 9d 03 2f f0       	mov    %al,0xf02f039d$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	b8 de 69 10 f0       	mov    $0xf01069de,%eax$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	66 a3 9e 03 2f f0    	mov    %ax,0xf02f039e$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	b8 e4 69 10 f0       	mov    $0xf01069e4,%eax$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	66 a3 d0 03 2f f0    	mov    %ax,0xf02f03d0$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	66 c7 05 d2 03 2f f0 	movw   $0x8,0xf02f03d2$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	08 00 $/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	0f b6 05 d4 03 2f f0 	movzbl 0xf02f03d4,%eax$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	a2 d4 03 2f f0       	mov    %al,0xf02f03d4$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	0f b6 05 d4 03 2f f0 	movzbl 0xf02f03d4,%eax$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	a2 d4 03 2f f0       	mov    %al,0xf02f03d4$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	0f b6 05 d5 03 2f f0 	movzbl 0xf02f03d5,%eax$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	a2 d5 03 2f f0       	mov    %al,0xf02f03d5$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	0f b6 05 d5 03 2f f0 	movzbl 0xf02f03d5,%eax$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	a2 d5 03 2f f0       	mov    %al,0xf02f03d5$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	0f b6 05 d5 03 2f f0 	movzbl 0xf02f03d5,%eax$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	a2 d5 03 2f f0       	mov    %al,0xf02f03d5$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	0f b6 05 d5 03 2f f0 	movzbl 0xf02f03d5,%eax$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	a2 d5 03 2f f0       	mov    %al,0xf02f03d5$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	b8 e4 69 10 f0       	mov    $0xf01069e4,%eax$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	66 a3 d6 03 2f f0    	mov    %ax,0xf02f03d6$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	b8 ea 69 10 f0       	mov    $0xf01069ea,%eax$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	66 a3 f8 03 2f f0    	mov    %ax,0xf02f03f8$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	66 c7 05 fa 03 2f f0 	movw   $0x8,0xf02f03fa$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	08 00 $/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	0f b6 05 fc 03 2f f0 	movzbl 0xf02f03fc,%eax$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	a2 fc 03 2f f0       	mov    %al,0xf02f03fc$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	0f b6 05 fc 03 2f f0 	movzbl 0xf02f03fc,%eax$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	a2 fc 03 2f f0       	mov    %al,0xf02f03fc$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	0f b6 05 fd 03 2f f0 	movzbl 0xf02f03fd,%eax$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	a2 fd 03 2f f0       	mov    %al,0xf02f03fd$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	0f b6 05 fd 03 2f f0 	movzbl 0xf02f03fd,%eax$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	a2 fd 03 2f f0       	mov    %al,0xf02f03fd$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	0f b6 05 fd 03 2f f0 	movzbl 0xf02f03fd,%eax$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	a2 fd 03 2f f0       	mov    %al,0xf02f03fd$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	0f b6 05 fd 03 2f f0 	movzbl 0xf02f03fd,%eax$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	a2 fd 03 2f f0       	mov    %al,0xf02f03fd$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	b8 ea 69 10 f0       	mov    $0xf01069ea,%eax$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	66 a3 fe 03 2f f0    	mov    %ax,0xf02f03fe$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	e8 02 00 00 00       	call   f0106045 <trap_init_percpu>$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	c9                   	leave  $/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	c3                   	ret    $/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045 <trap_init_percpu>:$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	55                   	push   %ebp$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	89 e5                	mov    %esp,%ebp$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	57                   	push   %edi$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	56                   	push   %esi$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	53                   	push   %ebx$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	e8 2f 30 00 00       	call   f0109082 <cpunum>$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	89 c3                	mov    %eax,%ebx$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	e8 28 30 00 00       	call   f0109082 <cpunum>$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	05 00 20 2f f0       	add    $0xf02f2000,%eax$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	8d 90 00 80 00 00    	lea    0x8000(%eax),%edx$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	6b c3 74             	imul   $0x74,%ebx,%eax$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	05 30 10 2f f0       	add    $0xf02f1030,%eax$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	89 10                	mov    %edx,(%eax)$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	e8 fd 2f 00 00       	call   f0109082 <cpunum>$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	66 c7 40 14 10 00    	movw   $0x10,0x14(%eax)$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	e8 ea 2f 00 00       	call   f0109082 <cpunum>$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	e8 d4 2f 00 00       	call   f0109082 <cpunum>$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	83 c0 0c             	add    $0xc,%eax$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	89 c7                	mov    %eax,%edi$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	e8 c2 2f 00 00       	call   f0109082 <cpunum>$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	83 c0 0c             	add    $0xc,%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	89 c6                	mov    %eax,%esi$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	e8 ad 2f 00 00       	call   f0109082 <cpunum>$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	83 c0 0c             	add    $0xc,%eax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	66 c7 04 dd 80 a5 12 	movw   $0x67,-0xfed5a80(,%ebx,8)$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	f0 67 00 $/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	66 89 3c dd 82 a5 12 	mov    %di,-0xfed5a7e(,%ebx,8)$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	f0 $/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	89 f1                	mov    %esi,%ecx$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	88 0c dd 84 a5 12 f0 	mov    %cl,-0xfed5a7c(,%ebx,8)$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	0f b6 14 dd 85 a5 12 	movzbl -0xfed5a7b(,%ebx,8),%edx$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	f0 $/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	83 ca 09             	or     $0x9,%edx$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	88 14 dd 85 a5 12 f0 	mov    %dl,-0xfed5a7b(,%ebx,8)$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	0f b6 14 dd 85 a5 12 	movzbl -0xfed5a7b(,%ebx,8),%edx$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	f0 $/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	83 ca 10             	or     $0x10,%edx$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	88 14 dd 85 a5 12 f0 	mov    %dl,-0xfed5a7b(,%ebx,8)$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	0f b6 14 dd 85 a5 12 	movzbl -0xfed5a7b(,%ebx,8),%edx$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	f0 $/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	88 14 dd 85 a5 12 f0 	mov    %dl,-0xfed5a7b(,%ebx,8)$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	0f b6 14 dd 85 a5 12 	movzbl -0xfed5a7b(,%ebx,8),%edx$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	f0 $/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	88 14 dd 85 a5 12 f0 	mov    %dl,-0xfed5a7b(,%ebx,8)$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	0f b6 14 dd 86 a5 12 	movzbl -0xfed5a7a(,%ebx,8),%edx$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	f0 $/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	88 14 dd 86 a5 12 f0 	mov    %dl,-0xfed5a7a(,%ebx,8)$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	0f b6 14 dd 86 a5 12 	movzbl -0xfed5a7a(,%ebx,8),%edx$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	f0 $/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	88 14 dd 86 a5 12 f0 	mov    %dl,-0xfed5a7a(,%ebx,8)$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	0f b6 14 dd 86 a5 12 	movzbl -0xfed5a7a(,%ebx,8),%edx$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	f0 $/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	88 14 dd 86 a5 12 f0 	mov    %dl,-0xfed5a7a(,%ebx,8)$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	0f b6 14 dd 86 a5 12 	movzbl -0xfed5a7a(,%ebx,8),%edx$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	f0 $/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	83 ca 40             	or     $0x40,%edx$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	88 14 dd 86 a5 12 f0 	mov    %dl,-0xfed5a7a(,%ebx,8)$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	0f b6 14 dd 86 a5 12 	movzbl -0xfed5a7a(,%ebx,8),%edx$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	f0 $/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	88 14 dd 86 a5 12 f0 	mov    %dl,-0xfed5a7a(,%ebx,8)$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	88 04 dd 87 a5 12 f0 	mov    %al,-0xfed5a79(,%ebx,8)$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	e8 d3 2e 00 00       	call   f0109082 <cpunum>$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	83 c0 05             	add    $0x5,%eax$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	0f b6 14 c5 85 a5 12 	movzbl -0xfed5a7b(,%eax,8),%edx$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	f0 $/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	88 14 c5 85 a5 12 f0 	mov    %dl,-0xfed5a7b(,%eax,8)$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	e8 ab 2e 00 00       	call   f0109082 <cpunum>$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	83 c0 05             	add    $0x5,%eax$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	0f 00 d8             	ltr    %ax$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	c7 45 e0 f0 a5 12 f0 	movl   $0xf012a5f0,-0x20(%ebp)$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	0f 01 18             	lidtl  (%eax)$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	5b                   	pop    %ebx$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	5e                   	pop    %esi$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	5f                   	pop    %edi$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	5d                   	pop    %ebp$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	c3                   	ret    $/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e <print_trapframe>:$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	55                   	push   %ebp$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	e8 69 2e 00 00       	call   f0109082 <cpunum>$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	c7 04 24 ce bb 10 f0 	movl   $0xf010bbce,(%esp)$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	e8 0f f1 ff ff       	call   f010533f <cprintf>$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	e8 a5 01 00 00       	call   f01063e0 <print_regs>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	c7 04 24 ec bb 10 f0 	movl   $0xf010bbec,(%esp)$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	e8 ea f0 ff ff       	call   f010533f <cprintf>$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	c7 04 24 ff bb 10 f0 	movl   $0xf010bbff,(%esp)$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	e8 d0 f0 ff ff       	call   f010533f <cprintf>$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	e8 16 f1 ff ff       	call   f0105393 <trapname>$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	c7 04 24 12 bc 10 f0 	movl   $0xf010bc12,(%esp)$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	e8 a8 f0 ff ff       	call   f010533f <cprintf>$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	a1 c8 0a 2f f0       	mov    0xf02f0ac8,%eax$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	75 24                	jne    f01062c5 <print_trapframe+0xb7>$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	75 19                	jne    f01062c5 <print_trapframe+0xb7>$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	c7 04 24 24 bc 10 f0 	movl   $0xf010bc24,(%esp)$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	e8 7a f0 ff ff       	call   f010533f <cprintf>$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	c7 04 24 33 bc 10 f0 	movl   $0xf010bc33,(%esp)$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	e8 64 f0 ff ff       	call   f010533f <cprintf>$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	75 65                	jne    f010634b <print_trapframe+0x13d>$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	83 e0 01             	and    $0x1,%eax$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	85 c0                	test   %eax,%eax$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	74 07                	je     f01062fa <print_trapframe+0xec>$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	b9 41 bc 10 f0       	mov    $0xf010bc41,%ecx$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	eb 05                	jmp    f01062ff <print_trapframe+0xf1>$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	b9 4c bc 10 f0       	mov    $0xf010bc4c,%ecx$/;"	l
f01062ff	obj/kern/kernel.asm	/^f01062ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	83 e0 02             	and    $0x2,%eax$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	85 c0                	test   %eax,%eax$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	74 07                	je     f0106313 <print_trapframe+0x105>$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	ba 58 bc 10 f0       	mov    $0xf010bc58,%edx$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	eb 05                	jmp    f0106318 <print_trapframe+0x10a>$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	ba 5e bc 10 f0       	mov    $0xf010bc5e,%edx$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	83 e0 04             	and    $0x4,%eax$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	85 c0                	test   %eax,%eax$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	74 07                	je     f010632c <print_trapframe+0x11e>$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	b8 63 bc 10 f0       	mov    $0xf010bc63,%eax$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	eb 05                	jmp    f0106331 <print_trapframe+0x123>$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	b8 68 bc 10 f0       	mov    $0xf010bc68,%eax$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	c7 04 24 6f bc 10 f0 	movl   $0xf010bc6f,(%esp)$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	e8 f6 ef ff ff       	call   f010533f <cprintf>$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	eb 0c                	jmp    f0106357 <print_trapframe+0x149>$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	c7 04 24 7e bc 10 f0 	movl   $0xf010bc7e,(%esp)$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	e8 e8 ef ff ff       	call   f010533f <cprintf>$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	c7 04 24 80 bc 10 f0 	movl   $0xf010bc80,(%esp)$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	e8 d2 ef ff ff       	call   f010533f <cprintf>$/;"	l
f010636d	obj/kern/kernel.asm	/^f010636d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	c7 04 24 8f bc 10 f0 	movl   $0xf010bc8f,(%esp)$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	e8 b8 ef ff ff       	call   f010533f <cprintf>$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	c7 04 24 a2 bc 10 f0 	movl   $0xf010bca2,(%esp)$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	e8 a2 ef ff ff       	call   f010533f <cprintf>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 e0 03             	and    $0x3,%eax$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	85 c0                	test   %eax,%eax$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	74 30                	je     f01063de <print_trapframe+0x1d0>$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	c7 04 24 b1 bc 10 f0 	movl   $0xf010bcb1,(%esp)$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	e8 7b ef ff ff       	call   f010533f <cprintf>$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	0f b7 40 40          	movzwl 0x40(%eax),%eax$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	c7 04 24 c0 bc 10 f0 	movl   $0xf010bcc0,(%esp)$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	e8 61 ef ff ff       	call   f010533f <cprintf>$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	c9                   	leave  $/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	c3                   	ret    $/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0 <print_regs>:$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	55                   	push   %ebp$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	8b 00                	mov    (%eax),%eax$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	c7 04 24 d3 bc 10 f0 	movl   $0xf010bcd3,(%esp)$/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6:	e8 44 ef ff ff       	call   f010533f <cprintf>$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	c7 04 24 e2 bc 10 f0 	movl   $0xf010bce2,(%esp)$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	e8 2e ef ff ff       	call   f010533f <cprintf>$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	c7 04 24 f1 bc 10 f0 	movl   $0xf010bcf1,(%esp)$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	e8 18 ef ff ff       	call   f010533f <cprintf>$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	c7 04 24 00 bd 10 f0 	movl   $0xf010bd00,(%esp)$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	e8 02 ef ff ff       	call   f010533f <cprintf>$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	c7 04 24 0f bd 10 f0 	movl   $0xf010bd0f,(%esp)$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	e8 ec ee ff ff       	call   f010533f <cprintf>$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	c7 04 24 1e bd 10 f0 	movl   $0xf010bd1e,(%esp)$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	e8 d6 ee ff ff       	call   f010533f <cprintf>$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	c7 04 24 2d bd 10 f0 	movl   $0xf010bd2d,(%esp)$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	e8 c0 ee ff ff       	call   f010533f <cprintf>$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	c7 04 24 3c bd 10 f0 	movl   $0xf010bd3c,(%esp)$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	e8 aa ee ff ff       	call   f010533f <cprintf>$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	c9                   	leave  $/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	c3                   	ret    $/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497 <trap_dispatch>:$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	55                   	push   %ebp$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	89 e5                	mov    %esp,%ebp$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	57                   	push   %edi$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	56                   	push   %esi$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	53                   	push   %ebx$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	75 1c                	jne    f01064c7 <trap_dispatch+0x30>$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	c7 04 24 4b bd 10 f0 	movl   $0xf010bd4b,(%esp)$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	e8 88 ee ff ff       	call   f010533f <cprintf>$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	e8 4c fd ff ff       	call   f010620e <print_trapframe>$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	e9 1c 01 00 00       	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	0f 87 c1 00 00 00    	ja     f0106597 <trap_dispatch+0x100>$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	8b 04 85 90 bd 10 f0 	mov    -0xfef4270(,%eax,4),%eax$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	ff e0                	jmp    *%eax$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	e8 98 02 00 00       	call   f0106782 <page_fault_handler>$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	e9 f4 00 00 00       	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	e8 14 fd ff ff       	call   f010620e <print_trapframe>$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	e8 8b af ff ff       	call   f0101490 <monitor>$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	e9 d9 00 00 00       	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	e8 f9 fc ff ff       	call   f010620e <print_trapframe>$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	e8 70 af ff ff       	call   f0101490 <monitor>$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	e9 be 00 00 00       	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f0106525	obj/kern/kernel.asm	/^f0106525:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	8b 30                	mov    (%eax),%esi$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	8b 48 18             	mov    0x18(%eax),%ecx$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	e8 92 0f 00 00       	call   f01074f6 <syscall>$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	eb 71                	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	e8 2d 2b 00 00       	call   f01090a4 <lapic_eoi>$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	e8 06 2b 00 00       	call   f0109082 <cpunum>$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	e8 1f 3f 00 00       	call   f010a4a3 <time_tick>$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	e8 e4 04 00 00       	call   f0106a6d <sched_yield>$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	e8 fb a4 ff ff       	call   f0100a89 <kbd_intr>$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	eb 53                	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	e8 af 9e ff ff       	call   f0100444 <serial_intr>$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	eb 4c                	jmp    f01065e3 <trap_dispatch+0x14c>$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	e8 6c fc ff ff       	call   f010620e <print_trapframe>$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	75 1c                	jne    f01065cb <trap_dispatch+0x134>$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	c7 44 24 08 68 bd 10 	movl   $0xf010bd68,0x8(%esp)$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	f0 $/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	00 $/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	c7 04 24 81 bd 10 f0 	movl   $0xf010bd81,(%esp)$/;"	l
f01065c6	obj/kern/kernel.asm	/^f01065c6:	e8 37 9d ff ff       	call   f0100302 <_panic>$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	e8 b2 2a 00 00       	call   f0109082 <cpunum>$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	8b 00                	mov    (%eax),%eax$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	e8 fa e8 ff ff       	call   f0104edc <env_destroy>$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	90                   	nop$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	5b                   	pop    %ebx$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	5e                   	pop    %esi$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	5f                   	pop    %edi$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	5d                   	pop    %ebp$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	c3                   	ret    $/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb <trap>:$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	55                   	push   %ebp$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	57                   	push   %edi$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	56                   	push   %esi$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	53                   	push   %ebx$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	fc                   	cld    $/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	a1 20 0f 2f f0       	mov    0xf02f0f20,%eax$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	85 c0                	test   %eax,%eax$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	74 01                	je     f01065ff <trap+0x14>$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	f4                   	hlt    $/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	e8 7e 2a 00 00       	call   f0109082 <cpunum>$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	00 $/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	e8 46 ed ff ff       	call   f0105365 <xchg>$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	75 05                	jne    f0106629 <trap+0x3e>$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	e8 56 ed ff ff       	call   f010537f <lock_kernel>$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	9c                   	pushf  $/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	58                   	pop    %eax$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	85 c0                	test   %eax,%eax$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	74 24                	je     f010665e <trap+0x73>$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	c7 44 24 0c 54 be 10 	movl   $0xf010be54,0xc(%esp)$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	f0 $/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	c7 44 24 08 6d be 10 	movl   $0xf010be6d,0x8(%esp)$/;"	l
f0106649	obj/kern/kernel.asm	/^f0106649:	f0 $/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	c7 44 24 04 42 01 00 	movl   $0x142,0x4(%esp)$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	00 $/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	c7 04 24 81 bd 10 f0 	movl   $0xf010bd81,(%esp)$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	e8 a4 9c ff ff       	call   f0100302 <_panic>$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	83 e0 03             	and    $0x3,%eax$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010666e	obj/kern/kernel.asm	/^f010666e:	0f 85 b5 00 00 00    	jne    f0106729 <trap+0x13e>$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	e8 06 ed ff ff       	call   f010537f <lock_kernel>$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	e8 04 2a 00 00       	call   f0109082 <cpunum>$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	8b 00                	mov    (%eax),%eax$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	85 c0                	test   %eax,%eax$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	75 24                	jne    f01066b0 <trap+0xc5>$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	c7 44 24 0c 82 be 10 	movl   $0xf010be82,0xc(%esp)$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	f0 $/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	c7 44 24 08 6d be 10 	movl   $0xf010be6d,0x8(%esp)$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	f0 $/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	c7 44 24 04 4c 01 00 	movl   $0x14c,0x4(%esp)$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	00 $/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	c7 04 24 81 bd 10 f0 	movl   $0xf010bd81,(%esp)$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	e8 52 9c ff ff       	call   f0100302 <_panic>$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	e8 cd 29 00 00       	call   f0109082 <cpunum>$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	8b 00                	mov    (%eax),%eax$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	75 2f                	jne    f01066f6 <trap+0x10b>$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	e8 b6 29 00 00       	call   f0109082 <cpunum>$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	8b 00                	mov    (%eax),%eax$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	e8 78 e6 ff ff       	call   f0104d56 <env_free>$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	e8 9f 29 00 00       	call   f0109082 <cpunum>$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	e8 77 03 00 00       	call   f0106a6d <sched_yield>$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	e8 87 29 00 00       	call   f0109082 <cpunum>$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	8b 10                	mov    (%eax),%edx$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	89 c3                	mov    %eax,%ebx$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	89 d7                	mov    %edx,%edi$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	89 de                	mov    %ebx,%esi$/;"	l
f0106713	obj/kern/kernel.asm	/^f0106713:	89 c1                	mov    %eax,%ecx$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	e8 66 29 00 00       	call   f0109082 <cpunum>$/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	8b 00                	mov    (%eax),%eax$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	a3 c8 0a 2f f0       	mov    %eax,0xf02f0ac8$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	e8 5b fd ff ff       	call   f0106497 <trap_dispatch>$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	e8 41 29 00 00       	call   f0109082 <cpunum>$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	8b 00                	mov    (%eax),%eax$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	85 c0                	test   %eax,%eax$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	74 2e                	je     f010677d <trap+0x192>$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	e8 2e 29 00 00       	call   f0109082 <cpunum>$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	8b 00                	mov    (%eax),%eax$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764:	75 17                	jne    f010677d <trap+0x192>$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	e8 17 29 00 00       	call   f0109082 <cpunum>$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	8b 00                	mov    (%eax),%eax$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	e8 0d e8 ff ff       	call   f0104f8a <env_run>$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	e8 eb 02 00 00       	call   f0106a6d <sched_yield>$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782 <page_fault_handler>:$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	55                   	push   %ebp$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	89 e5                	mov    %esp,%ebp$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	53                   	push   %ebx$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010678f	obj/kern/kernel.asm	/^f010678f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f010679c	obj/kern/kernel.asm	/^f010679c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	83 e0 01             	and    $0x1,%eax$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	85 c0                	test   %eax,%eax$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	75 2e                	jne    f01067d4 <page_fault_handler+0x52>$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	e8 5d fa ff ff       	call   f010620e <print_trapframe>$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	c7 44 24 08 8c be 10 	movl   $0xf010be8c,0x8(%esp)$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	f0 $/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	00 $/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	c7 04 24 81 bd 10 f0 	movl   $0xf010bd81,(%esp)$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	e8 2e 9b ff ff       	call   f0100302 <_panic>$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	e8 a9 28 00 00       	call   f0109082 <cpunum>$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	8b 00                	mov    (%eax),%eax$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01067e6	obj/kern/kernel.asm	/^f01067e6:	85 c0                	test   %eax,%eax$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	74 27                	je     f0106811 <page_fault_handler+0x8f>$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	77 1a                	ja     f0106811 <page_fault_handler+0x8f>$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	3d 00 e0 bf ee       	cmp    $0xeebfe000,%eax$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	76 62                	jbe    f0106866 <page_fault_handler+0xe4>$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	3d ff ef bf ee       	cmp    $0xeebfefff,%eax$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	77 55                	ja     f0106866 <page_fault_handler+0xe4>$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	8b 58 30             	mov    0x30(%eax),%ebx$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	e8 66 28 00 00       	call   f0109082 <cpunum>$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	8b 00                	mov    (%eax),%eax$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	c7 04 24 cc be 10 f0 	movl   $0xf010becc,(%esp)$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	e8 fb ea ff ff       	call   f010533f <cprintf>$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	e8 bf f9 ff ff       	call   f010620e <print_trapframe>$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	e8 2e 28 00 00       	call   f0109082 <cpunum>$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	8b 00                	mov    (%eax),%eax$/;"	l
f010685e	obj/kern/kernel.asm	/^f010685e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	e8 76 e6 ff ff       	call   f0104edc <env_destroy>$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	3d ff df bf ee       	cmp    $0xeebfdfff,%eax$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	77 09                	ja     f010687c <page_fault_handler+0xfa>$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	c7 45 f4 cc ff bf ee 	movl   $0xeebfffcc,-0xc(%ebp)$/;"	l
f010687a	obj/kern/kernel.asm	/^f010687a:	eb 0c                	jmp    f0106888 <page_fault_handler+0x106>$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f0106882	obj/kern/kernel.asm	/^f0106882:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010688b	obj/kern/kernel.asm	/^f010688b:	e8 f2 27 00 00       	call   f0109082 <cpunum>$/;"	l
f0106890	obj/kern/kernel.asm	/^f0106890:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	8b 00                	mov    (%eax),%eax$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	00 $/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	00 $/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	e8 e7 b7 ff ff       	call   f010209d <user_mem_assert>$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	89 10                	mov    %edx,(%eax)$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	8b 50 2c             	mov    0x2c(%eax),%edx$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01068d6	obj/kern/kernel.asm	/^f01068d6:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
f01068e1	obj/kern/kernel.asm	/^f01068e1:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	89 50 24             	mov    %edx,0x24(%eax)$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	8b 50 30             	mov    0x30(%eax),%edx$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	e8 4b 27 00 00       	call   f0109082 <cpunum>$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	8b 00                	mov    (%eax),%eax$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	89 c2                	mov    %eax,%edx$/;"	l
f0106946	obj/kern/kernel.asm	/^f0106946:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	e8 31 27 00 00       	call   f0109082 <cpunum>$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	8b 00                	mov    (%eax),%eax$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	e8 27 e6 ff ff       	call   f0104f8a <env_run>$/;"	l
f0106963	obj/kern/kernel.asm	/^f0106963:	90                   	nop$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964 <t_divide>:$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	6a 00                	push   $0x0$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	6a 00                	push   $0x0$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	e9 83 00 00 00       	jmp    f01069f0 <_alltraps>$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	90                   	nop$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e <t_debug>:$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	6a 00                	push   $0x0$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	6a 01                	push   $0x1$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	eb 7c                	jmp    f01069f0 <_alltraps>$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974 <t_nmi>:$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	6a 00                	push   $0x0$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	6a 02                	push   $0x2$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	eb 76                	jmp    f01069f0 <_alltraps>$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a <t_brkpt>:$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	6a 00                	push   $0x0$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	6a 03                	push   $0x3$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	eb 70                	jmp    f01069f0 <_alltraps>$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980 <t_oflow>:$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	6a 00                	push   $0x0$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	6a 04                	push   $0x4$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	eb 6a                	jmp    f01069f0 <_alltraps>$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986 <t_bound>:$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	6a 00                	push   $0x0$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	6a 05                	push   $0x5$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	eb 64                	jmp    f01069f0 <_alltraps>$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c <t_illop>:$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	6a 00                	push   $0x0$/;"	l
f010698e	obj/kern/kernel.asm	/^f010698e:	6a 06                	push   $0x6$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	eb 5e                	jmp    f01069f0 <_alltraps>$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992 <t_device>:$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	6a 00                	push   $0x0$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	6a 07                	push   $0x7$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	eb 58                	jmp    f01069f0 <_alltraps>$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998 <t_dblflt>:$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	6a 08                	push   $0x8$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	eb 54                	jmp    f01069f0 <_alltraps>$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c <t_tss>:$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	6a 0a                	push   $0xa$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	eb 50                	jmp    f01069f0 <_alltraps>$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0 <t_segnp>:$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	6a 0b                	push   $0xb$/;"	l
f01069a2	obj/kern/kernel.asm	/^f01069a2:	eb 4c                	jmp    f01069f0 <_alltraps>$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4 <t_stack>:$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	6a 0c                	push   $0xc$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	eb 48                	jmp    f01069f0 <_alltraps>$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8 <t_gpflt>:$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	6a 0d                	push   $0xd$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	eb 44                	jmp    f01069f0 <_alltraps>$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac <t_pgflt>:$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	6a 0e                	push   $0xe$/;"	l
f01069ae	obj/kern/kernel.asm	/^f01069ae:	eb 40                	jmp    f01069f0 <_alltraps>$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0 <t_fperr>:$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	6a 00                	push   $0x0$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	6a 10                	push   $0x10$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	eb 3a                	jmp    f01069f0 <_alltraps>$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6 <t_align>:$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	6a 11                	push   $0x11$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	eb 36                	jmp    f01069f0 <_alltraps>$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba <t_mchk>:$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	6a 00                	push   $0x0$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	6a 12                	push   $0x12$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	eb 30                	jmp    f01069f0 <_alltraps>$/;"	l
f01069c0	obj/kern/kernel.asm	/^f01069c0 <t_simderr>:$/;"	l
f01069c0	obj/kern/kernel.asm	/^f01069c0:	6a 00                	push   $0x0$/;"	l
f01069c2	obj/kern/kernel.asm	/^f01069c2:	6a 13                	push   $0x13$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	eb 2a                	jmp    f01069f0 <_alltraps>$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6 <t_syscall>:$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	6a 00                	push   $0x0$/;"	l
f01069c8	obj/kern/kernel.asm	/^f01069c8:	6a 30                	push   $0x30$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	eb 24                	jmp    f01069f0 <_alltraps>$/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc <irq_timer>:$/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc:	6a 00                	push   $0x0$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	6a 20                	push   $0x20$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	eb 1e                	jmp    f01069f0 <_alltraps>$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2 <irq_kbd>:$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	6a 00                	push   $0x0$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	6a 21                	push   $0x21$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	eb 18                	jmp    f01069f0 <_alltraps>$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8 <irq_serial>:$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	6a 00                	push   $0x0$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	6a 24                	push   $0x24$/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	eb 12                	jmp    f01069f0 <_alltraps>$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de <irq_spurious>:$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	6a 00                	push   $0x0$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	6a 27                	push   $0x27$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	eb 0c                	jmp    f01069f0 <_alltraps>$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4 <irq_ide>:$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	6a 00                	push   $0x0$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	6a 2e                	push   $0x2e$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	eb 06                	jmp    f01069f0 <_alltraps>$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea <irq_error>:$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	6a 00                	push   $0x0$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	6a 33                	push   $0x33$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	eb 00                	jmp    f01069f0 <_alltraps>$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0 <_alltraps>:$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	1e                   	push   %ds$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	06                   	push   %es$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	60                   	pusha  $/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	8e d8                	mov    %eax,%ds$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	8e c0                	mov    %eax,%es$/;"	l
f01069fc	obj/kern/kernel.asm	/^f01069fc:	54                   	push   %esp$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	e8 e9 fb ff ff       	call   f01065eb <trap>$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02 <xchg>:$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	55                   	push   %ebp$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106a08	obj/kern/kernel.asm	/^f0106a08:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	c9                   	leave  $/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	c3                   	ret    $/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c <unlock_kernel>:$/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c:	55                   	push   %ebp$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	c7 04 24 00 a6 12 f0 	movl   $0xf012a600,(%esp)$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	e8 57 29 00 00       	call   f0109385 <spin_unlock>$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	f3 90                	pause  $/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	c9                   	leave  $/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	c3                   	ret    $/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32 <_paddr>:$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	55                   	push   %ebp$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	77 21                	ja     f0106a63 <_paddr+0x31>$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	c7 44 24 08 90 c0 10 	movl   $0xf010c090,0x8(%esp)$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	f0 $/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	e8 9f 98 ff ff       	call   f0100302 <_panic>$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	c9                   	leave  $/;"	l
f0106a6c	obj/kern/kernel.asm	/^f0106a6c:	c3                   	ret    $/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d <sched_yield>:$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	55                   	push   %ebp$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	e8 0a 26 00 00       	call   f0109082 <cpunum>$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106a80	obj/kern/kernel.asm	/^f0106a80:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	85 c0                	test   %eax,%eax$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	74 19                	je     f0106a9f <sched_yield+0x32>$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	e8 f7 25 00 00       	call   f0109082 <cpunum>$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106a8e	obj/kern/kernel.asm	/^f0106a8e:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	eb 05                	jmp    f0106aa4 <sched_yield+0x37>$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	89 d0                	mov    %edx,%eax$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	01 c2                	add    %eax,%edx$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	29 c2                	sub    %eax,%edx$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	89 d0                	mov    %edx,%eax$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	e9 92 00 00 00       	jmp    f0106b62 <sched_yield+0xf5>$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	eb 78                	jmp    f0106b51 <sched_yield+0xe4>$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106ae2	obj/kern/kernel.asm	/^f0106ae2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106ae5	obj/kern/kernel.asm	/^f0106ae5:	89 c1                	mov    %eax,%ecx$/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	01 c8                	add    %ecx,%eax$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	01 d0                	add    %edx,%eax$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0106af4	obj/kern/kernel.asm	/^f0106af4:	75 3a                	jne    f0106b30 <sched_yield+0xc3>$/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106afc	obj/kern/kernel.asm	/^f0106afc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	89 c1                	mov    %eax,%ecx$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106b07	obj/kern/kernel.asm	/^f0106b07:	01 c8                	add    %ecx,%eax$/;"	l
f0106b09	obj/kern/kernel.asm	/^f0106b09:	01 d0                	add    %edx,%eax$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f0106b0e	obj/kern/kernel.asm	/^f0106b0e:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0106b11	obj/kern/kernel.asm	/^f0106b11:	75 1d                	jne    f0106b30 <sched_yield+0xc3>$/;"	l
f0106b13	obj/kern/kernel.asm	/^f0106b13:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106b19	obj/kern/kernel.asm	/^f0106b19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106b1f	obj/kern/kernel.asm	/^f0106b1f:	89 c1                	mov    %eax,%ecx$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106b24	obj/kern/kernel.asm	/^f0106b24:	01 c8                	add    %ecx,%eax$/;"	l
f0106b26	obj/kern/kernel.asm	/^f0106b26:	01 d0                	add    %edx,%eax$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	e8 5a e4 ff ff       	call   f0104f8a <env_run>$/;"	l
f0106b30	obj/kern/kernel.asm	/^f0106b30:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106b36	obj/kern/kernel.asm	/^f0106b36:	89 d0                	mov    %edx,%eax$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	01 c2                	add    %eax,%edx$/;"	l
f0106b40	obj/kern/kernel.asm	/^f0106b40:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0106b46	obj/kern/kernel.asm	/^f0106b46:	29 c2                	sub    %eax,%edx$/;"	l
f0106b48	obj/kern/kernel.asm	/^f0106b48:	89 d0                	mov    %edx,%eax$/;"	l
f0106b4a	obj/kern/kernel.asm	/^f0106b4a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0106b51	obj/kern/kernel.asm	/^f0106b51:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	0f 8e 7b ff ff ff    	jle    f0106ad9 <sched_yield+0x6c>$/;"	l
f0106b5e	obj/kern/kernel.asm	/^f0106b5e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0106b62	obj/kern/kernel.asm	/^f0106b62:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)$/;"	l
f0106b66	obj/kern/kernel.asm	/^f0106b66:	0f 86 64 ff ff ff    	jbe    f0106ad0 <sched_yield+0x63>$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	e8 11 25 00 00       	call   f0109082 <cpunum>$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	8b 00                	mov    (%eax),%eax$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	85 c0                	test   %eax,%eax$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	74 2e                	je     f0106bad <sched_yield+0x140>$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	e8 fe 24 00 00       	call   f0109082 <cpunum>$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106b87	obj/kern/kernel.asm	/^f0106b87:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106b8c	obj/kern/kernel.asm	/^f0106b8c:	8b 00                	mov    (%eax),%eax$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	75 17                	jne    f0106bad <sched_yield+0x140>$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	e8 e7 24 00 00       	call   f0109082 <cpunum>$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106b9e	obj/kern/kernel.asm	/^f0106b9e:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	8b 00                	mov    (%eax),%eax$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ba8	obj/kern/kernel.asm	/^f0106ba8:	e8 dd e3 ff ff       	call   f0104f8a <env_run>$/;"	l
f0106bad	obj/kern/kernel.asm	/^f0106bad:	e8 02 00 00 00       	call   f0106bb4 <sched_halt>$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	c9                   	leave  $/;"	l
f0106bb3	obj/kern/kernel.asm	/^f0106bb3:	c3                   	ret    $/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4 <sched_halt>:$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	55                   	push   %ebp$/;"	l
f0106bb5	obj/kern/kernel.asm	/^f0106bb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	eb 5b                	jmp    f0106c1e <sched_halt+0x6a>$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	89 c1                	mov    %eax,%ecx$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	01 c8                	add    %ecx,%eax$/;"	l
f0106bd6	obj/kern/kernel.asm	/^f0106bd6:	01 d0                	add    %edx,%eax$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	74 47                	je     f0106c27 <sched_halt+0x73>$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106be6	obj/kern/kernel.asm	/^f0106be6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec:	89 c1                	mov    %eax,%ecx$/;"	l
f0106bee	obj/kern/kernel.asm	/^f0106bee:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	01 c8                	add    %ecx,%eax$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	01 d0                	add    %edx,%eax$/;"	l
f0106bf5	obj/kern/kernel.asm	/^f0106bf5:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	74 2a                	je     f0106c27 <sched_halt+0x73>$/;"	l
f0106bfd	obj/kern/kernel.asm	/^f0106bfd:	8b 15 3c 02 2f f0    	mov    0xf02f023c,%edx$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	89 c1                	mov    %eax,%ecx$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0106c0e	obj/kern/kernel.asm	/^f0106c0e:	01 c8                	add    %ecx,%eax$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	01 d0                	add    %edx,%eax$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0106c15	obj/kern/kernel.asm	/^f0106c15:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	74 0d                	je     f0106c27 <sched_halt+0x73>$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0106c25	obj/kern/kernel.asm	/^f0106c25:	7e 9c                	jle    f0106bc3 <sched_halt+0xf>$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	81 7d f4 00 04 00 00 	cmpl   $0x400,-0xc(%ebp)$/;"	l
f0106c2e	obj/kern/kernel.asm	/^f0106c2e:	75 1a                	jne    f0106c4a <sched_halt+0x96>$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	c7 04 24 b4 c0 10 f0 	movl   $0xf010c0b4,(%esp)$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	e8 03 e7 ff ff       	call   f010533f <cprintf>$/;"	l
f0106c3c	obj/kern/kernel.asm	/^f0106c3c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	e8 48 a8 ff ff       	call   f0101490 <monitor>$/;"	l
f0106c48	obj/kern/kernel.asm	/^f0106c48:	eb f2                	jmp    f0106c3c <sched_halt+0x88>$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	e8 33 24 00 00       	call   f0109082 <cpunum>$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	a1 2c 0f 2f f0       	mov    0xf02f0f2c,%eax$/;"	l
f0106c62	obj/kern/kernel.asm	/^f0106c62:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	00 $/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	c7 04 24 dd c0 10 f0 	movl   $0xf010c0dd,(%esp)$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	e8 b8 fd ff ff       	call   f0106a32 <_paddr>$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106c80	obj/kern/kernel.asm	/^f0106c80:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	e8 fa 23 00 00       	call   f0109082 <cpunum>$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f0106c90	obj/kern/kernel.asm	/^f0106c90:	83 c0 04             	add    $0x4,%eax$/;"	l
f0106c93	obj/kern/kernel.asm	/^f0106c93:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0106c9a	obj/kern/kernel.asm	/^f0106c9a:	00 $/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	e8 5f fd ff ff       	call   f0106a02 <xchg>$/;"	l
f0106ca3	obj/kern/kernel.asm	/^f0106ca3:	e8 74 fd ff ff       	call   f0106a1c <unlock_kernel>$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	e8 d5 23 00 00       	call   f0109082 <cpunum>$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	05 30 10 2f f0       	add    $0xf02f1030,%eax$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	8b 00                	mov    (%eax),%eax$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106cbc	obj/kern/kernel.asm	/^f0106cbc:	89 c4                	mov    %eax,%esp$/;"	l
f0106cbe	obj/kern/kernel.asm	/^f0106cbe:	6a 00                	push   $0x0$/;"	l
f0106cc0	obj/kern/kernel.asm	/^f0106cc0:	6a 00                	push   $0x0$/;"	l
f0106cc2	obj/kern/kernel.asm	/^f0106cc2:	fb                   	sti    $/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	f4                   	hlt    $/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	eb fd                	jmp    f0106cc3 <sched_halt+0x10f>$/;"	l
f0106cc6	obj/kern/kernel.asm	/^f0106cc6:	c9                   	leave  $/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	c3                   	ret    $/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8 <sys_cputs>:$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	55                   	push   %ebp$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ccb	obj/kern/kernel.asm	/^f0106ccb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106cce	obj/kern/kernel.asm	/^f0106cce:	e8 af 23 00 00       	call   f0109082 <cpunum>$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106cd6	obj/kern/kernel.asm	/^f0106cd6:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	8b 00                	mov    (%eax),%eax$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0106ce4	obj/kern/kernel.asm	/^f0106ce4:	00 $/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106cf3	obj/kern/kernel.asm	/^f0106cf3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	e8 a2 b3 ff ff       	call   f010209d <user_mem_assert>$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106cfe	obj/kern/kernel.asm	/^f0106cfe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106d02	obj/kern/kernel.asm	/^f0106d02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	c7 04 24 ec c0 10 f0 	movl   $0xf010c0ec,(%esp)$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	e8 2a e6 ff ff       	call   f010533f <cprintf>$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	c9                   	leave  $/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	c3                   	ret    $/;"	l
f0106d17	obj/kern/kernel.asm	/^f0106d17 <sys_cgetc>:$/;"	l
f0106d17	obj/kern/kernel.asm	/^f0106d17:	55                   	push   %ebp$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d1d	obj/kern/kernel.asm	/^f0106d1d:	e8 ec 9d ff ff       	call   f0100b0e <cons_getc>$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	c9                   	leave  $/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	c3                   	ret    $/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24 <sys_getenvid>:$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	55                   	push   %ebp$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d27	obj/kern/kernel.asm	/^f0106d27:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	e8 53 23 00 00       	call   f0109082 <cpunum>$/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106d32	obj/kern/kernel.asm	/^f0106d32:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	8b 00                	mov    (%eax),%eax$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	c9                   	leave  $/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	c3                   	ret    $/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e <sys_env_destroy>:$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	55                   	push   %ebp$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	00 $/;"	l
f0106d4c	obj/kern/kernel.asm	/^f0106d4c:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d53	obj/kern/kernel.asm	/^f0106d53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	e8 9c d8 ff ff       	call   f01045fa <envid2env>$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	79 05                	jns    f0106d6c <sys_env_destroy+0x2e>$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a:	eb 1c                	jmp    f0106d88 <sys_env_destroy+0x4a>$/;"	l
f0106d6c	obj/kern/kernel.asm	/^f0106d6c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72:	89 90 80 00 00 00    	mov    %edx,0x80(%eax)$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d7e	obj/kern/kernel.asm	/^f0106d7e:	e8 59 e1 ff ff       	call   f0104edc <env_destroy>$/;"	l
f0106d83	obj/kern/kernel.asm	/^f0106d83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d88	obj/kern/kernel.asm	/^f0106d88:	c9                   	leave  $/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	c3                   	ret    $/;"	l
f0106d8a	obj/kern/kernel.asm	/^f0106d8a <sys_yield>:$/;"	l
f0106d8a	obj/kern/kernel.asm	/^f0106d8a:	55                   	push   %ebp$/;"	l
f0106d8b	obj/kern/kernel.asm	/^f0106d8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d90	obj/kern/kernel.asm	/^f0106d90:	e8 d8 fc ff ff       	call   f0106a6d <sched_yield>$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95 <sys_exofork>:$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	55                   	push   %ebp$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d98	obj/kern/kernel.asm	/^f0106d98:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	e8 e2 22 00 00       	call   f0109082 <cpunum>$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106da3	obj/kern/kernel.asm	/^f0106da3:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106da8	obj/kern/kernel.asm	/^f0106da8:	8b 00                	mov    (%eax),%eax$/;"	l
f0106daa	obj/kern/kernel.asm	/^f0106daa:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106db1	obj/kern/kernel.asm	/^f0106db1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106db7	obj/kern/kernel.asm	/^f0106db7:	e8 0c db ff ff       	call   f01048c8 <env_alloc>$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	79 18                	jns    f0106ddd <sys_exofork+0x48>$/;"	l
f0106dc5	obj/kern/kernel.asm	/^f0106dc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	c7 04 24 f1 c0 10 f0 	movl   $0xf010c0f1,(%esp)$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	e8 67 e5 ff ff       	call   f010533f <cprintf>$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	eb 42                	jmp    f0106e1f <sys_exofork+0x8a>$/;"	l
f0106ddd	obj/kern/kernel.asm	/^f0106ddd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	e8 96 22 00 00       	call   f0109082 <cpunum>$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106def	obj/kern/kernel.asm	/^f0106def:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0106df4	obj/kern/kernel.asm	/^f0106df4:	8b 00                	mov    (%eax),%eax$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	89 c2                	mov    %eax,%edx$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106dfb	obj/kern/kernel.asm	/^f0106dfb:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0106e02	obj/kern/kernel.asm	/^f0106e02:	00 $/;"	l
f0106e03	obj/kern/kernel.asm	/^f0106e03:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	e8 19 18 00 00       	call   f0108628 <memmove>$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0106e19	obj/kern/kernel.asm	/^f0106e19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	c9                   	leave  $/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	c3                   	ret    $/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21 <sys_env_set_status>:$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	55                   	push   %ebp$/;"	l
f0106e22	obj/kern/kernel.asm	/^f0106e22:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106e27	obj/kern/kernel.asm	/^f0106e27:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)$/;"	l
f0106e2b	obj/kern/kernel.asm	/^f0106e2b:	74 0d                	je     f0106e3a <sys_env_set_status+0x19>$/;"	l
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	83 7d 0c 04          	cmpl   $0x4,0xc(%ebp)$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	74 07                	je     f0106e3a <sys_env_set_status+0x19>$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	eb 33                	jmp    f0106e6d <sys_env_set_status+0x4c>$/;"	l
f0106e3a	obj/kern/kernel.asm	/^f0106e3a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	00 $/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106e4f	obj/kern/kernel.asm	/^f0106e4f:	e8 a6 d7 ff ff       	call   f01045fa <envid2env>$/;"	l
f0106e54	obj/kern/kernel.asm	/^f0106e54:	85 c0                	test   %eax,%eax$/;"	l
f0106e56	obj/kern/kernel.asm	/^f0106e56:	79 07                	jns    f0106e5f <sys_env_set_status+0x3e>$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0106e5d	obj/kern/kernel.asm	/^f0106e5d:	eb 0e                	jmp    f0106e6d <sys_env_set_status+0x4c>$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	89 50 54             	mov    %edx,0x54(%eax)$/;"	l
f0106e68	obj/kern/kernel.asm	/^f0106e68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e6d	obj/kern/kernel.asm	/^f0106e6d:	c9                   	leave  $/;"	l
f0106e6e	obj/kern/kernel.asm	/^f0106e6e:	c3                   	ret    $/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f <sys_env_set_trapframe>:$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	55                   	push   %ebp$/;"	l
f0106e70	obj/kern/kernel.asm	/^f0106e70:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	57                   	push   %edi$/;"	l
f0106e73	obj/kern/kernel.asm	/^f0106e73:	56                   	push   %esi$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	53                   	push   %ebx$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	00 $/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0106e83	obj/kern/kernel.asm	/^f0106e83:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106e8d	obj/kern/kernel.asm	/^f0106e8d:	e8 68 d7 ff ff       	call   f01045fa <envid2env>$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	85 c0                	test   %eax,%eax$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	74 07                	je     f0106e9d <sys_env_set_trapframe+0x2e>$/;"	l
f0106e96	obj/kern/kernel.asm	/^f0106e96:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	eb 4b                	jmp    f0106ee8 <sys_env_set_trapframe+0x79>$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106ea0	obj/kern/kernel.asm	/^f0106ea0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	00 $/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0106eaf	obj/kern/kernel.asm	/^f0106eaf:	00 $/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	e8 de b1 ff ff       	call   f010209d <user_mem_assert>$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	89 c3                	mov    %eax,%ebx$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	89 d7                	mov    %edx,%edi$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	89 de                	mov    %ebx,%esi$/;"	l
f0106ed0	obj/kern/kernel.asm	/^f0106ed0:	89 c1                	mov    %eax,%ecx$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106ed7	obj/kern/kernel.asm	/^f0106ed7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106eda	obj/kern/kernel.asm	/^f0106eda:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	80 ce 02             	or     $0x2,%dh$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	5b                   	pop    %ebx$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	5e                   	pop    %esi$/;"	l
f0106eed	obj/kern/kernel.asm	/^f0106eed:	5f                   	pop    %edi$/;"	l
f0106eee	obj/kern/kernel.asm	/^f0106eee:	5d                   	pop    %ebp$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	c3                   	ret    $/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0 <sys_env_set_pgfault_upcall>:$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0:	55                   	push   %ebp$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	00 $/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	e8 ea d6 ff ff       	call   f01045fa <envid2env>$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	85 c0                	test   %eax,%eax$/;"	l
f0106f12	obj/kern/kernel.asm	/^f0106f12:	74 07                	je     f0106f1b <sys_env_set_pgfault_upcall+0x2b>$/;"	l
f0106f14	obj/kern/kernel.asm	/^f0106f14:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	eb 0e                	jmp    f0106f29 <sys_env_set_pgfault_upcall+0x39>$/;"	l
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	89 50 64             	mov    %edx,0x64(%eax)$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	c9                   	leave  $/;"	l
f0106f2a	obj/kern/kernel.asm	/^f0106f2a:	c3                   	ret    $/;"	l
f0106f2b	obj/kern/kernel.asm	/^f0106f2b <sys_page_alloc>:$/;"	l
f0106f2b	obj/kern/kernel.asm	/^f0106f2b:	55                   	push   %ebp$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f2e	obj/kern/kernel.asm	/^f0106f2e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	83 e0 04             	and    $0x4,%eax$/;"	l
f0106f37	obj/kern/kernel.asm	/^f0106f37:	85 c0                	test   %eax,%eax$/;"	l
f0106f39	obj/kern/kernel.asm	/^f0106f39:	75 0a                	jne    f0106f45 <sys_page_alloc+0x1a>$/;"	l
f0106f3b	obj/kern/kernel.asm	/^f0106f3b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	e9 c6 00 00 00       	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106f45	obj/kern/kernel.asm	/^f0106f45:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	83 e0 01             	and    $0x1,%eax$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	85 c0                	test   %eax,%eax$/;"	l
f0106f4d	obj/kern/kernel.asm	/^f0106f4d:	75 0a                	jne    f0106f59 <sys_page_alloc+0x2e>$/;"	l
f0106f4f	obj/kern/kernel.asm	/^f0106f4f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106f54	obj/kern/kernel.asm	/^f0106f54:	e9 b2 00 00 00       	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106f59	obj/kern/kernel.asm	/^f0106f59:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106f5c	obj/kern/kernel.asm	/^f0106f5c:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f0106f61	obj/kern/kernel.asm	/^f0106f61:	85 c0                	test   %eax,%eax$/;"	l
f0106f63	obj/kern/kernel.asm	/^f0106f63:	74 0a                	je     f0106f6f <sys_page_alloc+0x44>$/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106f6a	obj/kern/kernel.asm	/^f0106f6a:	e9 9c 00 00 00       	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106f6f	obj/kern/kernel.asm	/^f0106f6f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106f72	obj/kern/kernel.asm	/^f0106f72:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	77 0c                	ja     f0106f85 <sys_page_alloc+0x5a>$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	85 c0                	test   %eax,%eax$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	74 07                	je     f0106f8c <sys_page_alloc+0x61>$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106f8a	obj/kern/kernel.asm	/^f0106f8a:	eb 7f                	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106f8c	obj/kern/kernel.asm	/^f0106f8c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0106f93	obj/kern/kernel.asm	/^f0106f93:	00 $/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106fa1	obj/kern/kernel.asm	/^f0106fa1:	e8 54 d6 ff ff       	call   f01045fa <envid2env>$/;"	l
f0106fa6	obj/kern/kernel.asm	/^f0106fa6:	85 c0                	test   %eax,%eax$/;"	l
f0106fa8	obj/kern/kernel.asm	/^f0106fa8:	74 07                	je     f0106fb1 <sys_page_alloc+0x86>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0106faf	obj/kern/kernel.asm	/^f0106faf:	eb 5a                	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0106fb8	obj/kern/kernel.asm	/^f0106fb8:	e8 4e ab ff ff       	call   f0101b0b <page_alloc>$/;"	l
f0106fbd	obj/kern/kernel.asm	/^f0106fbd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106fc0	obj/kern/kernel.asm	/^f0106fc0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106fc4	obj/kern/kernel.asm	/^f0106fc4:	75 07                	jne    f0106fcd <sys_page_alloc+0xa2>$/;"	l
f0106fc6	obj/kern/kernel.asm	/^f0106fc6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0106fcb	obj/kern/kernel.asm	/^f0106fcb:	eb 3e                	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106fda	obj/kern/kernel.asm	/^f0106fda:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106fdd	obj/kern/kernel.asm	/^f0106fdd:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106fe1	obj/kern/kernel.asm	/^f0106fe1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0106fe4	obj/kern/kernel.asm	/^f0106fe4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	e8 b1 ad ff ff       	call   f0101da1 <page_insert>$/;"	l
f0106ff0	obj/kern/kernel.asm	/^f0106ff0:	85 c0                	test   %eax,%eax$/;"	l
f0106ff2	obj/kern/kernel.asm	/^f0106ff2:	74 12                	je     f0107006 <sys_page_alloc+0xdb>$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ffa	obj/kern/kernel.asm	/^f0106ffa:	e8 9f ab ff ff       	call   f0101b9e <page_free>$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0107004	obj/kern/kernel.asm	/^f0107004:	eb 05                	jmp    f010700b <sys_page_alloc+0xe0>$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	c9                   	leave  $/;"	l
f010700c	obj/kern/kernel.asm	/^f010700c:	c3                   	ret    $/;"	l
f010700d	obj/kern/kernel.asm	/^f010700d <sys_page_map>:$/;"	l
f010700d	obj/kern/kernel.asm	/^f010700d:	55                   	push   %ebp$/;"	l
f010700e	obj/kern/kernel.asm	/^f010700e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010701a	obj/kern/kernel.asm	/^f010701a:	00 $/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028:	e8 cd d5 ff ff       	call   f01045fa <envid2env>$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	85 c0                	test   %eax,%eax$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	75 1e                	jne    f010704f <sys_page_map+0x42>$/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	00 $/;"	l
f0107039	obj/kern/kernel.asm	/^f0107039:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107040	obj/kern/kernel.asm	/^f0107040:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107043	obj/kern/kernel.asm	/^f0107043:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	e8 af d5 ff ff       	call   f01045fa <envid2env>$/;"	l
f010704b	obj/kern/kernel.asm	/^f010704b:	85 c0                	test   %eax,%eax$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	74 0a                	je     f0107059 <sys_page_map+0x4c>$/;"	l
f010704f	obj/kern/kernel.asm	/^f010704f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0107054	obj/kern/kernel.asm	/^f0107054:	e9 ed 00 00 00       	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f0107059	obj/kern/kernel.asm	/^f0107059:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	77 22                	ja     f0107085 <sys_page_map+0x78>$/;"	l
f0107063	obj/kern/kernel.asm	/^f0107063:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	85 c0                	test   %eax,%eax$/;"	l
f010706d	obj/kern/kernel.asm	/^f010706d:	75 16                	jne    f0107085 <sys_page_map+0x78>$/;"	l
f010706f	obj/kern/kernel.asm	/^f010706f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107072	obj/kern/kernel.asm	/^f0107072:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0107077	obj/kern/kernel.asm	/^f0107077:	77 0c                	ja     f0107085 <sys_page_map+0x78>$/;"	l
f0107079	obj/kern/kernel.asm	/^f0107079:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010707c	obj/kern/kernel.asm	/^f010707c:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0107081	obj/kern/kernel.asm	/^f0107081:	85 c0                	test   %eax,%eax$/;"	l
f0107083	obj/kern/kernel.asm	/^f0107083:	74 0a                	je     f010708f <sys_page_map+0x82>$/;"	l
f0107085	obj/kern/kernel.asm	/^f0107085:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	e9 b7 00 00 00       	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f010708f	obj/kern/kernel.asm	/^f010708f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	83 e0 04             	and    $0x4,%eax$/;"	l
f0107095	obj/kern/kernel.asm	/^f0107095:	85 c0                	test   %eax,%eax$/;"	l
f0107097	obj/kern/kernel.asm	/^f0107097:	75 0a                	jne    f01070a3 <sys_page_map+0x96>$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	e9 a3 00 00 00       	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01070a6	obj/kern/kernel.asm	/^f01070a6:	83 e0 01             	and    $0x1,%eax$/;"	l
f01070a9	obj/kern/kernel.asm	/^f01070a9:	85 c0                	test   %eax,%eax$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	75 0a                	jne    f01070b7 <sys_page_map+0xaa>$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	e9 8f 00 00 00       	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01070ba	obj/kern/kernel.asm	/^f01070ba:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	85 c0                	test   %eax,%eax$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	74 07                	je     f01070ca <sys_page_map+0xbd>$/;"	l
f01070c3	obj/kern/kernel.asm	/^f01070c3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01070c8	obj/kern/kernel.asm	/^f01070c8:	eb 7c                	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f01070ca	obj/kern/kernel.asm	/^f01070ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01070d7	obj/kern/kernel.asm	/^f01070d7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01070da	obj/kern/kernel.asm	/^f01070da:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01070de	obj/kern/kernel.asm	/^f01070de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01070e1	obj/kern/kernel.asm	/^f01070e1:	e8 68 ad ff ff       	call   f0101e4e <page_lookup>$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01070ed	obj/kern/kernel.asm	/^f01070ed:	75 07                	jne    f01070f6 <sys_page_map+0xe9>$/;"	l
f01070ef	obj/kern/kernel.asm	/^f01070ef:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01070f4	obj/kern/kernel.asm	/^f01070f4:	eb 50                	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f01070f6	obj/kern/kernel.asm	/^f01070f6:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01070f9	obj/kern/kernel.asm	/^f01070f9:	83 e0 02             	and    $0x2,%eax$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	85 c0                	test   %eax,%eax$/;"	l
f01070fe	obj/kern/kernel.asm	/^f01070fe:	74 13                	je     f0107113 <sys_page_map+0x106>$/;"	l
f0107100	obj/kern/kernel.asm	/^f0107100:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107103	obj/kern/kernel.asm	/^f0107103:	8b 00                	mov    (%eax),%eax$/;"	l
f0107105	obj/kern/kernel.asm	/^f0107105:	83 e0 02             	and    $0x2,%eax$/;"	l
f0107108	obj/kern/kernel.asm	/^f0107108:	85 c0                	test   %eax,%eax$/;"	l
f010710a	obj/kern/kernel.asm	/^f010710a:	75 07                	jne    f0107113 <sys_page_map+0x106>$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	eb 33                	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f0107113	obj/kern/kernel.asm	/^f0107113:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107116	obj/kern/kernel.asm	/^f0107116:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0107119	obj/kern/kernel.asm	/^f0107119:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010711c	obj/kern/kernel.asm	/^f010711c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010712a	obj/kern/kernel.asm	/^f010712a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010712e	obj/kern/kernel.asm	/^f010712e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107131	obj/kern/kernel.asm	/^f0107131:	e8 6b ac ff ff       	call   f0101da1 <page_insert>$/;"	l
f0107136	obj/kern/kernel.asm	/^f0107136:	85 c0                	test   %eax,%eax$/;"	l
f0107138	obj/kern/kernel.asm	/^f0107138:	74 07                	je     f0107141 <sys_page_map+0x134>$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010713f	obj/kern/kernel.asm	/^f010713f:	eb 05                	jmp    f0107146 <sys_page_map+0x139>$/;"	l
f0107141	obj/kern/kernel.asm	/^f0107141:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	c9                   	leave  $/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147:	c3                   	ret    $/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148 <sys_page_unmap>:$/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148:	55                   	push   %ebp$/;"	l
f0107149	obj/kern/kernel.asm	/^f0107149:	89 e5                	mov    %esp,%ebp$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	00 $/;"	l
f0107156	obj/kern/kernel.asm	/^f0107156:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0107159	obj/kern/kernel.asm	/^f0107159:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010715d	obj/kern/kernel.asm	/^f010715d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107160	obj/kern/kernel.asm	/^f0107160:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107163	obj/kern/kernel.asm	/^f0107163:	e8 92 d4 ff ff       	call   f01045fa <envid2env>$/;"	l
f0107168	obj/kern/kernel.asm	/^f0107168:	85 c0                	test   %eax,%eax$/;"	l
f010716a	obj/kern/kernel.asm	/^f010716a:	74 07                	je     f0107173 <sys_page_unmap+0x2b>$/;"	l
f010716c	obj/kern/kernel.asm	/^f010716c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0107171	obj/kern/kernel.asm	/^f0107171:	eb 37                	jmp    f01071aa <sys_page_unmap+0x62>$/;"	l
f0107173	obj/kern/kernel.asm	/^f0107173:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107176	obj/kern/kernel.asm	/^f0107176:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f010717b	obj/kern/kernel.asm	/^f010717b:	77 0c                	ja     f0107189 <sys_page_unmap+0x41>$/;"	l
f010717d	obj/kern/kernel.asm	/^f010717d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107180	obj/kern/kernel.asm	/^f0107180:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0107185	obj/kern/kernel.asm	/^f0107185:	85 c0                	test   %eax,%eax$/;"	l
f0107187	obj/kern/kernel.asm	/^f0107187:	74 07                	je     f0107190 <sys_page_unmap+0x48>$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010718e	obj/kern/kernel.asm	/^f010718e:	eb 1a                	jmp    f01071aa <sys_page_unmap+0x62>$/;"	l
f0107190	obj/kern/kernel.asm	/^f0107190:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107193	obj/kern/kernel.asm	/^f0107193:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01071a0	obj/kern/kernel.asm	/^f01071a0:	e8 14 ad ff ff       	call   f0101eb9 <page_remove>$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01071aa	obj/kern/kernel.asm	/^f01071aa:	c9                   	leave  $/;"	l
f01071ab	obj/kern/kernel.asm	/^f01071ab:	c3                   	ret    $/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac <sys_ipc_try_send>:$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	55                   	push   %ebp$/;"	l
f01071ad	obj/kern/kernel.asm	/^f01071ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01071af	obj/kern/kernel.asm	/^f01071af:	53                   	push   %ebx$/;"	l
f01071b0	obj/kern/kernel.asm	/^f01071b0:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)$/;"	l
f01071b7	obj/kern/kernel.asm	/^f01071b7:	c6 45 f6 00          	movb   $0x0,-0xa(%ebp)$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01071c2	obj/kern/kernel.asm	/^f01071c2:	00 $/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01071c6	obj/kern/kernel.asm	/^f01071c6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01071ca	obj/kern/kernel.asm	/^f01071ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01071d0	obj/kern/kernel.asm	/^f01071d0:	e8 25 d4 ff ff       	call   f01045fa <envid2env>$/;"	l
f01071d5	obj/kern/kernel.asm	/^f01071d5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01071d8	obj/kern/kernel.asm	/^f01071d8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01071dc	obj/kern/kernel.asm	/^f01071dc:	74 0a                	je     f01071e8 <sys_ipc_try_send+0x3c>$/;"	l
f01071de	obj/kern/kernel.asm	/^f01071de:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	e9 7e 01 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f01071e8	obj/kern/kernel.asm	/^f01071e8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01071eb	obj/kern/kernel.asm	/^f01071eb:	0f b6 40 68          	movzbl 0x68(%eax),%eax$/;"	l
f01071ef	obj/kern/kernel.asm	/^f01071ef:	83 f0 01             	xor    $0x1,%eax$/;"	l
f01071f2	obj/kern/kernel.asm	/^f01071f2:	84 c0                	test   %al,%al$/;"	l
f01071f4	obj/kern/kernel.asm	/^f01071f4:	74 0a                	je     f0107200 <sys_ipc_try_send+0x54>$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	e9 66 01 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f0107200	obj/kern/kernel.asm	/^f0107200:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107203	obj/kern/kernel.asm	/^f0107203:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
f0107206	obj/kern/kernel.asm	/^f0107206:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f010720b	obj/kern/kernel.asm	/^f010720b:	77 04                	ja     f0107211 <sys_ipc_try_send+0x65>$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	c6 45 f6 01          	movb   $0x1,-0xa(%ebp)$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	0f 87 b3 00 00 00    	ja     f01072d2 <sys_ipc_try_send+0x126>$/;"	l
f010721f	obj/kern/kernel.asm	/^f010721f:	c6 45 f7 01          	movb   $0x1,-0x9(%ebp)$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f010722b	obj/kern/kernel.asm	/^f010722b:	85 c0                	test   %eax,%eax$/;"	l
f010722d	obj/kern/kernel.asm	/^f010722d:	74 0a                	je     f0107239 <sys_ipc_try_send+0x8d>$/;"	l
f010722f	obj/kern/kernel.asm	/^f010722f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0107234	obj/kern/kernel.asm	/^f0107234:	e9 2d 01 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010723c	obj/kern/kernel.asm	/^f010723c:	83 e0 04             	and    $0x4,%eax$/;"	l
f010723f	obj/kern/kernel.asm	/^f010723f:	85 c0                	test   %eax,%eax$/;"	l
f0107241	obj/kern/kernel.asm	/^f0107241:	75 0a                	jne    f010724d <sys_ipc_try_send+0xa1>$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0107248	obj/kern/kernel.asm	/^f0107248:	e9 19 01 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f010724d	obj/kern/kernel.asm	/^f010724d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250:	83 e0 01             	and    $0x1,%eax$/;"	l
f0107253	obj/kern/kernel.asm	/^f0107253:	85 c0                	test   %eax,%eax$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	75 0a                	jne    f0107261 <sys_ipc_try_send+0xb5>$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	e9 05 01 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	85 c0                	test   %eax,%eax$/;"	l
f010726b	obj/kern/kernel.asm	/^f010726b:	74 0a                	je     f0107277 <sys_ipc_try_send+0xcb>$/;"	l
f010726d	obj/kern/kernel.asm	/^f010726d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0107272	obj/kern/kernel.asm	/^f0107272:	e9 ef 00 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f0107277	obj/kern/kernel.asm	/^f0107277:	e8 06 1e 00 00       	call   f0109082 <cpunum>$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010727f	obj/kern/kernel.asm	/^f010727f:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0107284	obj/kern/kernel.asm	/^f0107284:	8b 00                	mov    (%eax),%eax$/;"	l
f0107286	obj/kern/kernel.asm	/^f0107286:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107293	obj/kern/kernel.asm	/^f0107293:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107297	obj/kern/kernel.asm	/^f0107297:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010729a	obj/kern/kernel.asm	/^f010729a:	e8 af ab ff ff       	call   f0101e4e <page_lookup>$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01072a2	obj/kern/kernel.asm	/^f01072a2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01072a6	obj/kern/kernel.asm	/^f01072a6:	75 0a                	jne    f01072b2 <sys_ipc_try_send+0x106>$/;"	l
f01072a8	obj/kern/kernel.asm	/^f01072a8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01072ad	obj/kern/kernel.asm	/^f01072ad:	e9 b4 00 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f01072b2	obj/kern/kernel.asm	/^f01072b2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01072b5	obj/kern/kernel.asm	/^f01072b5:	83 e0 02             	and    $0x2,%eax$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	85 c0                	test   %eax,%eax$/;"	l
f01072ba	obj/kern/kernel.asm	/^f01072ba:	74 16                	je     f01072d2 <sys_ipc_try_send+0x126>$/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	8b 00                	mov    (%eax),%eax$/;"	l
f01072c1	obj/kern/kernel.asm	/^f01072c1:	83 e0 02             	and    $0x2,%eax$/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	85 c0                	test   %eax,%eax$/;"	l
f01072c6	obj/kern/kernel.asm	/^f01072c6:	75 0a                	jne    f01072d2 <sys_ipc_try_send+0x126>$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01072cd	obj/kern/kernel.asm	/^f01072cd:	e9 94 00 00 00       	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f01072d2	obj/kern/kernel.asm	/^f01072d2:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
f01072d6	obj/kern/kernel.asm	/^f01072d6:	74 4d                	je     f0107325 <sys_ipc_try_send+0x179>$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	80 7d f6 00          	cmpb   $0x0,-0xa(%ebp)$/;"	l
f01072dc	obj/kern/kernel.asm	/^f01072dc:	74 47                	je     f0107325 <sys_ipc_try_send+0x179>$/;"	l
f01072de	obj/kern/kernel.asm	/^f01072de:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	8b 50 6c             	mov    0x6c(%eax),%edx$/;"	l
f01072e7	obj/kern/kernel.asm	/^f01072e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01072ea	obj/kern/kernel.asm	/^f01072ea:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01072ed	obj/kern/kernel.asm	/^f01072ed:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01072f1	obj/kern/kernel.asm	/^f01072f1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01072f8	obj/kern/kernel.asm	/^f01072f8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01072fc	obj/kern/kernel.asm	/^f01072fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072ff	obj/kern/kernel.asm	/^f01072ff:	e8 9d aa ff ff       	call   f0101da1 <page_insert>$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	85 c0                	test   %eax,%eax$/;"	l
f0107306	obj/kern/kernel.asm	/^f0107306:	0f 95 c0             	setne  %al$/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010730f	obj/kern/kernel.asm	/^f010730f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0107313	obj/kern/kernel.asm	/^f0107313:	74 05                	je     f010731a <sys_ipc_try_send+0x16e>$/;"	l
f0107315	obj/kern/kernel.asm	/^f0107315:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	eb 4c                	jmp    f0107366 <sys_ipc_try_send+0x1ba>$/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
f0107323	obj/kern/kernel.asm	/^f0107323:	eb 0a                	jmp    f010732f <sys_ipc_try_send+0x183>$/;"	l
f0107325	obj/kern/kernel.asm	/^f0107325:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f010732f	obj/kern/kernel.asm	/^f010732f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107332	obj/kern/kernel.asm	/^f0107332:	c6 40 68 00          	movb   $0x0,0x68(%eax)$/;"	l
f0107336	obj/kern/kernel.asm	/^f0107336:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0107342	obj/kern/kernel.asm	/^f0107342:	e8 3b 1d 00 00       	call   f0109082 <cpunum>$/;"	l
f0107347	obj/kern/kernel.asm	/^f0107347:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010734a	obj/kern/kernel.asm	/^f010734a:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010734f	obj/kern/kernel.asm	/^f010734f:	8b 00                	mov    (%eax),%eax$/;"	l
f0107351	obj/kern/kernel.asm	/^f0107351:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0107354	obj/kern/kernel.asm	/^f0107354:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f0107357	obj/kern/kernel.asm	/^f0107357:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0107361	obj/kern/kernel.asm	/^f0107361:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107366	obj/kern/kernel.asm	/^f0107366:	83 c4 34             	add    $0x34,%esp$/;"	l
f0107369	obj/kern/kernel.asm	/^f0107369:	5b                   	pop    %ebx$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	5d                   	pop    %ebp$/;"	l
f010736b	obj/kern/kernel.asm	/^f010736b:	c3                   	ret    $/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c <sys_ipc_recv>:$/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c:	55                   	push   %ebp$/;"	l
f010736d	obj/kern/kernel.asm	/^f010736d:	89 e5                	mov    %esp,%ebp$/;"	l
f010736f	obj/kern/kernel.asm	/^f010736f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107372	obj/kern/kernel.asm	/^f0107372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f010737a	obj/kern/kernel.asm	/^f010737a:	77 2a                	ja     f01073a6 <sys_ipc_recv+0x3a>$/;"	l
f010737c	obj/kern/kernel.asm	/^f010737c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010737f	obj/kern/kernel.asm	/^f010737f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0107384	obj/kern/kernel.asm	/^f0107384:	85 c0                	test   %eax,%eax$/;"	l
f0107386	obj/kern/kernel.asm	/^f0107386:	74 07                	je     f010738f <sys_ipc_recv+0x23>$/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010738d	obj/kern/kernel.asm	/^f010738d:	eb 76                	jmp    f0107405 <sys_ipc_recv+0x99>$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	e8 ee 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107397	obj/kern/kernel.asm	/^f0107397:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010739c	obj/kern/kernel.asm	/^f010739c:	8b 00                	mov    (%eax),%eax$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
f01073a4	obj/kern/kernel.asm	/^f01073a4:	eb 16                	jmp    f01073bc <sys_ipc_recv+0x50>$/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	e8 d7 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f01073ab	obj/kern/kernel.asm	/^f01073ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01073ae	obj/kern/kernel.asm	/^f01073ae:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	8b 00                	mov    (%eax),%eax$/;"	l
f01073b5	obj/kern/kernel.asm	/^f01073b5:	c7 40 6c 00 00 00 f0 	movl   $0xf0000000,0x6c(%eax)$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	e8 c1 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f01073c1	obj/kern/kernel.asm	/^f01073c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01073c4	obj/kern/kernel.asm	/^f01073c4:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	8b 00                	mov    (%eax),%eax$/;"	l
f01073cb	obj/kern/kernel.asm	/^f01073cb:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01073cf	obj/kern/kernel.asm	/^f01073cf:	e8 ae 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01073d7	obj/kern/kernel.asm	/^f01073d7:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01073dc	obj/kern/kernel.asm	/^f01073dc:	8b 00                	mov    (%eax),%eax$/;"	l
f01073de	obj/kern/kernel.asm	/^f01073de:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01073e5	obj/kern/kernel.asm	/^f01073e5:	e8 98 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f01073ea	obj/kern/kernel.asm	/^f01073ea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01073ed	obj/kern/kernel.asm	/^f01073ed:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01073f2	obj/kern/kernel.asm	/^f01073f2:	8b 00                	mov    (%eax),%eax$/;"	l
f01073f4	obj/kern/kernel.asm	/^f01073f4:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	e8 8a f9 ff ff       	call   f0106d8a <sys_yield>$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	c9                   	leave  $/;"	l
f0107406	obj/kern/kernel.asm	/^f0107406:	c3                   	ret    $/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407 <sys_time_msec>:$/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407:	55                   	push   %ebp$/;"	l
f0107408	obj/kern/kernel.asm	/^f0107408:	89 e5                	mov    %esp,%ebp$/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	e8 70 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f0107412	obj/kern/kernel.asm	/^f0107412:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107415	obj/kern/kernel.asm	/^f0107415:	e8 e7 30 00 00       	call   f010a501 <time_msec>$/;"	l
f010741a	obj/kern/kernel.asm	/^f010741a:	c9                   	leave  $/;"	l
f010741b	obj/kern/kernel.asm	/^f010741b:	c3                   	ret    $/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c <sys_e1000_transmit>:$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	55                   	push   %ebp$/;"	l
f010741d	obj/kern/kernel.asm	/^f010741d:	89 e5                	mov    %esp,%ebp$/;"	l
f010741f	obj/kern/kernel.asm	/^f010741f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0107422	obj/kern/kernel.asm	/^f0107422:	e8 5b 1c 00 00       	call   f0109082 <cpunum>$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f010742f	obj/kern/kernel.asm	/^f010742f:	8b 00                	mov    (%eax),%eax$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0107438	obj/kern/kernel.asm	/^f0107438:	00 $/;"	l
f0107439	obj/kern/kernel.asm	/^f0107439:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010743c	obj/kern/kernel.asm	/^f010743c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107440	obj/kern/kernel.asm	/^f0107440:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107443	obj/kern/kernel.asm	/^f0107443:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107447	obj/kern/kernel.asm	/^f0107447:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010744a	obj/kern/kernel.asm	/^f010744a:	e8 4e ac ff ff       	call   f010209d <user_mem_assert>$/;"	l
f010744f	obj/kern/kernel.asm	/^f010744f:	c7 45 f4 14 00 00 00 	movl   $0x14,-0xc(%ebp)$/;"	l
f0107456	obj/kern/kernel.asm	/^f0107456:	eb 09                	jmp    f0107461 <sys_e1000_transmit+0x45>$/;"	l
f0107458	obj/kern/kernel.asm	/^f0107458:	e8 2d f9 ff ff       	call   f0106d8a <sys_yield>$/;"	l
f010745d	obj/kern/kernel.asm	/^f010745d:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107468	obj/kern/kernel.asm	/^f0107468:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010746b	obj/kern/kernel.asm	/^f010746b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010746e	obj/kern/kernel.asm	/^f010746e:	e8 cf 24 00 00       	call   f0109942 <e1000_transmit>$/;"	l
f0107473	obj/kern/kernel.asm	/^f0107473:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0107476	obj/kern/kernel.asm	/^f0107476:	75 06                	jne    f010747e <sys_e1000_transmit+0x62>$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010747c	obj/kern/kernel.asm	/^f010747c:	7f da                	jg     f0107458 <sys_e1000_transmit+0x3c>$/;"	l
f010747e	obj/kern/kernel.asm	/^f010747e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0107482	obj/kern/kernel.asm	/^f0107482:	75 07                	jne    f010748b <sys_e1000_transmit+0x6f>$/;"	l
f0107484	obj/kern/kernel.asm	/^f0107484:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f0107489	obj/kern/kernel.asm	/^f0107489:	eb 05                	jmp    f0107490 <sys_e1000_transmit+0x74>$/;"	l
f010748b	obj/kern/kernel.asm	/^f010748b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107490	obj/kern/kernel.asm	/^f0107490:	c9                   	leave  $/;"	l
f0107491	obj/kern/kernel.asm	/^f0107491:	c3                   	ret    $/;"	l
f0107492	obj/kern/kernel.asm	/^f0107492 <sys_e1000_receive>:$/;"	l
f0107492	obj/kern/kernel.asm	/^f0107492:	55                   	push   %ebp$/;"	l
f0107493	obj/kern/kernel.asm	/^f0107493:	89 e5                	mov    %esp,%ebp$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107498	obj/kern/kernel.asm	/^f0107498:	e8 e5 1b 00 00       	call   f0109082 <cpunum>$/;"	l
f010749d	obj/kern/kernel.asm	/^f010749d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01074a0	obj/kern/kernel.asm	/^f01074a0:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01074a5	obj/kern/kernel.asm	/^f01074a5:	8b 00                	mov    (%eax),%eax$/;"	l
f01074a7	obj/kern/kernel.asm	/^f01074a7:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01074ae	obj/kern/kernel.asm	/^f01074ae:	00 $/;"	l
f01074af	obj/kern/kernel.asm	/^f01074af:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)$/;"	l
f01074b6	obj/kern/kernel.asm	/^f01074b6:	00 $/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01074ba	obj/kern/kernel.asm	/^f01074ba:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01074be	obj/kern/kernel.asm	/^f01074be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01074c1	obj/kern/kernel.asm	/^f01074c1:	e8 d7 ab ff ff       	call   f010209d <user_mem_assert>$/;"	l
f01074c6	obj/kern/kernel.asm	/^f01074c6:	eb 05                	jmp    f01074cd <sys_e1000_receive+0x3b>$/;"	l
f01074c8	obj/kern/kernel.asm	/^f01074c8:	e8 bd f8 ff ff       	call   f0106d8a <sys_yield>$/;"	l
f01074cd	obj/kern/kernel.asm	/^f01074cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01074d4	obj/kern/kernel.asm	/^f01074d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074d7	obj/kern/kernel.asm	/^f01074d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01074da	obj/kern/kernel.asm	/^f01074da:	e8 5b 25 00 00       	call   f0109a3a <e1000_receive>$/;"	l
f01074df	obj/kern/kernel.asm	/^f01074df:	85 c0                	test   %eax,%eax$/;"	l
f01074e1	obj/kern/kernel.asm	/^f01074e1:	75 e5                	jne    f01074c8 <sys_e1000_receive+0x36>$/;"	l
f01074e3	obj/kern/kernel.asm	/^f01074e3:	c7 04 24 02 c1 10 f0 	movl   $0xf010c102,(%esp)$/;"	l
f01074ea	obj/kern/kernel.asm	/^f01074ea:	e8 50 de ff ff       	call   f010533f <cprintf>$/;"	l
f01074ef	obj/kern/kernel.asm	/^f01074ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01074f4	obj/kern/kernel.asm	/^f01074f4:	c9                   	leave  $/;"	l
f01074f5	obj/kern/kernel.asm	/^f01074f5:	c3                   	ret    $/;"	l
f01074f6	obj/kern/kernel.asm	/^f01074f6 <syscall>:$/;"	l
f01074f6	obj/kern/kernel.asm	/^f01074f6:	55                   	push   %ebp$/;"	l
f01074f7	obj/kern/kernel.asm	/^f01074f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	56                   	push   %esi$/;"	l
f01074fa	obj/kern/kernel.asm	/^f01074fa:	53                   	push   %ebx$/;"	l
f01074fb	obj/kern/kernel.asm	/^f01074fb:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01074fe	obj/kern/kernel.asm	/^f01074fe:	83 7d 08 10          	cmpl   $0x10,0x8(%ebp)$/;"	l
f0107502	obj/kern/kernel.asm	/^f0107502:	0f 87 6d 01 00 00    	ja     f0107675 <syscall+0x17f>$/;"	l
f0107508	obj/kern/kernel.asm	/^f0107508:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010750b	obj/kern/kernel.asm	/^f010750b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	05 1c c1 10 f0       	add    $0xf010c11c,%eax$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	8b 00                	mov    (%eax),%eax$/;"	l
f0107515	obj/kern/kernel.asm	/^f0107515:	ff e0                	jmp    *%eax$/;"	l
f0107517	obj/kern/kernel.asm	/^f0107517:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010751d	obj/kern/kernel.asm	/^f010751d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107521	obj/kern/kernel.asm	/^f0107521:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107524	obj/kern/kernel.asm	/^f0107524:	e8 9f f7 ff ff       	call   f0106cc8 <sys_cputs>$/;"	l
f0107529	obj/kern/kernel.asm	/^f0107529:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010752e	obj/kern/kernel.asm	/^f010752e:	e9 47 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f0107533	obj/kern/kernel.asm	/^f0107533:	e8 df f7 ff ff       	call   f0106d17 <sys_cgetc>$/;"	l
f0107538	obj/kern/kernel.asm	/^f0107538:	e9 3d 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f010753d	obj/kern/kernel.asm	/^f010753d:	e8 e2 f7 ff ff       	call   f0106d24 <sys_getenvid>$/;"	l
f0107542	obj/kern/kernel.asm	/^f0107542:	e9 33 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f0107547	obj/kern/kernel.asm	/^f0107547:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010754a	obj/kern/kernel.asm	/^f010754a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010754d	obj/kern/kernel.asm	/^f010754d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107551	obj/kern/kernel.asm	/^f0107551:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	e8 e5 f7 ff ff       	call   f0106d3e <sys_env_destroy>$/;"	l
f0107559	obj/kern/kernel.asm	/^f0107559:	e9 1c 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f010755e	obj/kern/kernel.asm	/^f010755e:	e8 27 f8 ff ff       	call   f0106d8a <sys_yield>$/;"	l
f0107563	obj/kern/kernel.asm	/^f0107563:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107568	obj/kern/kernel.asm	/^f0107568:	e9 0d 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f010756d	obj/kern/kernel.asm	/^f010756d:	e8 23 f8 ff ff       	call   f0106d95 <sys_exofork>$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	e9 03 01 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010757a	obj/kern/kernel.asm	/^f010757a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010757d	obj/kern/kernel.asm	/^f010757d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107581	obj/kern/kernel.asm	/^f0107581:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107584	obj/kern/kernel.asm	/^f0107584:	e8 98 f8 ff ff       	call   f0106e21 <sys_env_set_status>$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	e9 ec 00 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f010758e	obj/kern/kernel.asm	/^f010758e:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0107591	obj/kern/kernel.asm	/^f0107591:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107594	obj/kern/kernel.asm	/^f0107594:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010759b	obj/kern/kernel.asm	/^f010759b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01075a2	obj/kern/kernel.asm	/^f01075a2:	e8 84 f9 ff ff       	call   f0106f2b <sys_page_alloc>$/;"	l
f01075a7	obj/kern/kernel.asm	/^f01075a7:	e9 ce 00 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f01075ac	obj/kern/kernel.asm	/^f01075ac:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f01075af	obj/kern/kernel.asm	/^f01075af:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f01075b2	obj/kern/kernel.asm	/^f01075b2:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01075b5	obj/kern/kernel.asm	/^f01075b5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01075b8	obj/kern/kernel.asm	/^f01075b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01075bf	obj/kern/kernel.asm	/^f01075bf:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01075cb	obj/kern/kernel.asm	/^f01075cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01075ce	obj/kern/kernel.asm	/^f01075ce:	e8 3a fa ff ff       	call   f010700d <sys_page_map>$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	e9 a2 00 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f01075d8	obj/kern/kernel.asm	/^f01075d8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01075e2	obj/kern/kernel.asm	/^f01075e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01075e5	obj/kern/kernel.asm	/^f01075e5:	e8 5e fb ff ff       	call   f0107148 <sys_page_unmap>$/;"	l
f01075ea	obj/kern/kernel.asm	/^f01075ea:	e9 8b 00 00 00       	jmp    f010767a <syscall+0x184>$/;"	l
f01075ef	obj/kern/kernel.asm	/^f01075ef:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01075f2	obj/kern/kernel.asm	/^f01075f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01075f5	obj/kern/kernel.asm	/^f01075f5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01075f9	obj/kern/kernel.asm	/^f01075f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01075fc	obj/kern/kernel.asm	/^f01075fc:	e8 ef f8 ff ff       	call   f0106ef0 <sys_env_set_pgfault_upcall>$/;"	l
f0107601	obj/kern/kernel.asm	/^f0107601:	eb 77                	jmp    f010767a <syscall+0x184>$/;"	l
f0107603	obj/kern/kernel.asm	/^f0107603:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0107606	obj/kern/kernel.asm	/^f0107606:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107609	obj/kern/kernel.asm	/^f0107609:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0107610	obj/kern/kernel.asm	/^f0107610:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107614	obj/kern/kernel.asm	/^f0107614:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107617	obj/kern/kernel.asm	/^f0107617:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010761b	obj/kern/kernel.asm	/^f010761b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010761e	obj/kern/kernel.asm	/^f010761e:	e8 89 fb ff ff       	call   f01071ac <sys_ipc_try_send>$/;"	l
f0107623	obj/kern/kernel.asm	/^f0107623:	eb 55                	jmp    f010767a <syscall+0x184>$/;"	l
f0107625	obj/kern/kernel.asm	/^f0107625:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107628	obj/kern/kernel.asm	/^f0107628:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010762b	obj/kern/kernel.asm	/^f010762b:	e8 3c fd ff ff       	call   f010736c <sys_ipc_recv>$/;"	l
f0107630	obj/kern/kernel.asm	/^f0107630:	eb 48                	jmp    f010767a <syscall+0x184>$/;"	l
f0107632	obj/kern/kernel.asm	/^f0107632:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107638	obj/kern/kernel.asm	/^f0107638:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010763c	obj/kern/kernel.asm	/^f010763c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010763f	obj/kern/kernel.asm	/^f010763f:	e8 2b f8 ff ff       	call   f0106e6f <sys_env_set_trapframe>$/;"	l
f0107644	obj/kern/kernel.asm	/^f0107644:	eb 34                	jmp    f010767a <syscall+0x184>$/;"	l
f0107646	obj/kern/kernel.asm	/^f0107646:	e8 bc fd ff ff       	call   f0107407 <sys_time_msec>$/;"	l
f010764b	obj/kern/kernel.asm	/^f010764b:	eb 2d                	jmp    f010767a <syscall+0x184>$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107653	obj/kern/kernel.asm	/^f0107653:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107657	obj/kern/kernel.asm	/^f0107657:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	e8 bd fd ff ff       	call   f010741c <sys_e1000_transmit>$/;"	l
f010765f	obj/kern/kernel.asm	/^f010765f:	eb 19                	jmp    f010767a <syscall+0x184>$/;"	l
f0107661	obj/kern/kernel.asm	/^f0107661:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0107664	obj/kern/kernel.asm	/^f0107664:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010766b	obj/kern/kernel.asm	/^f010766b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010766e	obj/kern/kernel.asm	/^f010766e:	e8 1f fe ff ff       	call   f0107492 <sys_e1000_receive>$/;"	l
f0107673	obj/kern/kernel.asm	/^f0107673:	eb 05                	jmp    f010767a <syscall+0x184>$/;"	l
f0107675	obj/kern/kernel.asm	/^f0107675:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010767a	obj/kern/kernel.asm	/^f010767a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010767d	obj/kern/kernel.asm	/^f010767d:	5b                   	pop    %ebx$/;"	l
f010767e	obj/kern/kernel.asm	/^f010767e:	5e                   	pop    %esi$/;"	l
f010767f	obj/kern/kernel.asm	/^f010767f:	5d                   	pop    %ebp$/;"	l
f0107680	obj/kern/kernel.asm	/^f0107680:	c3                   	ret    $/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681 <stab_binsearch>:$/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681:	55                   	push   %ebp$/;"	l
f0107682	obj/kern/kernel.asm	/^f0107682:	89 e5                	mov    %esp,%ebp$/;"	l
f0107684	obj/kern/kernel.asm	/^f0107684:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0107687	obj/kern/kernel.asm	/^f0107687:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010768a	obj/kern/kernel.asm	/^f010768a:	8b 00                	mov    (%eax),%eax$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	8b 00                	mov    (%eax),%eax$/;"	l
f0107694	obj/kern/kernel.asm	/^f0107694:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0107697	obj/kern/kernel.asm	/^f0107697:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010769e	obj/kern/kernel.asm	/^f010769e:	e9 d2 00 00 00       	jmp    f0107775 <stab_binsearch+0xf4>$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01076a6	obj/kern/kernel.asm	/^f01076a6:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01076a9	obj/kern/kernel.asm	/^f01076a9:	01 d0                	add    %edx,%eax$/;"	l
f01076ab	obj/kern/kernel.asm	/^f01076ab:	89 c2                	mov    %eax,%edx$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	01 d0                	add    %edx,%eax$/;"	l
f01076b2	obj/kern/kernel.asm	/^f01076b2:	d1 f8                	sar    %eax$/;"	d
f01076b4	obj/kern/kernel.asm	/^f01076b4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01076b7	obj/kern/kernel.asm	/^f01076b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01076ba	obj/kern/kernel.asm	/^f01076ba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01076bd	obj/kern/kernel.asm	/^f01076bd:	eb 04                	jmp    f01076c3 <stab_binsearch+0x42>$/;"	l
f01076bf	obj/kern/kernel.asm	/^f01076bf:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f01076c3	obj/kern/kernel.asm	/^f01076c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01076c6	obj/kern/kernel.asm	/^f01076c6:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f01076c9	obj/kern/kernel.asm	/^f01076c9:	7c 1f                	jl     f01076ea <stab_binsearch+0x69>$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01076ce	obj/kern/kernel.asm	/^f01076ce:	89 d0                	mov    %edx,%eax$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	01 c0                	add    %eax,%eax$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	01 d0                	add    %edx,%eax$/;"	l
f01076d4	obj/kern/kernel.asm	/^f01076d4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01076d7	obj/kern/kernel.asm	/^f01076d7:	89 c2                	mov    %eax,%edx$/;"	l
f01076d9	obj/kern/kernel.asm	/^f01076d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01076dc	obj/kern/kernel.asm	/^f01076dc:	01 d0                	add    %edx,%eax$/;"	l
f01076de	obj/kern/kernel.asm	/^f01076de:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01076e5	obj/kern/kernel.asm	/^f01076e5:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f01076e8	obj/kern/kernel.asm	/^f01076e8:	75 d5                	jne    f01076bf <stab_binsearch+0x3e>$/;"	l
f01076ea	obj/kern/kernel.asm	/^f01076ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01076ed	obj/kern/kernel.asm	/^f01076ed:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f01076f0	obj/kern/kernel.asm	/^f01076f0:	7d 0b                	jge    f01076fd <stab_binsearch+0x7c>$/;"	l
f01076f2	obj/kern/kernel.asm	/^f01076f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01076f5	obj/kern/kernel.asm	/^f01076f5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01076f8	obj/kern/kernel.asm	/^f01076f8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01076fb	obj/kern/kernel.asm	/^f01076fb:	eb 78                	jmp    f0107775 <stab_binsearch+0xf4>$/;"	l
f01076fd	obj/kern/kernel.asm	/^f01076fd:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
f0107704	obj/kern/kernel.asm	/^f0107704:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	89 d0                	mov    %edx,%eax$/;"	l
f0107709	obj/kern/kernel.asm	/^f0107709:	01 c0                	add    %eax,%eax$/;"	l
f010770b	obj/kern/kernel.asm	/^f010770b:	01 d0                	add    %edx,%eax$/;"	l
f010770d	obj/kern/kernel.asm	/^f010770d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107710	obj/kern/kernel.asm	/^f0107710:	89 c2                	mov    %eax,%edx$/;"	l
f0107712	obj/kern/kernel.asm	/^f0107712:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107715	obj/kern/kernel.asm	/^f0107715:	01 d0                	add    %edx,%eax$/;"	l
f0107717	obj/kern/kernel.asm	/^f0107717:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f010771a	obj/kern/kernel.asm	/^f010771a:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
f010771d	obj/kern/kernel.asm	/^f010771d:	73 13                	jae    f0107732 <stab_binsearch+0xb1>$/;"	l
f010771f	obj/kern/kernel.asm	/^f010771f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107722	obj/kern/kernel.asm	/^f0107722:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107725	obj/kern/kernel.asm	/^f0107725:	89 10                	mov    %edx,(%eax)$/;"	l
f0107727	obj/kern/kernel.asm	/^f0107727:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010772a	obj/kern/kernel.asm	/^f010772a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010772d	obj/kern/kernel.asm	/^f010772d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	eb 43                	jmp    f0107775 <stab_binsearch+0xf4>$/;"	l
f0107732	obj/kern/kernel.asm	/^f0107732:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107735	obj/kern/kernel.asm	/^f0107735:	89 d0                	mov    %edx,%eax$/;"	l
f0107737	obj/kern/kernel.asm	/^f0107737:	01 c0                	add    %eax,%eax$/;"	l
f0107739	obj/kern/kernel.asm	/^f0107739:	01 d0                	add    %edx,%eax$/;"	l
f010773b	obj/kern/kernel.asm	/^f010773b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010773e	obj/kern/kernel.asm	/^f010773e:	89 c2                	mov    %eax,%edx$/;"	l
f0107740	obj/kern/kernel.asm	/^f0107740:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	01 d0                	add    %edx,%eax$/;"	l
f0107745	obj/kern/kernel.asm	/^f0107745:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107748	obj/kern/kernel.asm	/^f0107748:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
f010774b	obj/kern/kernel.asm	/^f010774b:	76 16                	jbe    f0107763 <stab_binsearch+0xe2>$/;"	l
f010774d	obj/kern/kernel.asm	/^f010774d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107750	obj/kern/kernel.asm	/^f0107750:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0107753	obj/kern/kernel.asm	/^f0107753:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107756	obj/kern/kernel.asm	/^f0107756:	89 10                	mov    %edx,(%eax)$/;"	l
f0107758	obj/kern/kernel.asm	/^f0107758:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010775b	obj/kern/kernel.asm	/^f010775b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010775e	obj/kern/kernel.asm	/^f010775e:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0107761	obj/kern/kernel.asm	/^f0107761:	eb 12                	jmp    f0107775 <stab_binsearch+0xf4>$/;"	l
f0107763	obj/kern/kernel.asm	/^f0107763:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107766	obj/kern/kernel.asm	/^f0107766:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107769	obj/kern/kernel.asm	/^f0107769:	89 10                	mov    %edx,(%eax)$/;"	l
f010776b	obj/kern/kernel.asm	/^f010776b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010776e	obj/kern/kernel.asm	/^f010776e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
f0107775	obj/kern/kernel.asm	/^f0107775:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107778	obj/kern/kernel.asm	/^f0107778:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f010777b	obj/kern/kernel.asm	/^f010777b:	0f 8e 22 ff ff ff    	jle    f01076a3 <stab_binsearch+0x22>$/;"	l
f0107781	obj/kern/kernel.asm	/^f0107781:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0107785	obj/kern/kernel.asm	/^f0107785:	75 0f                	jne    f0107796 <stab_binsearch+0x115>$/;"	l
f0107787	obj/kern/kernel.asm	/^f0107787:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010778a	obj/kern/kernel.asm	/^f010778a:	8b 00                	mov    (%eax),%eax$/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f010778f	obj/kern/kernel.asm	/^f010778f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107792	obj/kern/kernel.asm	/^f0107792:	89 10                	mov    %edx,(%eax)$/;"	l
f0107794	obj/kern/kernel.asm	/^f0107794:	eb 3f                	jmp    f01077d5 <stab_binsearch+0x154>$/;"	l
f0107796	obj/kern/kernel.asm	/^f0107796:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107799	obj/kern/kernel.asm	/^f0107799:	8b 00                	mov    (%eax),%eax$/;"	l
f010779b	obj/kern/kernel.asm	/^f010779b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010779e	obj/kern/kernel.asm	/^f010779e:	eb 04                	jmp    f01077a4 <stab_binsearch+0x123>$/;"	l
f01077a0	obj/kern/kernel.asm	/^f01077a0:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
f01077a4	obj/kern/kernel.asm	/^f01077a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077a7	obj/kern/kernel.asm	/^f01077a7:	8b 00                	mov    (%eax),%eax$/;"	l
f01077a9	obj/kern/kernel.asm	/^f01077a9:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	7d 1f                	jge    f01077cd <stab_binsearch+0x14c>$/;"	l
f01077ae	obj/kern/kernel.asm	/^f01077ae:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01077b1	obj/kern/kernel.asm	/^f01077b1:	89 d0                	mov    %edx,%eax$/;"	l
f01077b3	obj/kern/kernel.asm	/^f01077b3:	01 c0                	add    %eax,%eax$/;"	l
f01077b5	obj/kern/kernel.asm	/^f01077b5:	01 d0                	add    %edx,%eax$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01077ba	obj/kern/kernel.asm	/^f01077ba:	89 c2                	mov    %eax,%edx$/;"	l
f01077bc	obj/kern/kernel.asm	/^f01077bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	01 d0                	add    %edx,%eax$/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f01077c5	obj/kern/kernel.asm	/^f01077c5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01077c8	obj/kern/kernel.asm	/^f01077c8:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f01077cb	obj/kern/kernel.asm	/^f01077cb:	75 d3                	jne    f01077a0 <stab_binsearch+0x11f>$/;"	l
f01077cd	obj/kern/kernel.asm	/^f01077cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077d0	obj/kern/kernel.asm	/^f01077d0:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01077d3	obj/kern/kernel.asm	/^f01077d3:	89 10                	mov    %edx,(%eax)$/;"	l
f01077d5	obj/kern/kernel.asm	/^f01077d5:	c9                   	leave  $/;"	l
f01077d6	obj/kern/kernel.asm	/^f01077d6:	c3                   	ret    $/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7 <debuginfo_eip>:$/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7:	55                   	push   %ebp$/;"	l
f01077d8	obj/kern/kernel.asm	/^f01077d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01077da	obj/kern/kernel.asm	/^f01077da:	53                   	push   %ebx$/;"	l
f01077db	obj/kern/kernel.asm	/^f01077db:	83 ec 54             	sub    $0x54,%esp$/;"	l
f01077de	obj/kern/kernel.asm	/^f01077de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077e1	obj/kern/kernel.asm	/^f01077e1:	c7 00 60 c1 10 f0    	movl   $0xf010c160,(%eax)$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f01077f1	obj/kern/kernel.asm	/^f01077f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077f4	obj/kern/kernel.asm	/^f01077f4:	c7 40 08 60 c1 10 f0 	movl   $0xf010c160,0x8(%eax)$/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077fe	obj/kern/kernel.asm	/^f01077fe:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
f0107805	obj/kern/kernel.asm	/^f0107805:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107808	obj/kern/kernel.asm	/^f0107808:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010780b	obj/kern/kernel.asm	/^f010780b:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f010780e	obj/kern/kernel.asm	/^f010780e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
f0107818	obj/kern/kernel.asm	/^f0107818:	81 7d 08 ff ff 7f ef 	cmpl   $0xef7fffff,0x8(%ebp)$/;"	l
f010781f	obj/kern/kernel.asm	/^f010781f:	76 21                	jbe    f0107842 <debuginfo_eip+0x6b>$/;"	l
f0107821	obj/kern/kernel.asm	/^f0107821:	c7 45 f4 64 cb 10 f0 	movl   $0xf010cb64,-0xc(%ebp)$/;"	l
f0107828	obj/kern/kernel.asm	/^f0107828:	c7 45 f0 74 ab 11 f0 	movl   $0xf011ab74,-0x10(%ebp)$/;"	l
f010782f	obj/kern/kernel.asm	/^f010782f:	c7 45 ec 75 ab 11 f0 	movl   $0xf011ab75,-0x14(%ebp)$/;"	l
f0107836	obj/kern/kernel.asm	/^f0107836:	c7 45 e8 31 fb 11 f0 	movl   $0xf011fb31,-0x18(%ebp)$/;"	l
f010783d	obj/kern/kernel.asm	/^f010783d:	e9 ed 00 00 00       	jmp    f010792f <debuginfo_eip+0x158>$/;"	l
f0107842	obj/kern/kernel.asm	/^f0107842:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	e8 34 18 00 00       	call   f0109082 <cpunum>$/;"	l
f010784e	obj/kern/kernel.asm	/^f010784e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107851	obj/kern/kernel.asm	/^f0107851:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0107856	obj/kern/kernel.asm	/^f0107856:	8b 00                	mov    (%eax),%eax$/;"	l
f0107858	obj/kern/kernel.asm	/^f0107858:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010785f	obj/kern/kernel.asm	/^f010785f:	00 $/;"	l
f0107860	obj/kern/kernel.asm	/^f0107860:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0107867	obj/kern/kernel.asm	/^f0107867:	00 $/;"	l
f0107868	obj/kern/kernel.asm	/^f0107868:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010786b	obj/kern/kernel.asm	/^f010786b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010786f	obj/kern/kernel.asm	/^f010786f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107872	obj/kern/kernel.asm	/^f0107872:	e8 7a a7 ff ff       	call   f0101ff1 <user_mem_check>$/;"	l
f0107877	obj/kern/kernel.asm	/^f0107877:	85 c0                	test   %eax,%eax$/;"	l
f0107879	obj/kern/kernel.asm	/^f0107879:	74 0a                	je     f0107885 <debuginfo_eip+0xae>$/;"	l
f010787b	obj/kern/kernel.asm	/^f010787b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0107880	obj/kern/kernel.asm	/^f0107880:	e9 89 03 00 00       	jmp    f0107c0e <debuginfo_eip+0x437>$/;"	l
f0107885	obj/kern/kernel.asm	/^f0107885:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107888	obj/kern/kernel.asm	/^f0107888:	8b 00                	mov    (%eax),%eax$/;"	l
f010788a	obj/kern/kernel.asm	/^f010788a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010788d	obj/kern/kernel.asm	/^f010788d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107890	obj/kern/kernel.asm	/^f0107890:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107893	obj/kern/kernel.asm	/^f0107893:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0107896	obj/kern/kernel.asm	/^f0107896:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107899	obj/kern/kernel.asm	/^f0107899:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f010789c	obj/kern/kernel.asm	/^f010789c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010789f	obj/kern/kernel.asm	/^f010789f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01078a2	obj/kern/kernel.asm	/^f01078a2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f01078a5	obj/kern/kernel.asm	/^f01078a5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01078a8	obj/kern/kernel.asm	/^f01078a8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01078ab	obj/kern/kernel.asm	/^f01078ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01078ae	obj/kern/kernel.asm	/^f01078ae:	29 c2                	sub    %eax,%edx$/;"	l
f01078b0	obj/kern/kernel.asm	/^f01078b0:	89 d0                	mov    %edx,%eax$/;"	l
f01078b2	obj/kern/kernel.asm	/^f01078b2:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01078b5	obj/kern/kernel.asm	/^f01078b5:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01078bb	obj/kern/kernel.asm	/^f01078bb:	89 c3                	mov    %eax,%ebx$/;"	l
f01078bd	obj/kern/kernel.asm	/^f01078bd:	e8 c0 17 00 00       	call   f0109082 <cpunum>$/;"	l
f01078c2	obj/kern/kernel.asm	/^f01078c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01078c5	obj/kern/kernel.asm	/^f01078c5:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	8b 00                	mov    (%eax),%eax$/;"	l
f01078cc	obj/kern/kernel.asm	/^f01078cc:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01078d3	obj/kern/kernel.asm	/^f01078d3:	00 $/;"	l
f01078d4	obj/kern/kernel.asm	/^f01078d4:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01078d8	obj/kern/kernel.asm	/^f01078d8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01078db	obj/kern/kernel.asm	/^f01078db:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01078df	obj/kern/kernel.asm	/^f01078df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01078e2	obj/kern/kernel.asm	/^f01078e2:	e8 0a a7 ff ff       	call   f0101ff1 <user_mem_check>$/;"	l
f01078e7	obj/kern/kernel.asm	/^f01078e7:	85 c0                	test   %eax,%eax$/;"	l
f01078e9	obj/kern/kernel.asm	/^f01078e9:	78 3a                	js     f0107925 <debuginfo_eip+0x14e>$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01078ee	obj/kern/kernel.asm	/^f01078ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01078f1	obj/kern/kernel.asm	/^f01078f1:	29 c2                	sub    %eax,%edx$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	89 d0                	mov    %edx,%eax$/;"	l
f01078f5	obj/kern/kernel.asm	/^f01078f5:	89 c3                	mov    %eax,%ebx$/;"	l
f01078f7	obj/kern/kernel.asm	/^f01078f7:	e8 86 17 00 00       	call   f0109082 <cpunum>$/;"	l
f01078fc	obj/kern/kernel.asm	/^f01078fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01078ff	obj/kern/kernel.asm	/^f01078ff:	05 28 10 2f f0       	add    $0xf02f1028,%eax$/;"	l
f0107904	obj/kern/kernel.asm	/^f0107904:	8b 00                	mov    (%eax),%eax$/;"	l
f0107906	obj/kern/kernel.asm	/^f0107906:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010790d	obj/kern/kernel.asm	/^f010790d:	00 $/;"	l
f010790e	obj/kern/kernel.asm	/^f010790e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0107912	obj/kern/kernel.asm	/^f0107912:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0107915	obj/kern/kernel.asm	/^f0107915:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107919	obj/kern/kernel.asm	/^f0107919:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010791c	obj/kern/kernel.asm	/^f010791c:	e8 d0 a6 ff ff       	call   f0101ff1 <user_mem_check>$/;"	l
f0107921	obj/kern/kernel.asm	/^f0107921:	85 c0                	test   %eax,%eax$/;"	l
f0107923	obj/kern/kernel.asm	/^f0107923:	79 0a                	jns    f010792f <debuginfo_eip+0x158>$/;"	l
f0107925	obj/kern/kernel.asm	/^f0107925:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010792a	obj/kern/kernel.asm	/^f010792a:	e9 df 02 00 00       	jmp    f0107c0e <debuginfo_eip+0x437>$/;"	l
f010792f	obj/kern/kernel.asm	/^f010792f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107932	obj/kern/kernel.asm	/^f0107932:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	76 0d                	jbe    f0107944 <debuginfo_eip+0x16d>$/;"	l
f0107937	obj/kern/kernel.asm	/^f0107937:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010793a	obj/kern/kernel.asm	/^f010793a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010793d	obj/kern/kernel.asm	/^f010793d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107940	obj/kern/kernel.asm	/^f0107940:	84 c0                	test   %al,%al$/;"	l
f0107942	obj/kern/kernel.asm	/^f0107942:	74 0a                	je     f010794e <debuginfo_eip+0x177>$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0107949	obj/kern/kernel.asm	/^f0107949:	e9 c0 02 00 00       	jmp    f0107c0e <debuginfo_eip+0x437>$/;"	l
f010794e	obj/kern/kernel.asm	/^f010794e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0107955	obj/kern/kernel.asm	/^f0107955:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107958	obj/kern/kernel.asm	/^f0107958:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010795b	obj/kern/kernel.asm	/^f010795b:	29 c2                	sub    %eax,%edx$/;"	l
f010795d	obj/kern/kernel.asm	/^f010795d:	89 d0                	mov    %edx,%eax$/;"	l
f010795f	obj/kern/kernel.asm	/^f010795f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0107962	obj/kern/kernel.asm	/^f0107962:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0107968	obj/kern/kernel.asm	/^f0107968:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010796b	obj/kern/kernel.asm	/^f010796b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010796e	obj/kern/kernel.asm	/^f010796e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107971	obj/kern/kernel.asm	/^f0107971:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107975	obj/kern/kernel.asm	/^f0107975:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
f010797c	obj/kern/kernel.asm	/^f010797c:	00 $/;"	l
f010797d	obj/kern/kernel.asm	/^f010797d:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0107980	obj/kern/kernel.asm	/^f0107980:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107984	obj/kern/kernel.asm	/^f0107984:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0107987	obj/kern/kernel.asm	/^f0107987:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010798e	obj/kern/kernel.asm	/^f010798e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107991	obj/kern/kernel.asm	/^f0107991:	e8 eb fc ff ff       	call   f0107681 <stab_binsearch>$/;"	l
f0107996	obj/kern/kernel.asm	/^f0107996:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107999	obj/kern/kernel.asm	/^f0107999:	85 c0                	test   %eax,%eax$/;"	l
f010799b	obj/kern/kernel.asm	/^f010799b:	75 0a                	jne    f01079a7 <debuginfo_eip+0x1d0>$/;"	l
f010799d	obj/kern/kernel.asm	/^f010799d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01079a2	obj/kern/kernel.asm	/^f01079a2:	e9 67 02 00 00       	jmp    f0107c0e <debuginfo_eip+0x437>$/;"	l
f01079a7	obj/kern/kernel.asm	/^f01079a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01079aa	obj/kern/kernel.asm	/^f01079aa:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01079ad	obj/kern/kernel.asm	/^f01079ad:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01079b0	obj/kern/kernel.asm	/^f01079b0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01079b3	obj/kern/kernel.asm	/^f01079b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01079b6	obj/kern/kernel.asm	/^f01079b6:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01079ba	obj/kern/kernel.asm	/^f01079ba:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
f01079c1	obj/kern/kernel.asm	/^f01079c1:	00 $/;"	l
f01079c2	obj/kern/kernel.asm	/^f01079c2:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
f01079c5	obj/kern/kernel.asm	/^f01079c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01079c9	obj/kern/kernel.asm	/^f01079c9:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f01079cc	obj/kern/kernel.asm	/^f01079cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01079d0	obj/kern/kernel.asm	/^f01079d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01079d3	obj/kern/kernel.asm	/^f01079d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01079d6	obj/kern/kernel.asm	/^f01079d6:	e8 a6 fc ff ff       	call   f0107681 <stab_binsearch>$/;"	l
f01079db	obj/kern/kernel.asm	/^f01079db:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01079de	obj/kern/kernel.asm	/^f01079de:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01079e1	obj/kern/kernel.asm	/^f01079e1:	39 c2                	cmp    %eax,%edx$/;"	l
f01079e3	obj/kern/kernel.asm	/^f01079e3:	7f 7c                	jg     f0107a61 <debuginfo_eip+0x28a>$/;"	l
f01079e5	obj/kern/kernel.asm	/^f01079e5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01079e8	obj/kern/kernel.asm	/^f01079e8:	89 c2                	mov    %eax,%edx$/;"	l
f01079ea	obj/kern/kernel.asm	/^f01079ea:	89 d0                	mov    %edx,%eax$/;"	l
f01079ec	obj/kern/kernel.asm	/^f01079ec:	01 c0                	add    %eax,%eax$/;"	l
f01079ee	obj/kern/kernel.asm	/^f01079ee:	01 d0                	add    %edx,%eax$/;"	l
f01079f0	obj/kern/kernel.asm	/^f01079f0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01079f3	obj/kern/kernel.asm	/^f01079f3:	89 c2                	mov    %eax,%edx$/;"	l
f01079f5	obj/kern/kernel.asm	/^f01079f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01079f8	obj/kern/kernel.asm	/^f01079f8:	01 d0                	add    %edx,%eax$/;"	l
f01079fa	obj/kern/kernel.asm	/^f01079fa:	8b 10                	mov    (%eax),%edx$/;"	l
f01079fc	obj/kern/kernel.asm	/^f01079fc:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01079ff	obj/kern/kernel.asm	/^f01079ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107a02	obj/kern/kernel.asm	/^f0107a02:	29 c1                	sub    %eax,%ecx$/;"	l
f0107a04	obj/kern/kernel.asm	/^f0107a04:	89 c8                	mov    %ecx,%eax$/;"	l
f0107a06	obj/kern/kernel.asm	/^f0107a06:	39 c2                	cmp    %eax,%edx$/;"	l
f0107a08	obj/kern/kernel.asm	/^f0107a08:	73 22                	jae    f0107a2c <debuginfo_eip+0x255>$/;"	l
f0107a0a	obj/kern/kernel.asm	/^f0107a0a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0107a0d	obj/kern/kernel.asm	/^f0107a0d:	89 c2                	mov    %eax,%edx$/;"	l
f0107a0f	obj/kern/kernel.asm	/^f0107a0f:	89 d0                	mov    %edx,%eax$/;"	l
f0107a11	obj/kern/kernel.asm	/^f0107a11:	01 c0                	add    %eax,%eax$/;"	l
f0107a13	obj/kern/kernel.asm	/^f0107a13:	01 d0                	add    %edx,%eax$/;"	l
f0107a15	obj/kern/kernel.asm	/^f0107a15:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107a18	obj/kern/kernel.asm	/^f0107a18:	89 c2                	mov    %eax,%edx$/;"	l
f0107a1a	obj/kern/kernel.asm	/^f0107a1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107a1d	obj/kern/kernel.asm	/^f0107a1d:	01 d0                	add    %edx,%eax$/;"	l
f0107a1f	obj/kern/kernel.asm	/^f0107a1f:	8b 10                	mov    (%eax),%edx$/;"	l
f0107a21	obj/kern/kernel.asm	/^f0107a21:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107a24	obj/kern/kernel.asm	/^f0107a24:	01 c2                	add    %eax,%edx$/;"	l
f0107a26	obj/kern/kernel.asm	/^f0107a26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a29	obj/kern/kernel.asm	/^f0107a29:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0107a2c	obj/kern/kernel.asm	/^f0107a2c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0107a2f	obj/kern/kernel.asm	/^f0107a2f:	89 c2                	mov    %eax,%edx$/;"	l
f0107a31	obj/kern/kernel.asm	/^f0107a31:	89 d0                	mov    %edx,%eax$/;"	l
f0107a33	obj/kern/kernel.asm	/^f0107a33:	01 c0                	add    %eax,%eax$/;"	l
f0107a35	obj/kern/kernel.asm	/^f0107a35:	01 d0                	add    %edx,%eax$/;"	l
f0107a37	obj/kern/kernel.asm	/^f0107a37:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107a3a	obj/kern/kernel.asm	/^f0107a3a:	89 c2                	mov    %eax,%edx$/;"	l
f0107a3c	obj/kern/kernel.asm	/^f0107a3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107a3f	obj/kern/kernel.asm	/^f0107a3f:	01 d0                	add    %edx,%eax$/;"	l
f0107a41	obj/kern/kernel.asm	/^f0107a41:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f0107a44	obj/kern/kernel.asm	/^f0107a44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a47	obj/kern/kernel.asm	/^f0107a47:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f0107a4a	obj/kern/kernel.asm	/^f0107a4a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a4d	obj/kern/kernel.asm	/^f0107a4d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0107a50	obj/kern/kernel.asm	/^f0107a50:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0107a56	obj/kern/kernel.asm	/^f0107a56:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0107a59	obj/kern/kernel.asm	/^f0107a59:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0107a5c	obj/kern/kernel.asm	/^f0107a5c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0107a5f	obj/kern/kernel.asm	/^f0107a5f:	eb 15                	jmp    f0107a76 <debuginfo_eip+0x29f>$/;"	l
f0107a61	obj/kern/kernel.asm	/^f0107a61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a64	obj/kern/kernel.asm	/^f0107a64:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107a67	obj/kern/kernel.asm	/^f0107a67:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f0107a6a	obj/kern/kernel.asm	/^f0107a6a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107a6d	obj/kern/kernel.asm	/^f0107a6d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0107a70	obj/kern/kernel.asm	/^f0107a70:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107a73	obj/kern/kernel.asm	/^f0107a73:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0107a76	obj/kern/kernel.asm	/^f0107a76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a79	obj/kern/kernel.asm	/^f0107a79:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107a7c	obj/kern/kernel.asm	/^f0107a7c:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0107a83	obj/kern/kernel.asm	/^f0107a83:	00 $/;"	l
f0107a84	obj/kern/kernel.asm	/^f0107a84:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107a87	obj/kern/kernel.asm	/^f0107a87:	e8 00 0b 00 00       	call   f010858c <strfind>$/;"	l
f0107a8c	obj/kern/kernel.asm	/^f0107a8c:	89 c2                	mov    %eax,%edx$/;"	l
f0107a8e	obj/kern/kernel.asm	/^f0107a8e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a91	obj/kern/kernel.asm	/^f0107a91:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107a94	obj/kern/kernel.asm	/^f0107a94:	29 c2                	sub    %eax,%edx$/;"	l
f0107a96	obj/kern/kernel.asm	/^f0107a96:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107a99	obj/kern/kernel.asm	/^f0107a99:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
f0107a9c	obj/kern/kernel.asm	/^f0107a9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107a9f	obj/kern/kernel.asm	/^f0107a9f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107aa3	obj/kern/kernel.asm	/^f0107aa3:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
f0107aaa	obj/kern/kernel.asm	/^f0107aaa:	00 $/;"	l
f0107aab	obj/kern/kernel.asm	/^f0107aab:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
f0107aae	obj/kern/kernel.asm	/^f0107aae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107ab2	obj/kern/kernel.asm	/^f0107ab2:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0107ab5	obj/kern/kernel.asm	/^f0107ab5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ab9	obj/kern/kernel.asm	/^f0107ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107abc	obj/kern/kernel.asm	/^f0107abc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107abf	obj/kern/kernel.asm	/^f0107abf:	e8 bd fb ff ff       	call   f0107681 <stab_binsearch>$/;"	l
f0107ac4	obj/kern/kernel.asm	/^f0107ac4:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107ac7	obj/kern/kernel.asm	/^f0107ac7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0107aca	obj/kern/kernel.asm	/^f0107aca:	39 c2                	cmp    %eax,%edx$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	7f 24                	jg     f0107af2 <debuginfo_eip+0x31b>$/;"	l
f0107ace	obj/kern/kernel.asm	/^f0107ace:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107ad1	obj/kern/kernel.asm	/^f0107ad1:	89 c2                	mov    %eax,%edx$/;"	l
f0107ad3	obj/kern/kernel.asm	/^f0107ad3:	89 d0                	mov    %edx,%eax$/;"	l
f0107ad5	obj/kern/kernel.asm	/^f0107ad5:	01 c0                	add    %eax,%eax$/;"	l
f0107ad7	obj/kern/kernel.asm	/^f0107ad7:	01 d0                	add    %edx,%eax$/;"	l
f0107ad9	obj/kern/kernel.asm	/^f0107ad9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107adc	obj/kern/kernel.asm	/^f0107adc:	89 c2                	mov    %eax,%edx$/;"	l
f0107ade	obj/kern/kernel.asm	/^f0107ade:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107ae1	obj/kern/kernel.asm	/^f0107ae1:	01 d0                	add    %edx,%eax$/;"	l
f0107ae3	obj/kern/kernel.asm	/^f0107ae3:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
f0107ae7	obj/kern/kernel.asm	/^f0107ae7:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f0107aea	obj/kern/kernel.asm	/^f0107aea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107aed	obj/kern/kernel.asm	/^f0107aed:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0107af0	obj/kern/kernel.asm	/^f0107af0:	eb 13                	jmp    f0107b05 <debuginfo_eip+0x32e>$/;"	l
f0107af2	obj/kern/kernel.asm	/^f0107af2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0107af7	obj/kern/kernel.asm	/^f0107af7:	e9 12 01 00 00       	jmp    f0107c0e <debuginfo_eip+0x437>$/;"	l
f0107afc	obj/kern/kernel.asm	/^f0107afc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107aff	obj/kern/kernel.asm	/^f0107aff:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0107b02	obj/kern/kernel.asm	/^f0107b02:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0107b05	obj/kern/kernel.asm	/^f0107b05:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107b08	obj/kern/kernel.asm	/^f0107b08:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107b0b	obj/kern/kernel.asm	/^f0107b0b:	39 c2                	cmp    %eax,%edx$/;"	l
f0107b0d	obj/kern/kernel.asm	/^f0107b0d:	7c 56                	jl     f0107b65 <debuginfo_eip+0x38e>$/;"	l
f0107b0f	obj/kern/kernel.asm	/^f0107b0f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107b12	obj/kern/kernel.asm	/^f0107b12:	89 c2                	mov    %eax,%edx$/;"	l
f0107b14	obj/kern/kernel.asm	/^f0107b14:	89 d0                	mov    %edx,%eax$/;"	l
f0107b16	obj/kern/kernel.asm	/^f0107b16:	01 c0                	add    %eax,%eax$/;"	l
f0107b18	obj/kern/kernel.asm	/^f0107b18:	01 d0                	add    %edx,%eax$/;"	l
f0107b1a	obj/kern/kernel.asm	/^f0107b1a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107b1d	obj/kern/kernel.asm	/^f0107b1d:	89 c2                	mov    %eax,%edx$/;"	l
f0107b1f	obj/kern/kernel.asm	/^f0107b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107b22	obj/kern/kernel.asm	/^f0107b22:	01 d0                	add    %edx,%eax$/;"	l
f0107b24	obj/kern/kernel.asm	/^f0107b24:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0107b28	obj/kern/kernel.asm	/^f0107b28:	3c 84                	cmp    $0x84,%al$/;"	l
f0107b2a	obj/kern/kernel.asm	/^f0107b2a:	74 39                	je     f0107b65 <debuginfo_eip+0x38e>$/;"	l
f0107b2c	obj/kern/kernel.asm	/^f0107b2c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107b2f	obj/kern/kernel.asm	/^f0107b2f:	89 c2                	mov    %eax,%edx$/;"	l
f0107b31	obj/kern/kernel.asm	/^f0107b31:	89 d0                	mov    %edx,%eax$/;"	l
f0107b33	obj/kern/kernel.asm	/^f0107b33:	01 c0                	add    %eax,%eax$/;"	l
f0107b35	obj/kern/kernel.asm	/^f0107b35:	01 d0                	add    %edx,%eax$/;"	l
f0107b37	obj/kern/kernel.asm	/^f0107b37:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107b3a	obj/kern/kernel.asm	/^f0107b3a:	89 c2                	mov    %eax,%edx$/;"	l
f0107b3c	obj/kern/kernel.asm	/^f0107b3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107b3f	obj/kern/kernel.asm	/^f0107b3f:	01 d0                	add    %edx,%eax$/;"	l
f0107b41	obj/kern/kernel.asm	/^f0107b41:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0107b45	obj/kern/kernel.asm	/^f0107b45:	3c 64                	cmp    $0x64,%al$/;"	l
f0107b47	obj/kern/kernel.asm	/^f0107b47:	75 b3                	jne    f0107afc <debuginfo_eip+0x325>$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107b4c	obj/kern/kernel.asm	/^f0107b4c:	89 c2                	mov    %eax,%edx$/;"	l
f0107b4e	obj/kern/kernel.asm	/^f0107b4e:	89 d0                	mov    %edx,%eax$/;"	l
f0107b50	obj/kern/kernel.asm	/^f0107b50:	01 c0                	add    %eax,%eax$/;"	l
f0107b52	obj/kern/kernel.asm	/^f0107b52:	01 d0                	add    %edx,%eax$/;"	l
f0107b54	obj/kern/kernel.asm	/^f0107b54:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107b57	obj/kern/kernel.asm	/^f0107b57:	89 c2                	mov    %eax,%edx$/;"	l
f0107b59	obj/kern/kernel.asm	/^f0107b59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107b5c	obj/kern/kernel.asm	/^f0107b5c:	01 d0                	add    %edx,%eax$/;"	l
f0107b5e	obj/kern/kernel.asm	/^f0107b5e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107b61	obj/kern/kernel.asm	/^f0107b61:	85 c0                	test   %eax,%eax$/;"	l
f0107b63	obj/kern/kernel.asm	/^f0107b63:	74 97                	je     f0107afc <debuginfo_eip+0x325>$/;"	l
f0107b65	obj/kern/kernel.asm	/^f0107b65:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107b68	obj/kern/kernel.asm	/^f0107b68:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107b6b	obj/kern/kernel.asm	/^f0107b6b:	39 c2                	cmp    %eax,%edx$/;"	l
f0107b6d	obj/kern/kernel.asm	/^f0107b6d:	7c 46                	jl     f0107bb5 <debuginfo_eip+0x3de>$/;"	l
f0107b6f	obj/kern/kernel.asm	/^f0107b6f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107b72	obj/kern/kernel.asm	/^f0107b72:	89 c2                	mov    %eax,%edx$/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	89 d0                	mov    %edx,%eax$/;"	l
f0107b76	obj/kern/kernel.asm	/^f0107b76:	01 c0                	add    %eax,%eax$/;"	l
f0107b78	obj/kern/kernel.asm	/^f0107b78:	01 d0                	add    %edx,%eax$/;"	l
f0107b7a	obj/kern/kernel.asm	/^f0107b7a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107b7d	obj/kern/kernel.asm	/^f0107b7d:	89 c2                	mov    %eax,%edx$/;"	l
f0107b7f	obj/kern/kernel.asm	/^f0107b7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107b82	obj/kern/kernel.asm	/^f0107b82:	01 d0                	add    %edx,%eax$/;"	l
f0107b84	obj/kern/kernel.asm	/^f0107b84:	8b 10                	mov    (%eax),%edx$/;"	l
f0107b86	obj/kern/kernel.asm	/^f0107b86:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0107b89	obj/kern/kernel.asm	/^f0107b89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c:	29 c1                	sub    %eax,%ecx$/;"	l
f0107b8e	obj/kern/kernel.asm	/^f0107b8e:	89 c8                	mov    %ecx,%eax$/;"	l
f0107b90	obj/kern/kernel.asm	/^f0107b90:	39 c2                	cmp    %eax,%edx$/;"	l
f0107b92	obj/kern/kernel.asm	/^f0107b92:	73 21                	jae    f0107bb5 <debuginfo_eip+0x3de>$/;"	l
f0107b94	obj/kern/kernel.asm	/^f0107b94:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107b97	obj/kern/kernel.asm	/^f0107b97:	89 c2                	mov    %eax,%edx$/;"	l
f0107b99	obj/kern/kernel.asm	/^f0107b99:	89 d0                	mov    %edx,%eax$/;"	l
f0107b9b	obj/kern/kernel.asm	/^f0107b9b:	01 c0                	add    %eax,%eax$/;"	l
f0107b9d	obj/kern/kernel.asm	/^f0107b9d:	01 d0                	add    %edx,%eax$/;"	l
f0107b9f	obj/kern/kernel.asm	/^f0107b9f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107ba2	obj/kern/kernel.asm	/^f0107ba2:	89 c2                	mov    %eax,%edx$/;"	l
f0107ba4	obj/kern/kernel.asm	/^f0107ba4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107ba7	obj/kern/kernel.asm	/^f0107ba7:	01 d0                	add    %edx,%eax$/;"	l
f0107ba9	obj/kern/kernel.asm	/^f0107ba9:	8b 10                	mov    (%eax),%edx$/;"	l
f0107bab	obj/kern/kernel.asm	/^f0107bab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107bae	obj/kern/kernel.asm	/^f0107bae:	01 c2                	add    %eax,%edx$/;"	l
f0107bb0	obj/kern/kernel.asm	/^f0107bb0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107bb3	obj/kern/kernel.asm	/^f0107bb3:	89 10                	mov    %edx,(%eax)$/;"	l
f0107bb5	obj/kern/kernel.asm	/^f0107bb5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0107bb8	obj/kern/kernel.asm	/^f0107bb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0107bbb	obj/kern/kernel.asm	/^f0107bbb:	39 c2                	cmp    %eax,%edx$/;"	l
f0107bbd	obj/kern/kernel.asm	/^f0107bbd:	7d 4a                	jge    f0107c09 <debuginfo_eip+0x432>$/;"	l
f0107bbf	obj/kern/kernel.asm	/^f0107bbf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0107bc2	obj/kern/kernel.asm	/^f0107bc2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107bc5	obj/kern/kernel.asm	/^f0107bc5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0107bc8	obj/kern/kernel.asm	/^f0107bc8:	eb 18                	jmp    f0107be2 <debuginfo_eip+0x40b>$/;"	l
f0107bca	obj/kern/kernel.asm	/^f0107bca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107bcd	obj/kern/kernel.asm	/^f0107bcd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f0107bd0	obj/kern/kernel.asm	/^f0107bd0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0107bd3	obj/kern/kernel.asm	/^f0107bd3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107bd6	obj/kern/kernel.asm	/^f0107bd6:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
f0107bd9	obj/kern/kernel.asm	/^f0107bd9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107bdc	obj/kern/kernel.asm	/^f0107bdc:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107bdf	obj/kern/kernel.asm	/^f0107bdf:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0107be8	obj/kern/kernel.asm	/^f0107be8:	39 c2                	cmp    %eax,%edx$/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea:	7d 1d                	jge    f0107c09 <debuginfo_eip+0x432>$/;"	l
f0107bec	obj/kern/kernel.asm	/^f0107bec:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0107bef	obj/kern/kernel.asm	/^f0107bef:	89 c2                	mov    %eax,%edx$/;"	l
f0107bf1	obj/kern/kernel.asm	/^f0107bf1:	89 d0                	mov    %edx,%eax$/;"	l
f0107bf3	obj/kern/kernel.asm	/^f0107bf3:	01 c0                	add    %eax,%eax$/;"	l
f0107bf5	obj/kern/kernel.asm	/^f0107bf5:	01 d0                	add    %edx,%eax$/;"	l
f0107bf7	obj/kern/kernel.asm	/^f0107bf7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107bfa	obj/kern/kernel.asm	/^f0107bfa:	89 c2                	mov    %eax,%edx$/;"	l
f0107bfc	obj/kern/kernel.asm	/^f0107bfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107bff	obj/kern/kernel.asm	/^f0107bff:	01 d0                	add    %edx,%eax$/;"	l
f0107c01	obj/kern/kernel.asm	/^f0107c01:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0107c05	obj/kern/kernel.asm	/^f0107c05:	3c a0                	cmp    $0xa0,%al$/;"	l
f0107c07	obj/kern/kernel.asm	/^f0107c07:	74 c1                	je     f0107bca <debuginfo_eip+0x3f3>$/;"	l
f0107c09	obj/kern/kernel.asm	/^f0107c09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107c0e	obj/kern/kernel.asm	/^f0107c0e:	83 c4 54             	add    $0x54,%esp$/;"	l
f0107c11	obj/kern/kernel.asm	/^f0107c11:	5b                   	pop    %ebx$/;"	l
f0107c12	obj/kern/kernel.asm	/^f0107c12:	5d                   	pop    %ebp$/;"	l
f0107c13	obj/kern/kernel.asm	/^f0107c13:	c3                   	ret    $/;"	l
f0107c14	obj/kern/kernel.asm	/^f0107c14 <printnum>:$/;"	l
f0107c14	obj/kern/kernel.asm	/^f0107c14:	55                   	push   %ebp$/;"	l
f0107c15	obj/kern/kernel.asm	/^f0107c15:	89 e5                	mov    %esp,%ebp$/;"	l
f0107c17	obj/kern/kernel.asm	/^f0107c17:	53                   	push   %ebx$/;"	l
f0107c18	obj/kern/kernel.asm	/^f0107c18:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0107c1b	obj/kern/kernel.asm	/^f0107c1b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107c1e	obj/kern/kernel.asm	/^f0107c1e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0107c21	obj/kern/kernel.asm	/^f0107c21:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107c24	obj/kern/kernel.asm	/^f0107c24:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0107c2a	obj/kern/kernel.asm	/^f0107c2a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107c2f	obj/kern/kernel.asm	/^f0107c2f:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
f0107c32	obj/kern/kernel.asm	/^f0107c32:	77 72                	ja     f0107ca6 <printnum+0x92>$/;"	l
f0107c34	obj/kern/kernel.asm	/^f0107c34:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
f0107c37	obj/kern/kernel.asm	/^f0107c37:	72 05                	jb     f0107c3e <printnum+0x2a>$/;"	l
f0107c39	obj/kern/kernel.asm	/^f0107c39:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0107c3c	obj/kern/kernel.asm	/^f0107c3c:	77 68                	ja     f0107ca6 <printnum+0x92>$/;"	l
f0107c3e	obj/kern/kernel.asm	/^f0107c3e:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0107c41	obj/kern/kernel.asm	/^f0107c41:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0107c44	obj/kern/kernel.asm	/^f0107c44:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0107c47	obj/kern/kernel.asm	/^f0107c47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107c4c	obj/kern/kernel.asm	/^f0107c4c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c50	obj/kern/kernel.asm	/^f0107c50:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107c54	obj/kern/kernel.asm	/^f0107c54:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107c57	obj/kern/kernel.asm	/^f0107c57:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0107c5a	obj/kern/kernel.asm	/^f0107c5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107c5d	obj/kern/kernel.asm	/^f0107c5d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107c61	obj/kern/kernel.asm	/^f0107c61:	e8 ba 28 00 00       	call   f010a520 <__udivdi3>$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	8b 4d 20             	mov    0x20(%ebp),%ecx$/;"	l
f0107c69	obj/kern/kernel.asm	/^f0107c69:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107c6d	obj/kern/kernel.asm	/^f0107c6d:	89 5c 24 14          	mov    %ebx,0x14(%esp)$/;"	l
f0107c71	obj/kern/kernel.asm	/^f0107c71:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0107c74	obj/kern/kernel.asm	/^f0107c74:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107c78	obj/kern/kernel.asm	/^f0107c78:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c7c	obj/kern/kernel.asm	/^f0107c7c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107c80	obj/kern/kernel.asm	/^f0107c80:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107c83	obj/kern/kernel.asm	/^f0107c83:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c87	obj/kern/kernel.asm	/^f0107c87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107c8a	obj/kern/kernel.asm	/^f0107c8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107c8d	obj/kern/kernel.asm	/^f0107c8d:	e8 82 ff ff ff       	call   f0107c14 <printnum>$/;"	l
f0107c92	obj/kern/kernel.asm	/^f0107c92:	eb 1c                	jmp    f0107cb0 <printnum+0x9c>$/;"	l
f0107c94	obj/kern/kernel.asm	/^f0107c94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107c97	obj/kern/kernel.asm	/^f0107c97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c9b	obj/kern/kernel.asm	/^f0107c9b:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
f0107c9e	obj/kern/kernel.asm	/^f0107c9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ca1	obj/kern/kernel.asm	/^f0107ca1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107ca4	obj/kern/kernel.asm	/^f0107ca4:	ff d0                	call   *%eax$/;"	l
f0107ca6	obj/kern/kernel.asm	/^f0107ca6:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
f0107cae	obj/kern/kernel.asm	/^f0107cae:	7f e4                	jg     f0107c94 <printnum+0x80>$/;"	l
f0107cb0	obj/kern/kernel.asm	/^f0107cb0:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0107cb3	obj/kern/kernel.asm	/^f0107cb3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0107cb8	obj/kern/kernel.asm	/^f0107cb8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107cbb	obj/kern/kernel.asm	/^f0107cbb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0107cbe	obj/kern/kernel.asm	/^f0107cbe:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107cc2	obj/kern/kernel.asm	/^f0107cc2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107cc6	obj/kern/kernel.asm	/^f0107cc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107cc9	obj/kern/kernel.asm	/^f0107cc9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107ccd	obj/kern/kernel.asm	/^f0107ccd:	e8 7e 29 00 00       	call   f010a650 <__umoddi3>$/;"	l
f0107cd2	obj/kern/kernel.asm	/^f0107cd2:	05 08 c3 10 f0       	add    $0xf010c308,%eax$/;"	l
f0107cd7	obj/kern/kernel.asm	/^f0107cd7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107cda	obj/kern/kernel.asm	/^f0107cda:	0f be c0             	movsbl %al,%eax$/;"	l
f0107cdd	obj/kern/kernel.asm	/^f0107cdd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107ce0	obj/kern/kernel.asm	/^f0107ce0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107ce4	obj/kern/kernel.asm	/^f0107ce4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ce7	obj/kern/kernel.asm	/^f0107ce7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107cea	obj/kern/kernel.asm	/^f0107cea:	ff d0                	call   *%eax$/;"	l
f0107cec	obj/kern/kernel.asm	/^f0107cec:	83 c4 34             	add    $0x34,%esp$/;"	l
f0107cef	obj/kern/kernel.asm	/^f0107cef:	5b                   	pop    %ebx$/;"	l
f0107cf0	obj/kern/kernel.asm	/^f0107cf0:	5d                   	pop    %ebp$/;"	l
f0107cf1	obj/kern/kernel.asm	/^f0107cf1:	c3                   	ret    $/;"	l
f0107cf2	obj/kern/kernel.asm	/^f0107cf2 <getuint>:$/;"	l
f0107cf2	obj/kern/kernel.asm	/^f0107cf2:	55                   	push   %ebp$/;"	l
f0107cf3	obj/kern/kernel.asm	/^f0107cf3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cf5	obj/kern/kernel.asm	/^f0107cf5:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0107cf9	obj/kern/kernel.asm	/^f0107cf9:	7e 14                	jle    f0107d0f <getuint+0x1d>$/;"	l
f0107cfb	obj/kern/kernel.asm	/^f0107cfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107cfe	obj/kern/kernel.asm	/^f0107cfe:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
f0107d03	obj/kern/kernel.asm	/^f0107d03:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d06	obj/kern/kernel.asm	/^f0107d06:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d08	obj/kern/kernel.asm	/^f0107d08:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0107d0b	obj/kern/kernel.asm	/^f0107d0b:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d0d	obj/kern/kernel.asm	/^f0107d0d:	eb 30                	jmp    f0107d3f <getuint+0x4d>$/;"	l
f0107d0f	obj/kern/kernel.asm	/^f0107d0f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0107d13	obj/kern/kernel.asm	/^f0107d13:	74 16                	je     f0107d2b <getuint+0x39>$/;"	l
f0107d15	obj/kern/kernel.asm	/^f0107d15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107d18	obj/kern/kernel.asm	/^f0107d18:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d1a	obj/kern/kernel.asm	/^f0107d1a:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0107d1d	obj/kern/kernel.asm	/^f0107d1d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d20	obj/kern/kernel.asm	/^f0107d20:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d22	obj/kern/kernel.asm	/^f0107d22:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d24	obj/kern/kernel.asm	/^f0107d24:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107d29	obj/kern/kernel.asm	/^f0107d29:	eb 14                	jmp    f0107d3f <getuint+0x4d>$/;"	l
f0107d2b	obj/kern/kernel.asm	/^f0107d2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107d2e	obj/kern/kernel.asm	/^f0107d2e:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d30	obj/kern/kernel.asm	/^f0107d30:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0107d33	obj/kern/kernel.asm	/^f0107d33:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d36	obj/kern/kernel.asm	/^f0107d36:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d38	obj/kern/kernel.asm	/^f0107d38:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d3a	obj/kern/kernel.asm	/^f0107d3a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107d3f	obj/kern/kernel.asm	/^f0107d3f:	5d                   	pop    %ebp$/;"	l
f0107d40	obj/kern/kernel.asm	/^f0107d40:	c3                   	ret    $/;"	l
f0107d41	obj/kern/kernel.asm	/^f0107d41 <getint>:$/;"	l
f0107d41	obj/kern/kernel.asm	/^f0107d41:	55                   	push   %ebp$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d44	obj/kern/kernel.asm	/^f0107d44:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0107d48	obj/kern/kernel.asm	/^f0107d48:	7e 14                	jle    f0107d5e <getint+0x1d>$/;"	l
f0107d4a	obj/kern/kernel.asm	/^f0107d4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107d4d	obj/kern/kernel.asm	/^f0107d4d:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d4f	obj/kern/kernel.asm	/^f0107d4f:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
f0107d52	obj/kern/kernel.asm	/^f0107d52:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d55	obj/kern/kernel.asm	/^f0107d55:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0107d5a	obj/kern/kernel.asm	/^f0107d5a:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d5c	obj/kern/kernel.asm	/^f0107d5c:	eb 28                	jmp    f0107d86 <getint+0x45>$/;"	l
f0107d5e	obj/kern/kernel.asm	/^f0107d5e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	74 12                	je     f0107d76 <getint+0x35>$/;"	l
f0107d64	obj/kern/kernel.asm	/^f0107d64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107d67	obj/kern/kernel.asm	/^f0107d67:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d69	obj/kern/kernel.asm	/^f0107d69:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0107d6c	obj/kern/kernel.asm	/^f0107d6c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d6f	obj/kern/kernel.asm	/^f0107d6f:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d71	obj/kern/kernel.asm	/^f0107d71:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d73	obj/kern/kernel.asm	/^f0107d73:	99                   	cltd   $/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74:	eb 10                	jmp    f0107d86 <getint+0x45>$/;"	l
f0107d76	obj/kern/kernel.asm	/^f0107d76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107d79	obj/kern/kernel.asm	/^f0107d79:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d7b	obj/kern/kernel.asm	/^f0107d7b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0107d7e	obj/kern/kernel.asm	/^f0107d7e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107d83	obj/kern/kernel.asm	/^f0107d83:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d85	obj/kern/kernel.asm	/^f0107d85:	99                   	cltd   $/;"	l
f0107d86	obj/kern/kernel.asm	/^f0107d86:	5d                   	pop    %ebp$/;"	l
f0107d87	obj/kern/kernel.asm	/^f0107d87:	c3                   	ret    $/;"	l
f0107d88	obj/kern/kernel.asm	/^f0107d88 <vprintfmt>:$/;"	l
f0107d88	obj/kern/kernel.asm	/^f0107d88:	55                   	push   %ebp$/;"	l
f0107d89	obj/kern/kernel.asm	/^f0107d89:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d8b	obj/kern/kernel.asm	/^f0107d8b:	56                   	push   %esi$/;"	l
f0107d8c	obj/kern/kernel.asm	/^f0107d8c:	53                   	push   %ebx$/;"	l
f0107d8d	obj/kern/kernel.asm	/^f0107d8d:	83 ec 40             	sub    $0x40,%esp$/;"	l
f0107d90	obj/kern/kernel.asm	/^f0107d90:	eb 18                	jmp    f0107daa <vprintfmt+0x22>$/;"	l
f0107d92	obj/kern/kernel.asm	/^f0107d92:	85 db                	test   %ebx,%ebx$/;"	l
f0107d94	obj/kern/kernel.asm	/^f0107d94:	75 05                	jne    f0107d9b <vprintfmt+0x13>$/;"	l
f0107d96	obj/kern/kernel.asm	/^f0107d96:	e9 cc 03 00 00       	jmp    f0108167 <vprintfmt+0x3df>$/;"	l
f0107d9b	obj/kern/kernel.asm	/^f0107d9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107d9e	obj/kern/kernel.asm	/^f0107d9e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107da5	obj/kern/kernel.asm	/^f0107da5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	ff d0                	call   *%eax$/;"	l
f0107daa	obj/kern/kernel.asm	/^f0107daa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107dad	obj/kern/kernel.asm	/^f0107dad:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0107db0	obj/kern/kernel.asm	/^f0107db0:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f0107db3	obj/kern/kernel.asm	/^f0107db3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0107db9	obj/kern/kernel.asm	/^f0107db9:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
f0107dbc	obj/kern/kernel.asm	/^f0107dbc:	75 d4                	jne    f0107d92 <vprintfmt+0xa>$/;"	l
f0107dbe	obj/kern/kernel.asm	/^f0107dbe:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
f0107dc2	obj/kern/kernel.asm	/^f0107dc2:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0107dc9	obj/kern/kernel.asm	/^f0107dc9:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0107dd0	obj/kern/kernel.asm	/^f0107dd0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0107dd7	obj/kern/kernel.asm	/^f0107dd7:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0107dde	obj/kern/kernel.asm	/^f0107dde:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107de1	obj/kern/kernel.asm	/^f0107de1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0107de4	obj/kern/kernel.asm	/^f0107de4:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f0107de7	obj/kern/kernel.asm	/^f0107de7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107dea	obj/kern/kernel.asm	/^f0107dea:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0107ded	obj/kern/kernel.asm	/^f0107ded:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
f0107df0	obj/kern/kernel.asm	/^f0107df0:	83 f8 55             	cmp    $0x55,%eax$/;"	l
f0107df3	obj/kern/kernel.asm	/^f0107df3:	0f 87 3d 03 00 00    	ja     f0108136 <vprintfmt+0x3ae>$/;"	l
f0107df9	obj/kern/kernel.asm	/^f0107df9:	8b 04 85 2c c3 10 f0 	mov    -0xfef3cd4(,%eax,4),%eax$/;"	l
f0107e00	obj/kern/kernel.asm	/^f0107e00:	ff e0                	jmp    *%eax$/;"	l
f0107e02	obj/kern/kernel.asm	/^f0107e02:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
f0107e06	obj/kern/kernel.asm	/^f0107e06:	eb d6                	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e08	obj/kern/kernel.asm	/^f0107e08:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
f0107e0c	obj/kern/kernel.asm	/^f0107e0c:	eb d0                	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e0e	obj/kern/kernel.asm	/^f0107e0e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0107e15	obj/kern/kernel.asm	/^f0107e15:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	89 d0                	mov    %edx,%eax$/;"	l
f0107e1a	obj/kern/kernel.asm	/^f0107e1a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0107e1d	obj/kern/kernel.asm	/^f0107e1d:	01 d0                	add    %edx,%eax$/;"	l
f0107e1f	obj/kern/kernel.asm	/^f0107e1f:	01 c0                	add    %eax,%eax$/;"	l
f0107e21	obj/kern/kernel.asm	/^f0107e21:	01 d8                	add    %ebx,%eax$/;"	l
f0107e23	obj/kern/kernel.asm	/^f0107e23:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0107e26	obj/kern/kernel.asm	/^f0107e26:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107e29	obj/kern/kernel.asm	/^f0107e29:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107e2c	obj/kern/kernel.asm	/^f0107e2c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107e2f	obj/kern/kernel.asm	/^f0107e2f:	0f be d8             	movsbl %al,%ebx$/;"	l
f0107e32	obj/kern/kernel.asm	/^f0107e32:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
f0107e35	obj/kern/kernel.asm	/^f0107e35:	7e 0b                	jle    f0107e42 <vprintfmt+0xba>$/;"	l
f0107e37	obj/kern/kernel.asm	/^f0107e37:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	7f 06                	jg     f0107e42 <vprintfmt+0xba>$/;"	l
f0107e3c	obj/kern/kernel.asm	/^f0107e3c:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40:	eb d3                	jmp    f0107e15 <vprintfmt+0x8d>$/;"	l
f0107e42	obj/kern/kernel.asm	/^f0107e42:	eb 33                	jmp    f0107e77 <vprintfmt+0xef>$/;"	l
f0107e44	obj/kern/kernel.asm	/^f0107e44:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107e47	obj/kern/kernel.asm	/^f0107e47:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0107e4a	obj/kern/kernel.asm	/^f0107e4a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0107e4d	obj/kern/kernel.asm	/^f0107e4d:	8b 00                	mov    (%eax),%eax$/;"	l
f0107e4f	obj/kern/kernel.asm	/^f0107e4f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107e52	obj/kern/kernel.asm	/^f0107e52:	eb 23                	jmp    f0107e77 <vprintfmt+0xef>$/;"	l
f0107e54	obj/kern/kernel.asm	/^f0107e54:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0107e58	obj/kern/kernel.asm	/^f0107e58:	79 0c                	jns    f0107e66 <vprintfmt+0xde>$/;"	l
f0107e5a	obj/kern/kernel.asm	/^f0107e5a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0107e61	obj/kern/kernel.asm	/^f0107e61:	e9 78 ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e66	obj/kern/kernel.asm	/^f0107e66:	e9 73 ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e6b	obj/kern/kernel.asm	/^f0107e6b:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0107e72	obj/kern/kernel.asm	/^f0107e72:	e9 67 ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e77	obj/kern/kernel.asm	/^f0107e77:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0107e7b	obj/kern/kernel.asm	/^f0107e7b:	79 12                	jns    f0107e8f <vprintfmt+0x107>$/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107e80	obj/kern/kernel.asm	/^f0107e80:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107e83	obj/kern/kernel.asm	/^f0107e83:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0107e8a	obj/kern/kernel.asm	/^f0107e8a:	e9 4f ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e8f	obj/kern/kernel.asm	/^f0107e8f:	e9 4a ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e94	obj/kern/kernel.asm	/^f0107e94:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
f0107e98	obj/kern/kernel.asm	/^f0107e98:	e9 41 ff ff ff       	jmp    f0107dde <vprintfmt+0x56>$/;"	l
f0107e9d	obj/kern/kernel.asm	/^f0107e9d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107ea0	obj/kern/kernel.asm	/^f0107ea0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0107ea3	obj/kern/kernel.asm	/^f0107ea3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0107ea6	obj/kern/kernel.asm	/^f0107ea6:	8b 00                	mov    (%eax),%eax$/;"	l
f0107ea8	obj/kern/kernel.asm	/^f0107ea8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107eab	obj/kern/kernel.asm	/^f0107eab:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107eaf	obj/kern/kernel.asm	/^f0107eaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107eb5	obj/kern/kernel.asm	/^f0107eb5:	ff d0                	call   *%eax$/;"	l
f0107eb7	obj/kern/kernel.asm	/^f0107eb7:	e9 a5 02 00 00       	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0107ebc	obj/kern/kernel.asm	/^f0107ebc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107ebf	obj/kern/kernel.asm	/^f0107ebf:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0107ec2	obj/kern/kernel.asm	/^f0107ec2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0107ec5	obj/kern/kernel.asm	/^f0107ec5:	8b 18                	mov    (%eax),%ebx$/;"	l
f0107ec7	obj/kern/kernel.asm	/^f0107ec7:	85 db                	test   %ebx,%ebx$/;"	l
f0107ec9	obj/kern/kernel.asm	/^f0107ec9:	79 02                	jns    f0107ecd <vprintfmt+0x145>$/;"	l
f0107ecb	obj/kern/kernel.asm	/^f0107ecb:	f7 db                	neg    %ebx$/;"	l
f0107ecd	obj/kern/kernel.asm	/^f0107ecd:	83 fb 11             	cmp    $0x11,%ebx$/;"	l
f0107ed0	obj/kern/kernel.asm	/^f0107ed0:	7f 0b                	jg     f0107edd <vprintfmt+0x155>$/;"	l
f0107ed2	obj/kern/kernel.asm	/^f0107ed2:	8b 34 9d c0 c2 10 f0 	mov    -0xfef3d40(,%ebx,4),%esi$/;"	l
f0107ed9	obj/kern/kernel.asm	/^f0107ed9:	85 f6                	test   %esi,%esi$/;"	l
f0107edb	obj/kern/kernel.asm	/^f0107edb:	75 23                	jne    f0107f00 <vprintfmt+0x178>$/;"	l
f0107edd	obj/kern/kernel.asm	/^f0107edd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107ee1	obj/kern/kernel.asm	/^f0107ee1:	c7 44 24 08 19 c3 10 	movl   $0xf010c319,0x8(%esp)$/;"	l
f0107ee8	obj/kern/kernel.asm	/^f0107ee8:	f0 $/;"	l
f0107ee9	obj/kern/kernel.asm	/^f0107ee9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107eec	obj/kern/kernel.asm	/^f0107eec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ef0	obj/kern/kernel.asm	/^f0107ef0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ef6	obj/kern/kernel.asm	/^f0107ef6:	e8 73 02 00 00       	call   f010816e <printfmt>$/;"	l
f0107efb	obj/kern/kernel.asm	/^f0107efb:	e9 61 02 00 00       	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0107f00	obj/kern/kernel.asm	/^f0107f00:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0107f04	obj/kern/kernel.asm	/^f0107f04:	c7 44 24 08 22 c3 10 	movl   $0xf010c322,0x8(%esp)$/;"	l
f0107f0b	obj/kern/kernel.asm	/^f0107f0b:	f0 $/;"	l
f0107f0c	obj/kern/kernel.asm	/^f0107f0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107f0f	obj/kern/kernel.asm	/^f0107f0f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f13	obj/kern/kernel.asm	/^f0107f13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f16	obj/kern/kernel.asm	/^f0107f16:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107f19	obj/kern/kernel.asm	/^f0107f19:	e8 50 02 00 00       	call   f010816e <printfmt>$/;"	l
f0107f1e	obj/kern/kernel.asm	/^f0107f1e:	e9 3e 02 00 00       	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0107f23	obj/kern/kernel.asm	/^f0107f23:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107f26	obj/kern/kernel.asm	/^f0107f26:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0107f29	obj/kern/kernel.asm	/^f0107f29:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0107f2c	obj/kern/kernel.asm	/^f0107f2c:	8b 30                	mov    (%eax),%esi$/;"	l
f0107f2e	obj/kern/kernel.asm	/^f0107f2e:	85 f6                	test   %esi,%esi$/;"	l
f0107f30	obj/kern/kernel.asm	/^f0107f30:	75 05                	jne    f0107f37 <vprintfmt+0x1af>$/;"	l
f0107f32	obj/kern/kernel.asm	/^f0107f32:	be 25 c3 10 f0       	mov    $0xf010c325,%esi$/;"	l
f0107f37	obj/kern/kernel.asm	/^f0107f37:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0107f3b	obj/kern/kernel.asm	/^f0107f3b:	7e 37                	jle    f0107f74 <vprintfmt+0x1ec>$/;"	l
f0107f3d	obj/kern/kernel.asm	/^f0107f3d:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
f0107f41	obj/kern/kernel.asm	/^f0107f41:	74 31                	je     f0107f74 <vprintfmt+0x1ec>$/;"	l
f0107f43	obj/kern/kernel.asm	/^f0107f43:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107f46	obj/kern/kernel.asm	/^f0107f46:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f4a	obj/kern/kernel.asm	/^f0107f4a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107f4d	obj/kern/kernel.asm	/^f0107f4d:	e8 4c 04 00 00       	call   f010839e <strnlen>$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	29 45 e4             	sub    %eax,-0x1c(%ebp)$/;"	l
f0107f55	obj/kern/kernel.asm	/^f0107f55:	eb 17                	jmp    f0107f6e <vprintfmt+0x1e6>$/;"	l
f0107f57	obj/kern/kernel.asm	/^f0107f57:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
f0107f5b	obj/kern/kernel.asm	/^f0107f5b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107f5e	obj/kern/kernel.asm	/^f0107f5e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107f62	obj/kern/kernel.asm	/^f0107f62:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107f65	obj/kern/kernel.asm	/^f0107f65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f68	obj/kern/kernel.asm	/^f0107f68:	ff d0                	call   *%eax$/;"	l
f0107f6a	obj/kern/kernel.asm	/^f0107f6a:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0107f6e	obj/kern/kernel.asm	/^f0107f6e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0107f72	obj/kern/kernel.asm	/^f0107f72:	7f e3                	jg     f0107f57 <vprintfmt+0x1cf>$/;"	l
f0107f74	obj/kern/kernel.asm	/^f0107f74:	eb 38                	jmp    f0107fae <vprintfmt+0x226>$/;"	l
f0107f76	obj/kern/kernel.asm	/^f0107f76:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0107f7a	obj/kern/kernel.asm	/^f0107f7a:	74 1f                	je     f0107f9b <vprintfmt+0x213>$/;"	l
f0107f7c	obj/kern/kernel.asm	/^f0107f7c:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0107f7f	obj/kern/kernel.asm	/^f0107f7f:	7e 05                	jle    f0107f86 <vprintfmt+0x1fe>$/;"	l
f0107f81	obj/kern/kernel.asm	/^f0107f81:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
f0107f84	obj/kern/kernel.asm	/^f0107f84:	7e 15                	jle    f0107f9b <vprintfmt+0x213>$/;"	l
f0107f86	obj/kern/kernel.asm	/^f0107f86:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107f89	obj/kern/kernel.asm	/^f0107f89:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f8d	obj/kern/kernel.asm	/^f0107f8d:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0107f94	obj/kern/kernel.asm	/^f0107f94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f97	obj/kern/kernel.asm	/^f0107f97:	ff d0                	call   *%eax$/;"	l
f0107f99	obj/kern/kernel.asm	/^f0107f99:	eb 0f                	jmp    f0107faa <vprintfmt+0x222>$/;"	l
f0107f9b	obj/kern/kernel.asm	/^f0107f9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107f9e	obj/kern/kernel.asm	/^f0107f9e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107fa2	obj/kern/kernel.asm	/^f0107fa2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107fa5	obj/kern/kernel.asm	/^f0107fa5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107fa8	obj/kern/kernel.asm	/^f0107fa8:	ff d0                	call   *%eax$/;"	l
f0107faa	obj/kern/kernel.asm	/^f0107faa:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0107fae	obj/kern/kernel.asm	/^f0107fae:	89 f0                	mov    %esi,%eax$/;"	l
f0107fb0	obj/kern/kernel.asm	/^f0107fb0:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0107fb3	obj/kern/kernel.asm	/^f0107fb3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107fb6	obj/kern/kernel.asm	/^f0107fb6:	0f be d8             	movsbl %al,%ebx$/;"	l
f0107fb9	obj/kern/kernel.asm	/^f0107fb9:	85 db                	test   %ebx,%ebx$/;"	l
f0107fbb	obj/kern/kernel.asm	/^f0107fbb:	74 10                	je     f0107fcd <vprintfmt+0x245>$/;"	l
f0107fbd	obj/kern/kernel.asm	/^f0107fbd:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0107fc1	obj/kern/kernel.asm	/^f0107fc1:	78 b3                	js     f0107f76 <vprintfmt+0x1ee>$/;"	l
f0107fc3	obj/kern/kernel.asm	/^f0107fc3:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f0107fc7	obj/kern/kernel.asm	/^f0107fc7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0107fcb	obj/kern/kernel.asm	/^f0107fcb:	79 a9                	jns    f0107f76 <vprintfmt+0x1ee>$/;"	l
f0107fcd	obj/kern/kernel.asm	/^f0107fcd:	eb 17                	jmp    f0107fe6 <vprintfmt+0x25e>$/;"	l
f0107fcf	obj/kern/kernel.asm	/^f0107fcf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107fd2	obj/kern/kernel.asm	/^f0107fd2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107fd6	obj/kern/kernel.asm	/^f0107fd6:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0107fdd	obj/kern/kernel.asm	/^f0107fdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107fe0	obj/kern/kernel.asm	/^f0107fe0:	ff d0                	call   *%eax$/;"	l
f0107fe2	obj/kern/kernel.asm	/^f0107fe2:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0107fe6	obj/kern/kernel.asm	/^f0107fe6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0107fea	obj/kern/kernel.asm	/^f0107fea:	7f e3                	jg     f0107fcf <vprintfmt+0x247>$/;"	l
f0107fec	obj/kern/kernel.asm	/^f0107fec:	e9 70 01 00 00       	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0107ff1	obj/kern/kernel.asm	/^f0107ff1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107ff4	obj/kern/kernel.asm	/^f0107ff4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ff8	obj/kern/kernel.asm	/^f0107ff8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0107ffb	obj/kern/kernel.asm	/^f0107ffb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ffe	obj/kern/kernel.asm	/^f0107ffe:	e8 3e fd ff ff       	call   f0107d41 <getint>$/;"	l
f0108003	obj/kern/kernel.asm	/^f0108003:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108006	obj/kern/kernel.asm	/^f0108006:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0108009	obj/kern/kernel.asm	/^f0108009:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010800c	obj/kern/kernel.asm	/^f010800c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010800f	obj/kern/kernel.asm	/^f010800f:	85 d2                	test   %edx,%edx$/;"	l
f0108011	obj/kern/kernel.asm	/^f0108011:	79 26                	jns    f0108039 <vprintfmt+0x2b1>$/;"	l
f0108013	obj/kern/kernel.asm	/^f0108013:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108016	obj/kern/kernel.asm	/^f0108016:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010801a	obj/kern/kernel.asm	/^f010801a:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0108021	obj/kern/kernel.asm	/^f0108021:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108024	obj/kern/kernel.asm	/^f0108024:	ff d0                	call   *%eax$/;"	l
f0108026	obj/kern/kernel.asm	/^f0108026:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108029	obj/kern/kernel.asm	/^f0108029:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010802c	obj/kern/kernel.asm	/^f010802c:	f7 d8                	neg    %eax$/;"	l
f010802e	obj/kern/kernel.asm	/^f010802e:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0108031	obj/kern/kernel.asm	/^f0108031:	f7 da                	neg    %edx$/;"	l
f0108033	obj/kern/kernel.asm	/^f0108033:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108036	obj/kern/kernel.asm	/^f0108036:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0108039	obj/kern/kernel.asm	/^f0108039:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
f0108040	obj/kern/kernel.asm	/^f0108040:	e9 a8 00 00 00       	jmp    f01080ed <vprintfmt+0x365>$/;"	l
f0108045	obj/kern/kernel.asm	/^f0108045:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0108048	obj/kern/kernel.asm	/^f0108048:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010804c	obj/kern/kernel.asm	/^f010804c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010804f	obj/kern/kernel.asm	/^f010804f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108052	obj/kern/kernel.asm	/^f0108052:	e8 9b fc ff ff       	call   f0107cf2 <getuint>$/;"	l
f0108057	obj/kern/kernel.asm	/^f0108057:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010805a	obj/kern/kernel.asm	/^f010805a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010805d	obj/kern/kernel.asm	/^f010805d:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
f0108064	obj/kern/kernel.asm	/^f0108064:	e9 84 00 00 00       	jmp    f01080ed <vprintfmt+0x365>$/;"	l
f0108069	obj/kern/kernel.asm	/^f0108069:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010806c	obj/kern/kernel.asm	/^f010806c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108070	obj/kern/kernel.asm	/^f0108070:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0108073	obj/kern/kernel.asm	/^f0108073:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108076	obj/kern/kernel.asm	/^f0108076:	e8 77 fc ff ff       	call   f0107cf2 <getuint>$/;"	l
f010807b	obj/kern/kernel.asm	/^f010807b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010807e	obj/kern/kernel.asm	/^f010807e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0108081	obj/kern/kernel.asm	/^f0108081:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
f0108088	obj/kern/kernel.asm	/^f0108088:	eb 63                	jmp    f01080ed <vprintfmt+0x365>$/;"	l
f010808a	obj/kern/kernel.asm	/^f010808a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010808d	obj/kern/kernel.asm	/^f010808d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108091	obj/kern/kernel.asm	/^f0108091:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0108098	obj/kern/kernel.asm	/^f0108098:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010809b	obj/kern/kernel.asm	/^f010809b:	ff d0                	call   *%eax$/;"	l
f010809d	obj/kern/kernel.asm	/^f010809d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01080a0	obj/kern/kernel.asm	/^f01080a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01080a4	obj/kern/kernel.asm	/^f01080a4:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01080ab	obj/kern/kernel.asm	/^f01080ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01080ae	obj/kern/kernel.asm	/^f01080ae:	ff d0                	call   *%eax$/;"	l
f01080b0	obj/kern/kernel.asm	/^f01080b0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01080b3	obj/kern/kernel.asm	/^f01080b3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01080b6	obj/kern/kernel.asm	/^f01080b6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01080b9	obj/kern/kernel.asm	/^f01080b9:	8b 00                	mov    (%eax),%eax$/;"	l
f01080bb	obj/kern/kernel.asm	/^f01080bb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01080be	obj/kern/kernel.asm	/^f01080be:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01080c5	obj/kern/kernel.asm	/^f01080c5:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
f01080cc	obj/kern/kernel.asm	/^f01080cc:	eb 1f                	jmp    f01080ed <vprintfmt+0x365>$/;"	l
f01080ce	obj/kern/kernel.asm	/^f01080ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01080d1	obj/kern/kernel.asm	/^f01080d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01080d5	obj/kern/kernel.asm	/^f01080d5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01080d8	obj/kern/kernel.asm	/^f01080d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01080db	obj/kern/kernel.asm	/^f01080db:	e8 12 fc ff ff       	call   f0107cf2 <getuint>$/;"	l
f01080e0	obj/kern/kernel.asm	/^f01080e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01080e3	obj/kern/kernel.asm	/^f01080e3:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01080e6	obj/kern/kernel.asm	/^f01080e6:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
f01080ed	obj/kern/kernel.asm	/^f01080ed:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
f01080f1	obj/kern/kernel.asm	/^f01080f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01080f4	obj/kern/kernel.asm	/^f01080f4:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01080f8	obj/kern/kernel.asm	/^f01080f8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01080fb	obj/kern/kernel.asm	/^f01080fb:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01080ff	obj/kern/kernel.asm	/^f01080ff:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0108103	obj/kern/kernel.asm	/^f0108103:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108106	obj/kern/kernel.asm	/^f0108106:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0108109	obj/kern/kernel.asm	/^f0108109:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010810d	obj/kern/kernel.asm	/^f010810d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0108111	obj/kern/kernel.asm	/^f0108111:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108114	obj/kern/kernel.asm	/^f0108114:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108118	obj/kern/kernel.asm	/^f0108118:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010811b	obj/kern/kernel.asm	/^f010811b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010811e	obj/kern/kernel.asm	/^f010811e:	e8 f1 fa ff ff       	call   f0107c14 <printnum>$/;"	l
f0108123	obj/kern/kernel.asm	/^f0108123:	eb 3c                	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0108125	obj/kern/kernel.asm	/^f0108125:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108128	obj/kern/kernel.asm	/^f0108128:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010812c	obj/kern/kernel.asm	/^f010812c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010812f	obj/kern/kernel.asm	/^f010812f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108132	obj/kern/kernel.asm	/^f0108132:	ff d0                	call   *%eax$/;"	l
f0108134	obj/kern/kernel.asm	/^f0108134:	eb 2b                	jmp    f0108161 <vprintfmt+0x3d9>$/;"	l
f0108136	obj/kern/kernel.asm	/^f0108136:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108139	obj/kern/kernel.asm	/^f0108139:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010813d	obj/kern/kernel.asm	/^f010813d:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0108144	obj/kern/kernel.asm	/^f0108144:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108147	obj/kern/kernel.asm	/^f0108147:	ff d0                	call   *%eax$/;"	l
f0108149	obj/kern/kernel.asm	/^f0108149:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f010814d	obj/kern/kernel.asm	/^f010814d:	eb 04                	jmp    f0108153 <vprintfmt+0x3cb>$/;"	l
f010814f	obj/kern/kernel.asm	/^f010814f:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f0108153	obj/kern/kernel.asm	/^f0108153:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108156	obj/kern/kernel.asm	/^f0108156:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0108159	obj/kern/kernel.asm	/^f0108159:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010815c	obj/kern/kernel.asm	/^f010815c:	3c 25                	cmp    $0x25,%al$/;"	l
f010815e	obj/kern/kernel.asm	/^f010815e:	75 ef                	jne    f010814f <vprintfmt+0x3c7>$/;"	l
f0108160	obj/kern/kernel.asm	/^f0108160:	90                   	nop$/;"	l
f0108161	obj/kern/kernel.asm	/^f0108161:	90                   	nop$/;"	l
f0108162	obj/kern/kernel.asm	/^f0108162:	e9 43 fc ff ff       	jmp    f0107daa <vprintfmt+0x22>$/;"	l
f0108167	obj/kern/kernel.asm	/^f0108167:	83 c4 40             	add    $0x40,%esp$/;"	l
f010816a	obj/kern/kernel.asm	/^f010816a:	5b                   	pop    %ebx$/;"	l
f010816b	obj/kern/kernel.asm	/^f010816b:	5e                   	pop    %esi$/;"	l
f010816c	obj/kern/kernel.asm	/^f010816c:	5d                   	pop    %ebp$/;"	l
f010816d	obj/kern/kernel.asm	/^f010816d:	c3                   	ret    $/;"	l
f010816e	obj/kern/kernel.asm	/^f010816e <printfmt>:$/;"	l
f010816e	obj/kern/kernel.asm	/^f010816e:	55                   	push   %ebp$/;"	l
f010816f	obj/kern/kernel.asm	/^f010816f:	89 e5                	mov    %esp,%ebp$/;"	l
f0108171	obj/kern/kernel.asm	/^f0108171:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0108174	obj/kern/kernel.asm	/^f0108174:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0108177	obj/kern/kernel.asm	/^f0108177:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010817a	obj/kern/kernel.asm	/^f010817a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010817d	obj/kern/kernel.asm	/^f010817d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0108181	obj/kern/kernel.asm	/^f0108181:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108184	obj/kern/kernel.asm	/^f0108184:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108188	obj/kern/kernel.asm	/^f0108188:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010818b	obj/kern/kernel.asm	/^f010818b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010818f	obj/kern/kernel.asm	/^f010818f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108192	obj/kern/kernel.asm	/^f0108192:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108195	obj/kern/kernel.asm	/^f0108195:	e8 ee fb ff ff       	call   f0107d88 <vprintfmt>$/;"	l
f010819a	obj/kern/kernel.asm	/^f010819a:	c9                   	leave  $/;"	l
f010819b	obj/kern/kernel.asm	/^f010819b:	c3                   	ret    $/;"	l
f010819c	obj/kern/kernel.asm	/^f010819c <sprintputch>:$/;"	l
f010819c	obj/kern/kernel.asm	/^f010819c:	55                   	push   %ebp$/;"	l
f010819d	obj/kern/kernel.asm	/^f010819d:	89 e5                	mov    %esp,%ebp$/;"	l
f010819f	obj/kern/kernel.asm	/^f010819f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081a2	obj/kern/kernel.asm	/^f01081a2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01081a5	obj/kern/kernel.asm	/^f01081a5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01081a8	obj/kern/kernel.asm	/^f01081a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081ab	obj/kern/kernel.asm	/^f01081ab:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f01081ae	obj/kern/kernel.asm	/^f01081ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081b1	obj/kern/kernel.asm	/^f01081b1:	8b 10                	mov    (%eax),%edx$/;"	l
f01081b3	obj/kern/kernel.asm	/^f01081b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081b6	obj/kern/kernel.asm	/^f01081b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01081b9	obj/kern/kernel.asm	/^f01081b9:	39 c2                	cmp    %eax,%edx$/;"	l
f01081bb	obj/kern/kernel.asm	/^f01081bb:	73 12                	jae    f01081cf <sprintputch+0x33>$/;"	l
f01081bd	obj/kern/kernel.asm	/^f01081bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081c0	obj/kern/kernel.asm	/^f01081c0:	8b 00                	mov    (%eax),%eax$/;"	l
f01081c2	obj/kern/kernel.asm	/^f01081c2:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f01081c5	obj/kern/kernel.asm	/^f01081c5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01081c8	obj/kern/kernel.asm	/^f01081c8:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01081ca	obj/kern/kernel.asm	/^f01081ca:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01081cd	obj/kern/kernel.asm	/^f01081cd:	88 10                	mov    %dl,(%eax)$/;"	l
f01081cf	obj/kern/kernel.asm	/^f01081cf:	5d                   	pop    %ebp$/;"	l
f01081d0	obj/kern/kernel.asm	/^f01081d0:	c3                   	ret    $/;"	l
f01081d1	obj/kern/kernel.asm	/^f01081d1 <vsnprintf>:$/;"	l
f01081d1	obj/kern/kernel.asm	/^f01081d1:	55                   	push   %ebp$/;"	l
f01081d2	obj/kern/kernel.asm	/^f01081d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01081d4	obj/kern/kernel.asm	/^f01081d4:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01081d7	obj/kern/kernel.asm	/^f01081d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01081da	obj/kern/kernel.asm	/^f01081da:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01081dd	obj/kern/kernel.asm	/^f01081dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01081e0	obj/kern/kernel.asm	/^f01081e0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01081e3	obj/kern/kernel.asm	/^f01081e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01081e6	obj/kern/kernel.asm	/^f01081e6:	01 d0                	add    %edx,%eax$/;"	l
f01081e8	obj/kern/kernel.asm	/^f01081e8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01081eb	obj/kern/kernel.asm	/^f01081eb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01081f2	obj/kern/kernel.asm	/^f01081f2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01081f6	obj/kern/kernel.asm	/^f01081f6:	74 06                	je     f01081fe <vsnprintf+0x2d>$/;"	l
f01081f8	obj/kern/kernel.asm	/^f01081f8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01081fc	obj/kern/kernel.asm	/^f01081fc:	7f 07                	jg     f0108205 <vsnprintf+0x34>$/;"	l
f01081fe	obj/kern/kernel.asm	/^f01081fe:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0108203	obj/kern/kernel.asm	/^f0108203:	eb 2a                	jmp    f010822f <vsnprintf+0x5e>$/;"	l
f0108205	obj/kern/kernel.asm	/^f0108205:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0108208	obj/kern/kernel.asm	/^f0108208:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010820c	obj/kern/kernel.asm	/^f010820c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010820f	obj/kern/kernel.asm	/^f010820f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108213	obj/kern/kernel.asm	/^f0108213:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0108216	obj/kern/kernel.asm	/^f0108216:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010821a	obj/kern/kernel.asm	/^f010821a:	c7 04 24 9c 81 10 f0 	movl   $0xf010819c,(%esp)$/;"	l
f0108221	obj/kern/kernel.asm	/^f0108221:	e8 62 fb ff ff       	call   f0107d88 <vprintfmt>$/;"	l
f0108226	obj/kern/kernel.asm	/^f0108226:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108229	obj/kern/kernel.asm	/^f0108229:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010822c	obj/kern/kernel.asm	/^f010822c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010822f	obj/kern/kernel.asm	/^f010822f:	c9                   	leave  $/;"	l
f0108230	obj/kern/kernel.asm	/^f0108230:	c3                   	ret    $/;"	l
f0108231	obj/kern/kernel.asm	/^f0108231 <snprintf>:$/;"	l
f0108231	obj/kern/kernel.asm	/^f0108231:	55                   	push   %ebp$/;"	l
f0108232	obj/kern/kernel.asm	/^f0108232:	89 e5                	mov    %esp,%ebp$/;"	l
f0108234	obj/kern/kernel.asm	/^f0108234:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0108237	obj/kern/kernel.asm	/^f0108237:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010823a	obj/kern/kernel.asm	/^f010823a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010823d	obj/kern/kernel.asm	/^f010823d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108240	obj/kern/kernel.asm	/^f0108240:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0108244	obj/kern/kernel.asm	/^f0108244:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108247	obj/kern/kernel.asm	/^f0108247:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010824b	obj/kern/kernel.asm	/^f010824b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010824e	obj/kern/kernel.asm	/^f010824e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108252	obj/kern/kernel.asm	/^f0108252:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108255	obj/kern/kernel.asm	/^f0108255:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108258	obj/kern/kernel.asm	/^f0108258:	e8 74 ff ff ff       	call   f01081d1 <vsnprintf>$/;"	l
f010825d	obj/kern/kernel.asm	/^f010825d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0108260	obj/kern/kernel.asm	/^f0108260:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108263	obj/kern/kernel.asm	/^f0108263:	c9                   	leave  $/;"	l
f0108264	obj/kern/kernel.asm	/^f0108264:	c3                   	ret    $/;"	l
f0108265	obj/kern/kernel.asm	/^f0108265 <readline>:$/;"	l
f0108265	obj/kern/kernel.asm	/^f0108265:	55                   	push   %ebp$/;"	l
f0108266	obj/kern/kernel.asm	/^f0108266:	89 e5                	mov    %esp,%ebp$/;"	l
f0108268	obj/kern/kernel.asm	/^f0108268:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010826b	obj/kern/kernel.asm	/^f010826b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010826f	obj/kern/kernel.asm	/^f010826f:	74 13                	je     f0108284 <readline+0x1f>$/;"	l
f0108271	obj/kern/kernel.asm	/^f0108271:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108274	obj/kern/kernel.asm	/^f0108274:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108278	obj/kern/kernel.asm	/^f0108278:	c7 04 24 84 c4 10 f0 	movl   $0xf010c484,(%esp)$/;"	l
f010827f	obj/kern/kernel.asm	/^f010827f:	e8 bb d0 ff ff       	call   f010533f <cprintf>$/;"	l
f0108284	obj/kern/kernel.asm	/^f0108284:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010828b	obj/kern/kernel.asm	/^f010828b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0108292	obj/kern/kernel.asm	/^f0108292:	e8 59 89 ff ff       	call   f0100bf0 <iscons>$/;"	l
f0108297	obj/kern/kernel.asm	/^f0108297:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010829a	obj/kern/kernel.asm	/^f010829a:	e8 38 89 ff ff       	call   f0100bd7 <getchar>$/;"	l
f010829f	obj/kern/kernel.asm	/^f010829f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01082a2	obj/kern/kernel.asm	/^f01082a2:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
f01082a6	obj/kern/kernel.asm	/^f01082a6:	75 12                	jne    f01082ba <readline+0x55>$/;"	l
f01082a8	obj/kern/kernel.asm	/^f01082a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01082ab	obj/kern/kernel.asm	/^f01082ab:	a2 e0 0a 2f f0       	mov    %al,0xf02f0ae0$/;"	l
f01082b0	obj/kern/kernel.asm	/^f01082b0:	b8 e0 0a 2f f0       	mov    $0xf02f0ae0,%eax$/;"	l
f01082b5	obj/kern/kernel.asm	/^f01082b5:	e9 bc 00 00 00       	jmp    f0108376 <readline+0x111>$/;"	l
f01082ba	obj/kern/kernel.asm	/^f01082ba:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01082be	obj/kern/kernel.asm	/^f01082be:	79 23                	jns    f01082e3 <readline+0x7e>$/;"	l
f01082c0	obj/kern/kernel.asm	/^f01082c0:	83 7d ec f8          	cmpl   $0xfffffff8,-0x14(%ebp)$/;"	l
f01082c4	obj/kern/kernel.asm	/^f01082c4:	74 13                	je     f01082d9 <readline+0x74>$/;"	l
f01082c6	obj/kern/kernel.asm	/^f01082c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01082c9	obj/kern/kernel.asm	/^f01082c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01082cd	obj/kern/kernel.asm	/^f01082cd:	c7 04 24 87 c4 10 f0 	movl   $0xf010c487,(%esp)$/;"	l
f01082d4	obj/kern/kernel.asm	/^f01082d4:	e8 66 d0 ff ff       	call   f010533f <cprintf>$/;"	l
f01082d9	obj/kern/kernel.asm	/^f01082d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01082de	obj/kern/kernel.asm	/^f01082de:	e9 93 00 00 00       	jmp    f0108376 <readline+0x111>$/;"	l
f01082e3	obj/kern/kernel.asm	/^f01082e3:	83 7d ec 08          	cmpl   $0x8,-0x14(%ebp)$/;"	l
f01082e7	obj/kern/kernel.asm	/^f01082e7:	74 06                	je     f01082ef <readline+0x8a>$/;"	l
f01082e9	obj/kern/kernel.asm	/^f01082e9:	83 7d ec 7f          	cmpl   $0x7f,-0x14(%ebp)$/;"	l
f01082ed	obj/kern/kernel.asm	/^f01082ed:	75 1e                	jne    f010830d <readline+0xa8>$/;"	l
f01082ef	obj/kern/kernel.asm	/^f01082ef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01082f3	obj/kern/kernel.asm	/^f01082f3:	7e 18                	jle    f010830d <readline+0xa8>$/;"	l
f01082f5	obj/kern/kernel.asm	/^f01082f5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01082f9	obj/kern/kernel.asm	/^f01082f9:	74 0c                	je     f0108307 <readline+0xa2>$/;"	l
f01082fb	obj/kern/kernel.asm	/^f01082fb:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0108302	obj/kern/kernel.asm	/^f0108302:	e8 bd 88 ff ff       	call   f0100bc4 <cputchar>$/;"	l
f0108307	obj/kern/kernel.asm	/^f0108307:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
f010830b	obj/kern/kernel.asm	/^f010830b:	eb 64                	jmp    f0108371 <readline+0x10c>$/;"	l
f010830d	obj/kern/kernel.asm	/^f010830d:	83 7d ec 1f          	cmpl   $0x1f,-0x14(%ebp)$/;"	l
f0108311	obj/kern/kernel.asm	/^f0108311:	7e 2e                	jle    f0108341 <readline+0xdc>$/;"	l
f0108313	obj/kern/kernel.asm	/^f0108313:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
f010831a	obj/kern/kernel.asm	/^f010831a:	7f 25                	jg     f0108341 <readline+0xdc>$/;"	l
f010831c	obj/kern/kernel.asm	/^f010831c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0108320	obj/kern/kernel.asm	/^f0108320:	74 0b                	je     f010832d <readline+0xc8>$/;"	l
f0108322	obj/kern/kernel.asm	/^f0108322:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108325	obj/kern/kernel.asm	/^f0108325:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108328	obj/kern/kernel.asm	/^f0108328:	e8 97 88 ff ff       	call   f0100bc4 <cputchar>$/;"	l
f010832d	obj/kern/kernel.asm	/^f010832d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108330	obj/kern/kernel.asm	/^f0108330:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0108333	obj/kern/kernel.asm	/^f0108333:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0108336	obj/kern/kernel.asm	/^f0108336:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0108339	obj/kern/kernel.asm	/^f0108339:	88 90 e0 0a 2f f0    	mov    %dl,-0xfd0f520(%eax)$/;"	l
f010833f	obj/kern/kernel.asm	/^f010833f:	eb 30                	jmp    f0108371 <readline+0x10c>$/;"	l
f0108341	obj/kern/kernel.asm	/^f0108341:	83 7d ec 0a          	cmpl   $0xa,-0x14(%ebp)$/;"	l
f0108345	obj/kern/kernel.asm	/^f0108345:	74 06                	je     f010834d <readline+0xe8>$/;"	l
f0108347	obj/kern/kernel.asm	/^f0108347:	83 7d ec 0d          	cmpl   $0xd,-0x14(%ebp)$/;"	l
f010834b	obj/kern/kernel.asm	/^f010834b:	75 24                	jne    f0108371 <readline+0x10c>$/;"	l
f010834d	obj/kern/kernel.asm	/^f010834d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0108351	obj/kern/kernel.asm	/^f0108351:	74 0c                	je     f010835f <readline+0xfa>$/;"	l
f0108353	obj/kern/kernel.asm	/^f0108353:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f010835a	obj/kern/kernel.asm	/^f010835a:	e8 65 88 ff ff       	call   f0100bc4 <cputchar>$/;"	l
f010835f	obj/kern/kernel.asm	/^f010835f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108362	obj/kern/kernel.asm	/^f0108362:	05 e0 0a 2f f0       	add    $0xf02f0ae0,%eax$/;"	l
f0108367	obj/kern/kernel.asm	/^f0108367:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010836a	obj/kern/kernel.asm	/^f010836a:	b8 e0 0a 2f f0       	mov    $0xf02f0ae0,%eax$/;"	l
f010836f	obj/kern/kernel.asm	/^f010836f:	eb 05                	jmp    f0108376 <readline+0x111>$/;"	l
f0108371	obj/kern/kernel.asm	/^f0108371:	e9 24 ff ff ff       	jmp    f010829a <readline+0x35>$/;"	l
f0108376	obj/kern/kernel.asm	/^f0108376:	c9                   	leave  $/;"	l
f0108377	obj/kern/kernel.asm	/^f0108377:	c3                   	ret    $/;"	l
f0108378	obj/kern/kernel.asm	/^f0108378 <strlen>:$/;"	l
f0108378	obj/kern/kernel.asm	/^f0108378:	55                   	push   %ebp$/;"	l
f0108379	obj/kern/kernel.asm	/^f0108379:	89 e5                	mov    %esp,%ebp$/;"	l
f010837b	obj/kern/kernel.asm	/^f010837b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010837e	obj/kern/kernel.asm	/^f010837e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0108385	obj/kern/kernel.asm	/^f0108385:	eb 08                	jmp    f010838f <strlen+0x17>$/;"	l
f0108387	obj/kern/kernel.asm	/^f0108387:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f010838b	obj/kern/kernel.asm	/^f010838b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010838f	obj/kern/kernel.asm	/^f010838f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108392	obj/kern/kernel.asm	/^f0108392:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108395	obj/kern/kernel.asm	/^f0108395:	84 c0                	test   %al,%al$/;"	l
f0108397	obj/kern/kernel.asm	/^f0108397:	75 ee                	jne    f0108387 <strlen+0xf>$/;"	l
f0108399	obj/kern/kernel.asm	/^f0108399:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010839c	obj/kern/kernel.asm	/^f010839c:	c9                   	leave  $/;"	l
f010839d	obj/kern/kernel.asm	/^f010839d:	c3                   	ret    $/;"	l
f010839e	obj/kern/kernel.asm	/^f010839e <strnlen>:$/;"	l
f010839e	obj/kern/kernel.asm	/^f010839e:	55                   	push   %ebp$/;"	l
f010839f	obj/kern/kernel.asm	/^f010839f:	89 e5                	mov    %esp,%ebp$/;"	l
f01083a1	obj/kern/kernel.asm	/^f01083a1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01083a4	obj/kern/kernel.asm	/^f01083a4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f01083ab	obj/kern/kernel.asm	/^f01083ab:	eb 0c                	jmp    f01083b9 <strnlen+0x1b>$/;"	l
f01083ad	obj/kern/kernel.asm	/^f01083ad:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f01083b1	obj/kern/kernel.asm	/^f01083b1:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01083b5	obj/kern/kernel.asm	/^f01083b5:	83 6d 0c 01          	subl   $0x1,0xc(%ebp)$/;"	l
f01083b9	obj/kern/kernel.asm	/^f01083b9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01083bd	obj/kern/kernel.asm	/^f01083bd:	74 0a                	je     f01083c9 <strnlen+0x2b>$/;"	l
f01083bf	obj/kern/kernel.asm	/^f01083bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01083c2	obj/kern/kernel.asm	/^f01083c2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01083c5	obj/kern/kernel.asm	/^f01083c5:	84 c0                	test   %al,%al$/;"	l
f01083c7	obj/kern/kernel.asm	/^f01083c7:	75 e4                	jne    f01083ad <strnlen+0xf>$/;"	l
f01083c9	obj/kern/kernel.asm	/^f01083c9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01083cc	obj/kern/kernel.asm	/^f01083cc:	c9                   	leave  $/;"	l
f01083cd	obj/kern/kernel.asm	/^f01083cd:	c3                   	ret    $/;"	l
f01083ce	obj/kern/kernel.asm	/^f01083ce <strcpy>:$/;"	l
f01083ce	obj/kern/kernel.asm	/^f01083ce:	55                   	push   %ebp$/;"	l
f01083cf	obj/kern/kernel.asm	/^f01083cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01083d1	obj/kern/kernel.asm	/^f01083d1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01083d4	obj/kern/kernel.asm	/^f01083d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01083d7	obj/kern/kernel.asm	/^f01083d7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01083da	obj/kern/kernel.asm	/^f01083da:	90                   	nop$/;"	l
f01083db	obj/kern/kernel.asm	/^f01083db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01083de	obj/kern/kernel.asm	/^f01083de:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01083e1	obj/kern/kernel.asm	/^f01083e1:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f01083e4	obj/kern/kernel.asm	/^f01083e4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01083e7	obj/kern/kernel.asm	/^f01083e7:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01083ea	obj/kern/kernel.asm	/^f01083ea:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
f01083ed	obj/kern/kernel.asm	/^f01083ed:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01083f0	obj/kern/kernel.asm	/^f01083f0:	88 10                	mov    %dl,(%eax)$/;"	l
f01083f2	obj/kern/kernel.asm	/^f01083f2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01083f5	obj/kern/kernel.asm	/^f01083f5:	84 c0                	test   %al,%al$/;"	l
f01083f7	obj/kern/kernel.asm	/^f01083f7:	75 e2                	jne    f01083db <strcpy+0xd>$/;"	l
f01083f9	obj/kern/kernel.asm	/^f01083f9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01083fc	obj/kern/kernel.asm	/^f01083fc:	c9                   	leave  $/;"	l
f01083fd	obj/kern/kernel.asm	/^f01083fd:	c3                   	ret    $/;"	l
f01083fe	obj/kern/kernel.asm	/^f01083fe <strcat>:$/;"	l
f01083fe	obj/kern/kernel.asm	/^f01083fe:	55                   	push   %ebp$/;"	l
f01083ff	obj/kern/kernel.asm	/^f01083ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0108401	obj/kern/kernel.asm	/^f0108401:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0108404	obj/kern/kernel.asm	/^f0108404:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108407	obj/kern/kernel.asm	/^f0108407:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010840a	obj/kern/kernel.asm	/^f010840a:	e8 69 ff ff ff       	call   f0108378 <strlen>$/;"	l
f010840f	obj/kern/kernel.asm	/^f010840f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0108412	obj/kern/kernel.asm	/^f0108412:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f0108415	obj/kern/kernel.asm	/^f0108415:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108418	obj/kern/kernel.asm	/^f0108418:	01 c2                	add    %eax,%edx$/;"	l
f010841a	obj/kern/kernel.asm	/^f010841a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010841d	obj/kern/kernel.asm	/^f010841d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108421	obj/kern/kernel.asm	/^f0108421:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0108424	obj/kern/kernel.asm	/^f0108424:	e8 a5 ff ff ff       	call   f01083ce <strcpy>$/;"	l
f0108429	obj/kern/kernel.asm	/^f0108429:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010842c	obj/kern/kernel.asm	/^f010842c:	c9                   	leave  $/;"	l
f010842d	obj/kern/kernel.asm	/^f010842d:	c3                   	ret    $/;"	l
f010842e	obj/kern/kernel.asm	/^f010842e <strncpy>:$/;"	l
f010842e	obj/kern/kernel.asm	/^f010842e:	55                   	push   %ebp$/;"	l
f010842f	obj/kern/kernel.asm	/^f010842f:	89 e5                	mov    %esp,%ebp$/;"	l
f0108431	obj/kern/kernel.asm	/^f0108431:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0108434	obj/kern/kernel.asm	/^f0108434:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108437	obj/kern/kernel.asm	/^f0108437:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f010843a	obj/kern/kernel.asm	/^f010843a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0108441	obj/kern/kernel.asm	/^f0108441:	eb 23                	jmp    f0108466 <strncpy+0x38>$/;"	l
f0108443	obj/kern/kernel.asm	/^f0108443:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108446	obj/kern/kernel.asm	/^f0108446:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0108449	obj/kern/kernel.asm	/^f0108449:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f010844c	obj/kern/kernel.asm	/^f010844c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010844f	obj/kern/kernel.asm	/^f010844f:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0108452	obj/kern/kernel.asm	/^f0108452:	88 10                	mov    %dl,(%eax)$/;"	l
f0108454	obj/kern/kernel.asm	/^f0108454:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108457	obj/kern/kernel.asm	/^f0108457:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010845a	obj/kern/kernel.asm	/^f010845a:	84 c0                	test   %al,%al$/;"	l
f010845c	obj/kern/kernel.asm	/^f010845c:	74 04                	je     f0108462 <strncpy+0x34>$/;"	l
f010845e	obj/kern/kernel.asm	/^f010845e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0108462	obj/kern/kernel.asm	/^f0108462:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0108466	obj/kern/kernel.asm	/^f0108466:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0108469	obj/kern/kernel.asm	/^f0108469:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f010846c	obj/kern/kernel.asm	/^f010846c:	72 d5                	jb     f0108443 <strncpy+0x15>$/;"	l
f010846e	obj/kern/kernel.asm	/^f010846e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0108471	obj/kern/kernel.asm	/^f0108471:	c9                   	leave  $/;"	l
f0108472	obj/kern/kernel.asm	/^f0108472:	c3                   	ret    $/;"	l
f0108473	obj/kern/kernel.asm	/^f0108473 <strlcpy>:$/;"	l
f0108473	obj/kern/kernel.asm	/^f0108473:	55                   	push   %ebp$/;"	l
f0108474	obj/kern/kernel.asm	/^f0108474:	89 e5                	mov    %esp,%ebp$/;"	l
f0108476	obj/kern/kernel.asm	/^f0108476:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0108479	obj/kern/kernel.asm	/^f0108479:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010847c	obj/kern/kernel.asm	/^f010847c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010847f	obj/kern/kernel.asm	/^f010847f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108483	obj/kern/kernel.asm	/^f0108483:	74 33                	je     f01084b8 <strlcpy+0x45>$/;"	l
f0108485	obj/kern/kernel.asm	/^f0108485:	eb 17                	jmp    f010849e <strlcpy+0x2b>$/;"	l
f0108487	obj/kern/kernel.asm	/^f0108487:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010848a	obj/kern/kernel.asm	/^f010848a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010848d	obj/kern/kernel.asm	/^f010848d:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f0108490	obj/kern/kernel.asm	/^f0108490:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0108493	obj/kern/kernel.asm	/^f0108493:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0108496	obj/kern/kernel.asm	/^f0108496:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
f0108499	obj/kern/kernel.asm	/^f0108499:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010849c	obj/kern/kernel.asm	/^f010849c:	88 10                	mov    %dl,(%eax)$/;"	l
f010849e	obj/kern/kernel.asm	/^f010849e:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f01084a2	obj/kern/kernel.asm	/^f01084a2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01084a6	obj/kern/kernel.asm	/^f01084a6:	74 0a                	je     f01084b2 <strlcpy+0x3f>$/;"	l
f01084a8	obj/kern/kernel.asm	/^f01084a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01084ab	obj/kern/kernel.asm	/^f01084ab:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01084ae	obj/kern/kernel.asm	/^f01084ae:	84 c0                	test   %al,%al$/;"	l
f01084b0	obj/kern/kernel.asm	/^f01084b0:	75 d5                	jne    f0108487 <strlcpy+0x14>$/;"	l
f01084b2	obj/kern/kernel.asm	/^f01084b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01084b5	obj/kern/kernel.asm	/^f01084b5:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01084b8	obj/kern/kernel.asm	/^f01084b8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01084bb	obj/kern/kernel.asm	/^f01084bb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01084be	obj/kern/kernel.asm	/^f01084be:	29 c2                	sub    %eax,%edx$/;"	l
f01084c0	obj/kern/kernel.asm	/^f01084c0:	89 d0                	mov    %edx,%eax$/;"	l
f01084c2	obj/kern/kernel.asm	/^f01084c2:	c9                   	leave  $/;"	l
f01084c3	obj/kern/kernel.asm	/^f01084c3:	c3                   	ret    $/;"	l
f01084c4	obj/kern/kernel.asm	/^f01084c4 <strcmp>:$/;"	l
f01084c4	obj/kern/kernel.asm	/^f01084c4:	55                   	push   %ebp$/;"	l
f01084c5	obj/kern/kernel.asm	/^f01084c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01084c7	obj/kern/kernel.asm	/^f01084c7:	eb 08                	jmp    f01084d1 <strcmp+0xd>$/;"	l
f01084c9	obj/kern/kernel.asm	/^f01084c9:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01084cd	obj/kern/kernel.asm	/^f01084cd:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01084d1	obj/kern/kernel.asm	/^f01084d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01084d4	obj/kern/kernel.asm	/^f01084d4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01084d7	obj/kern/kernel.asm	/^f01084d7:	84 c0                	test   %al,%al$/;"	l
f01084d9	obj/kern/kernel.asm	/^f01084d9:	74 10                	je     f01084eb <strcmp+0x27>$/;"	l
f01084db	obj/kern/kernel.asm	/^f01084db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01084de	obj/kern/kernel.asm	/^f01084de:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01084e1	obj/kern/kernel.asm	/^f01084e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01084e4	obj/kern/kernel.asm	/^f01084e4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01084e7	obj/kern/kernel.asm	/^f01084e7:	38 c2                	cmp    %al,%dl$/;"	l
f01084e9	obj/kern/kernel.asm	/^f01084e9:	74 de                	je     f01084c9 <strcmp+0x5>$/;"	l
f01084eb	obj/kern/kernel.asm	/^f01084eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01084ee	obj/kern/kernel.asm	/^f01084ee:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01084f1	obj/kern/kernel.asm	/^f01084f1:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01084f4	obj/kern/kernel.asm	/^f01084f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01084f7	obj/kern/kernel.asm	/^f01084f7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01084fa	obj/kern/kernel.asm	/^f01084fa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01084fd	obj/kern/kernel.asm	/^f01084fd:	29 c2                	sub    %eax,%edx$/;"	l
f01084ff	obj/kern/kernel.asm	/^f01084ff:	89 d0                	mov    %edx,%eax$/;"	l
f0108501	obj/kern/kernel.asm	/^f0108501:	5d                   	pop    %ebp$/;"	l
f0108502	obj/kern/kernel.asm	/^f0108502:	c3                   	ret    $/;"	l
f0108503	obj/kern/kernel.asm	/^f0108503 <strncmp>:$/;"	l
f0108503	obj/kern/kernel.asm	/^f0108503:	55                   	push   %ebp$/;"	l
f0108504	obj/kern/kernel.asm	/^f0108504:	89 e5                	mov    %esp,%ebp$/;"	l
f0108506	obj/kern/kernel.asm	/^f0108506:	eb 0c                	jmp    f0108514 <strncmp+0x11>$/;"	l
f0108508	obj/kern/kernel.asm	/^f0108508:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f010850c	obj/kern/kernel.asm	/^f010850c:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0108510	obj/kern/kernel.asm	/^f0108510:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0108514	obj/kern/kernel.asm	/^f0108514:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108518	obj/kern/kernel.asm	/^f0108518:	74 1a                	je     f0108534 <strncmp+0x31>$/;"	l
f010851a	obj/kern/kernel.asm	/^f010851a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010851d	obj/kern/kernel.asm	/^f010851d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108520	obj/kern/kernel.asm	/^f0108520:	84 c0                	test   %al,%al$/;"	l
f0108522	obj/kern/kernel.asm	/^f0108522:	74 10                	je     f0108534 <strncmp+0x31>$/;"	l
f0108524	obj/kern/kernel.asm	/^f0108524:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108527	obj/kern/kernel.asm	/^f0108527:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010852a	obj/kern/kernel.asm	/^f010852a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010852d	obj/kern/kernel.asm	/^f010852d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108530	obj/kern/kernel.asm	/^f0108530:	38 c2                	cmp    %al,%dl$/;"	l
f0108532	obj/kern/kernel.asm	/^f0108532:	74 d4                	je     f0108508 <strncmp+0x5>$/;"	l
f0108534	obj/kern/kernel.asm	/^f0108534:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108538	obj/kern/kernel.asm	/^f0108538:	75 07                	jne    f0108541 <strncmp+0x3e>$/;"	l
f010853a	obj/kern/kernel.asm	/^f010853a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010853f	obj/kern/kernel.asm	/^f010853f:	eb 16                	jmp    f0108557 <strncmp+0x54>$/;"	l
f0108541	obj/kern/kernel.asm	/^f0108541:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108544	obj/kern/kernel.asm	/^f0108544:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108547	obj/kern/kernel.asm	/^f0108547:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010854a	obj/kern/kernel.asm	/^f010854a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010854d	obj/kern/kernel.asm	/^f010854d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108550	obj/kern/kernel.asm	/^f0108550:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108553	obj/kern/kernel.asm	/^f0108553:	29 c2                	sub    %eax,%edx$/;"	l
f0108555	obj/kern/kernel.asm	/^f0108555:	89 d0                	mov    %edx,%eax$/;"	l
f0108557	obj/kern/kernel.asm	/^f0108557:	5d                   	pop    %ebp$/;"	l
f0108558	obj/kern/kernel.asm	/^f0108558:	c3                   	ret    $/;"	l
f0108559	obj/kern/kernel.asm	/^f0108559 <strchr>:$/;"	l
f0108559	obj/kern/kernel.asm	/^f0108559:	55                   	push   %ebp$/;"	l
f010855a	obj/kern/kernel.asm	/^f010855a:	89 e5                	mov    %esp,%ebp$/;"	l
f010855c	obj/kern/kernel.asm	/^f010855c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010855f	obj/kern/kernel.asm	/^f010855f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108562	obj/kern/kernel.asm	/^f0108562:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f0108565	obj/kern/kernel.asm	/^f0108565:	eb 14                	jmp    f010857b <strchr+0x22>$/;"	l
f0108567	obj/kern/kernel.asm	/^f0108567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010856a	obj/kern/kernel.asm	/^f010856a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010856d	obj/kern/kernel.asm	/^f010856d:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
f0108570	obj/kern/kernel.asm	/^f0108570:	75 05                	jne    f0108577 <strchr+0x1e>$/;"	l
f0108572	obj/kern/kernel.asm	/^f0108572:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108575	obj/kern/kernel.asm	/^f0108575:	eb 13                	jmp    f010858a <strchr+0x31>$/;"	l
f0108577	obj/kern/kernel.asm	/^f0108577:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010857b	obj/kern/kernel.asm	/^f010857b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010857e	obj/kern/kernel.asm	/^f010857e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108581	obj/kern/kernel.asm	/^f0108581:	84 c0                	test   %al,%al$/;"	l
f0108583	obj/kern/kernel.asm	/^f0108583:	75 e2                	jne    f0108567 <strchr+0xe>$/;"	l
f0108585	obj/kern/kernel.asm	/^f0108585:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010858a	obj/kern/kernel.asm	/^f010858a:	c9                   	leave  $/;"	l
f010858b	obj/kern/kernel.asm	/^f010858b:	c3                   	ret    $/;"	l
f010858c	obj/kern/kernel.asm	/^f010858c <strfind>:$/;"	l
f010858c	obj/kern/kernel.asm	/^f010858c:	55                   	push   %ebp$/;"	l
f010858d	obj/kern/kernel.asm	/^f010858d:	89 e5                	mov    %esp,%ebp$/;"	l
f010858f	obj/kern/kernel.asm	/^f010858f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0108592	obj/kern/kernel.asm	/^f0108592:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108595	obj/kern/kernel.asm	/^f0108595:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f0108598	obj/kern/kernel.asm	/^f0108598:	eb 11                	jmp    f01085ab <strfind+0x1f>$/;"	l
f010859a	obj/kern/kernel.asm	/^f010859a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010859d	obj/kern/kernel.asm	/^f010859d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01085a0	obj/kern/kernel.asm	/^f01085a0:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
f01085a3	obj/kern/kernel.asm	/^f01085a3:	75 02                	jne    f01085a7 <strfind+0x1b>$/;"	l
f01085a5	obj/kern/kernel.asm	/^f01085a5:	eb 0e                	jmp    f01085b5 <strfind+0x29>$/;"	l
f01085a7	obj/kern/kernel.asm	/^f01085a7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01085ab	obj/kern/kernel.asm	/^f01085ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01085ae	obj/kern/kernel.asm	/^f01085ae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01085b1	obj/kern/kernel.asm	/^f01085b1:	84 c0                	test   %al,%al$/;"	l
f01085b3	obj/kern/kernel.asm	/^f01085b3:	75 e5                	jne    f010859a <strfind+0xe>$/;"	l
f01085b5	obj/kern/kernel.asm	/^f01085b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01085b8	obj/kern/kernel.asm	/^f01085b8:	c9                   	leave  $/;"	l
f01085b9	obj/kern/kernel.asm	/^f01085b9:	c3                   	ret    $/;"	l
f01085ba	obj/kern/kernel.asm	/^f01085ba <memset>:$/;"	l
f01085ba	obj/kern/kernel.asm	/^f01085ba:	55                   	push   %ebp$/;"	l
f01085bb	obj/kern/kernel.asm	/^f01085bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01085bd	obj/kern/kernel.asm	/^f01085bd:	57                   	push   %edi$/;"	l
f01085be	obj/kern/kernel.asm	/^f01085be:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01085c2	obj/kern/kernel.asm	/^f01085c2:	75 05                	jne    f01085c9 <memset+0xf>$/;"	l
f01085c4	obj/kern/kernel.asm	/^f01085c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01085c7	obj/kern/kernel.asm	/^f01085c7:	eb 5c                	jmp    f0108625 <memset+0x6b>$/;"	l
f01085c9	obj/kern/kernel.asm	/^f01085c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01085cc	obj/kern/kernel.asm	/^f01085cc:	83 e0 03             	and    $0x3,%eax$/;"	l
f01085cf	obj/kern/kernel.asm	/^f01085cf:	85 c0                	test   %eax,%eax$/;"	l
f01085d1	obj/kern/kernel.asm	/^f01085d1:	75 41                	jne    f0108614 <memset+0x5a>$/;"	l
f01085d3	obj/kern/kernel.asm	/^f01085d3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01085d6	obj/kern/kernel.asm	/^f01085d6:	83 e0 03             	and    $0x3,%eax$/;"	l
f01085d9	obj/kern/kernel.asm	/^f01085d9:	85 c0                	test   %eax,%eax$/;"	l
f01085db	obj/kern/kernel.asm	/^f01085db:	75 37                	jne    f0108614 <memset+0x5a>$/;"	l
f01085dd	obj/kern/kernel.asm	/^f01085dd:	81 65 0c ff 00 00 00 	andl   $0xff,0xc(%ebp)$/;"	l
f01085e4	obj/kern/kernel.asm	/^f01085e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01085e7	obj/kern/kernel.asm	/^f01085e7:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01085ea	obj/kern/kernel.asm	/^f01085ea:	89 c2                	mov    %eax,%edx$/;"	l
f01085ec	obj/kern/kernel.asm	/^f01085ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01085ef	obj/kern/kernel.asm	/^f01085ef:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01085f2	obj/kern/kernel.asm	/^f01085f2:	09 c2                	or     %eax,%edx$/;"	l
f01085f4	obj/kern/kernel.asm	/^f01085f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01085f7	obj/kern/kernel.asm	/^f01085f7:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01085fa	obj/kern/kernel.asm	/^f01085fa:	09 d0                	or     %edx,%eax$/;"	l
f01085fc	obj/kern/kernel.asm	/^f01085fc:	09 45 0c             	or     %eax,0xc(%ebp)$/;"	l
f01085ff	obj/kern/kernel.asm	/^f01085ff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108602	obj/kern/kernel.asm	/^f0108602:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f0108605	obj/kern/kernel.asm	/^f0108605:	89 c1                	mov    %eax,%ecx$/;"	l
f0108607	obj/kern/kernel.asm	/^f0108607:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010860a	obj/kern/kernel.asm	/^f010860a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010860d	obj/kern/kernel.asm	/^f010860d:	89 d7                	mov    %edx,%edi$/;"	l
f010860f	obj/kern/kernel.asm	/^f010860f:	fc                   	cld    $/;"	l
f0108610	obj/kern/kernel.asm	/^f0108610:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0108612	obj/kern/kernel.asm	/^f0108612:	eb 0e                	jmp    f0108622 <memset+0x68>$/;"	l
f0108614	obj/kern/kernel.asm	/^f0108614:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0108617	obj/kern/kernel.asm	/^f0108617:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010861a	obj/kern/kernel.asm	/^f010861a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010861d	obj/kern/kernel.asm	/^f010861d:	89 d7                	mov    %edx,%edi$/;"	l
f010861f	obj/kern/kernel.asm	/^f010861f:	fc                   	cld    $/;"	l
f0108620	obj/kern/kernel.asm	/^f0108620:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0108622	obj/kern/kernel.asm	/^f0108622:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108625	obj/kern/kernel.asm	/^f0108625:	5f                   	pop    %edi$/;"	l
f0108626	obj/kern/kernel.asm	/^f0108626:	5d                   	pop    %ebp$/;"	l
f0108627	obj/kern/kernel.asm	/^f0108627:	c3                   	ret    $/;"	l
f0108628	obj/kern/kernel.asm	/^f0108628 <memmove>:$/;"	l
f0108628	obj/kern/kernel.asm	/^f0108628:	55                   	push   %ebp$/;"	l
f0108629	obj/kern/kernel.asm	/^f0108629:	89 e5                	mov    %esp,%ebp$/;"	l
f010862b	obj/kern/kernel.asm	/^f010862b:	57                   	push   %edi$/;"	l
f010862c	obj/kern/kernel.asm	/^f010862c:	56                   	push   %esi$/;"	l
f010862d	obj/kern/kernel.asm	/^f010862d:	53                   	push   %ebx$/;"	l
f010862e	obj/kern/kernel.asm	/^f010862e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0108631	obj/kern/kernel.asm	/^f0108631:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108634	obj/kern/kernel.asm	/^f0108634:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108637	obj/kern/kernel.asm	/^f0108637:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010863a	obj/kern/kernel.asm	/^f010863a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010863d	obj/kern/kernel.asm	/^f010863d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108640	obj/kern/kernel.asm	/^f0108640:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0108643	obj/kern/kernel.asm	/^f0108643:	73 6d                	jae    f01086b2 <memmove+0x8a>$/;"	l
f0108645	obj/kern/kernel.asm	/^f0108645:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108648	obj/kern/kernel.asm	/^f0108648:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010864b	obj/kern/kernel.asm	/^f010864b:	01 d0                	add    %edx,%eax$/;"	l
f010864d	obj/kern/kernel.asm	/^f010864d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0108650	obj/kern/kernel.asm	/^f0108650:	76 60                	jbe    f01086b2 <memmove+0x8a>$/;"	l
f0108652	obj/kern/kernel.asm	/^f0108652:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108655	obj/kern/kernel.asm	/^f0108655:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
f0108658	obj/kern/kernel.asm	/^f0108658:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010865b	obj/kern/kernel.asm	/^f010865b:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
f010865e	obj/kern/kernel.asm	/^f010865e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108661	obj/kern/kernel.asm	/^f0108661:	83 e0 03             	and    $0x3,%eax$/;"	l
f0108664	obj/kern/kernel.asm	/^f0108664:	85 c0                	test   %eax,%eax$/;"	l
f0108666	obj/kern/kernel.asm	/^f0108666:	75 2f                	jne    f0108697 <memmove+0x6f>$/;"	l
f0108668	obj/kern/kernel.asm	/^f0108668:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010866b	obj/kern/kernel.asm	/^f010866b:	83 e0 03             	and    $0x3,%eax$/;"	l
f010866e	obj/kern/kernel.asm	/^f010866e:	85 c0                	test   %eax,%eax$/;"	l
f0108670	obj/kern/kernel.asm	/^f0108670:	75 25                	jne    f0108697 <memmove+0x6f>$/;"	l
f0108672	obj/kern/kernel.asm	/^f0108672:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108675	obj/kern/kernel.asm	/^f0108675:	83 e0 03             	and    $0x3,%eax$/;"	l
f0108678	obj/kern/kernel.asm	/^f0108678:	85 c0                	test   %eax,%eax$/;"	l
f010867a	obj/kern/kernel.asm	/^f010867a:	75 1b                	jne    f0108697 <memmove+0x6f>$/;"	l
f010867c	obj/kern/kernel.asm	/^f010867c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010867f	obj/kern/kernel.asm	/^f010867f:	83 e8 04             	sub    $0x4,%eax$/;"	l
f0108682	obj/kern/kernel.asm	/^f0108682:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0108685	obj/kern/kernel.asm	/^f0108685:	83 ea 04             	sub    $0x4,%edx$/;"	l
f0108688	obj/kern/kernel.asm	/^f0108688:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010868b	obj/kern/kernel.asm	/^f010868b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010868e	obj/kern/kernel.asm	/^f010868e:	89 c7                	mov    %eax,%edi$/;"	l
f0108690	obj/kern/kernel.asm	/^f0108690:	89 d6                	mov    %edx,%esi$/;"	l
f0108692	obj/kern/kernel.asm	/^f0108692:	fd                   	std    $/;"	l
f0108693	obj/kern/kernel.asm	/^f0108693:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0108695	obj/kern/kernel.asm	/^f0108695:	eb 18                	jmp    f01086af <memmove+0x87>$/;"	l
f0108697	obj/kern/kernel.asm	/^f0108697:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010869a	obj/kern/kernel.asm	/^f010869a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f010869d	obj/kern/kernel.asm	/^f010869d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01086a0	obj/kern/kernel.asm	/^f01086a0:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f01086a3	obj/kern/kernel.asm	/^f01086a3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01086a6	obj/kern/kernel.asm	/^f01086a6:	89 d7                	mov    %edx,%edi$/;"	l
f01086a8	obj/kern/kernel.asm	/^f01086a8:	89 de                	mov    %ebx,%esi$/;"	l
f01086aa	obj/kern/kernel.asm	/^f01086aa:	89 c1                	mov    %eax,%ecx$/;"	l
f01086ac	obj/kern/kernel.asm	/^f01086ac:	fd                   	std    $/;"	l
f01086ad	obj/kern/kernel.asm	/^f01086ad:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01086af	obj/kern/kernel.asm	/^f01086af:	fc                   	cld    $/;"	l
f01086b0	obj/kern/kernel.asm	/^f01086b0:	eb 45                	jmp    f01086f7 <memmove+0xcf>$/;"	l
f01086b2	obj/kern/kernel.asm	/^f01086b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01086b5	obj/kern/kernel.asm	/^f01086b5:	83 e0 03             	and    $0x3,%eax$/;"	l
f01086b8	obj/kern/kernel.asm	/^f01086b8:	85 c0                	test   %eax,%eax$/;"	l
f01086ba	obj/kern/kernel.asm	/^f01086ba:	75 2b                	jne    f01086e7 <memmove+0xbf>$/;"	l
f01086bc	obj/kern/kernel.asm	/^f01086bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01086bf	obj/kern/kernel.asm	/^f01086bf:	83 e0 03             	and    $0x3,%eax$/;"	l
f01086c2	obj/kern/kernel.asm	/^f01086c2:	85 c0                	test   %eax,%eax$/;"	l
f01086c4	obj/kern/kernel.asm	/^f01086c4:	75 21                	jne    f01086e7 <memmove+0xbf>$/;"	l
f01086c6	obj/kern/kernel.asm	/^f01086c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01086c9	obj/kern/kernel.asm	/^f01086c9:	83 e0 03             	and    $0x3,%eax$/;"	l
f01086cc	obj/kern/kernel.asm	/^f01086cc:	85 c0                	test   %eax,%eax$/;"	l
f01086ce	obj/kern/kernel.asm	/^f01086ce:	75 17                	jne    f01086e7 <memmove+0xbf>$/;"	l
f01086d0	obj/kern/kernel.asm	/^f01086d0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01086d3	obj/kern/kernel.asm	/^f01086d3:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f01086d6	obj/kern/kernel.asm	/^f01086d6:	89 c1                	mov    %eax,%ecx$/;"	l
f01086d8	obj/kern/kernel.asm	/^f01086d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01086db	obj/kern/kernel.asm	/^f01086db:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01086de	obj/kern/kernel.asm	/^f01086de:	89 c7                	mov    %eax,%edi$/;"	l
f01086e0	obj/kern/kernel.asm	/^f01086e0:	89 d6                	mov    %edx,%esi$/;"	l
f01086e2	obj/kern/kernel.asm	/^f01086e2:	fc                   	cld    $/;"	l
f01086e3	obj/kern/kernel.asm	/^f01086e3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01086e5	obj/kern/kernel.asm	/^f01086e5:	eb 10                	jmp    f01086f7 <memmove+0xcf>$/;"	l
f01086e7	obj/kern/kernel.asm	/^f01086e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01086ea	obj/kern/kernel.asm	/^f01086ea:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01086ed	obj/kern/kernel.asm	/^f01086ed:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01086f0	obj/kern/kernel.asm	/^f01086f0:	89 c7                	mov    %eax,%edi$/;"	l
f01086f2	obj/kern/kernel.asm	/^f01086f2:	89 d6                	mov    %edx,%esi$/;"	l
f01086f4	obj/kern/kernel.asm	/^f01086f4:	fc                   	cld    $/;"	l
f01086f5	obj/kern/kernel.asm	/^f01086f5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01086f7	obj/kern/kernel.asm	/^f01086f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01086fa	obj/kern/kernel.asm	/^f01086fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01086fd	obj/kern/kernel.asm	/^f01086fd:	5b                   	pop    %ebx$/;"	l
f01086fe	obj/kern/kernel.asm	/^f01086fe:	5e                   	pop    %esi$/;"	l
f01086ff	obj/kern/kernel.asm	/^f01086ff:	5f                   	pop    %edi$/;"	l
f0108700	obj/kern/kernel.asm	/^f0108700:	5d                   	pop    %ebp$/;"	l
f0108701	obj/kern/kernel.asm	/^f0108701:	c3                   	ret    $/;"	l
f0108702	obj/kern/kernel.asm	/^f0108702 <memcpy>:$/;"	l
f0108702	obj/kern/kernel.asm	/^f0108702:	55                   	push   %ebp$/;"	l
f0108703	obj/kern/kernel.asm	/^f0108703:	89 e5                	mov    %esp,%ebp$/;"	l
f0108705	obj/kern/kernel.asm	/^f0108705:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0108708	obj/kern/kernel.asm	/^f0108708:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010870b	obj/kern/kernel.asm	/^f010870b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010870f	obj/kern/kernel.asm	/^f010870f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108712	obj/kern/kernel.asm	/^f0108712:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108716	obj/kern/kernel.asm	/^f0108716:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108719	obj/kern/kernel.asm	/^f0108719:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010871c	obj/kern/kernel.asm	/^f010871c:	e8 07 ff ff ff       	call   f0108628 <memmove>$/;"	l
f0108721	obj/kern/kernel.asm	/^f0108721:	c9                   	leave  $/;"	l
f0108722	obj/kern/kernel.asm	/^f0108722:	c3                   	ret    $/;"	l
f0108723	obj/kern/kernel.asm	/^f0108723 <memcmp>:$/;"	l
f0108723	obj/kern/kernel.asm	/^f0108723:	55                   	push   %ebp$/;"	l
f0108724	obj/kern/kernel.asm	/^f0108724:	89 e5                	mov    %esp,%ebp$/;"	l
f0108726	obj/kern/kernel.asm	/^f0108726:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0108729	obj/kern/kernel.asm	/^f0108729:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010872c	obj/kern/kernel.asm	/^f010872c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010872f	obj/kern/kernel.asm	/^f010872f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108732	obj/kern/kernel.asm	/^f0108732:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0108735	obj/kern/kernel.asm	/^f0108735:	eb 30                	jmp    f0108767 <memcmp+0x44>$/;"	l
f0108737	obj/kern/kernel.asm	/^f0108737:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010873a	obj/kern/kernel.asm	/^f010873a:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010873d	obj/kern/kernel.asm	/^f010873d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0108740	obj/kern/kernel.asm	/^f0108740:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108743	obj/kern/kernel.asm	/^f0108743:	38 c2                	cmp    %al,%dl$/;"	l
f0108745	obj/kern/kernel.asm	/^f0108745:	74 18                	je     f010875f <memcmp+0x3c>$/;"	l
f0108747	obj/kern/kernel.asm	/^f0108747:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010874a	obj/kern/kernel.asm	/^f010874a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010874d	obj/kern/kernel.asm	/^f010874d:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0108750	obj/kern/kernel.asm	/^f0108750:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0108753	obj/kern/kernel.asm	/^f0108753:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108756	obj/kern/kernel.asm	/^f0108756:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108759	obj/kern/kernel.asm	/^f0108759:	29 c2                	sub    %eax,%edx$/;"	l
f010875b	obj/kern/kernel.asm	/^f010875b:	89 d0                	mov    %edx,%eax$/;"	l
f010875d	obj/kern/kernel.asm	/^f010875d:	eb 1a                	jmp    f0108779 <memcmp+0x56>$/;"	l
f010875f	obj/kern/kernel.asm	/^f010875f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0108763	obj/kern/kernel.asm	/^f0108763:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f0108767	obj/kern/kernel.asm	/^f0108767:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010876a	obj/kern/kernel.asm	/^f010876a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f010876d	obj/kern/kernel.asm	/^f010876d:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f0108770	obj/kern/kernel.asm	/^f0108770:	85 c0                	test   %eax,%eax$/;"	l
f0108772	obj/kern/kernel.asm	/^f0108772:	75 c3                	jne    f0108737 <memcmp+0x14>$/;"	l
f0108774	obj/kern/kernel.asm	/^f0108774:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108779	obj/kern/kernel.asm	/^f0108779:	c9                   	leave  $/;"	l
f010877a	obj/kern/kernel.asm	/^f010877a:	c3                   	ret    $/;"	l
f010877b	obj/kern/kernel.asm	/^f010877b <memfind>:$/;"	l
f010877b	obj/kern/kernel.asm	/^f010877b:	55                   	push   %ebp$/;"	l
f010877c	obj/kern/kernel.asm	/^f010877c:	89 e5                	mov    %esp,%ebp$/;"	l
f010877e	obj/kern/kernel.asm	/^f010877e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0108781	obj/kern/kernel.asm	/^f0108781:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108784	obj/kern/kernel.asm	/^f0108784:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0108787	obj/kern/kernel.asm	/^f0108787:	01 d0                	add    %edx,%eax$/;"	l
f0108789	obj/kern/kernel.asm	/^f0108789:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010878c	obj/kern/kernel.asm	/^f010878c:	eb 13                	jmp    f01087a1 <memfind+0x26>$/;"	l
f010878e	obj/kern/kernel.asm	/^f010878e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108791	obj/kern/kernel.asm	/^f0108791:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0108794	obj/kern/kernel.asm	/^f0108794:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108797	obj/kern/kernel.asm	/^f0108797:	38 c2                	cmp    %al,%dl$/;"	l
f0108799	obj/kern/kernel.asm	/^f0108799:	75 02                	jne    f010879d <memfind+0x22>$/;"	l
f010879b	obj/kern/kernel.asm	/^f010879b:	eb 0c                	jmp    f01087a9 <memfind+0x2e>$/;"	l
f010879d	obj/kern/kernel.asm	/^f010879d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01087a1	obj/kern/kernel.asm	/^f01087a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087a4	obj/kern/kernel.asm	/^f01087a4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f01087a7	obj/kern/kernel.asm	/^f01087a7:	72 e5                	jb     f010878e <memfind+0x13>$/;"	l
f01087a9	obj/kern/kernel.asm	/^f01087a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087ac	obj/kern/kernel.asm	/^f01087ac:	c9                   	leave  $/;"	l
f01087ad	obj/kern/kernel.asm	/^f01087ad:	c3                   	ret    $/;"	l
f01087ae	obj/kern/kernel.asm	/^f01087ae <strtol>:$/;"	l
f01087ae	obj/kern/kernel.asm	/^f01087ae:	55                   	push   %ebp$/;"	l
f01087af	obj/kern/kernel.asm	/^f01087af:	89 e5                	mov    %esp,%ebp$/;"	l
f01087b1	obj/kern/kernel.asm	/^f01087b1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01087b4	obj/kern/kernel.asm	/^f01087b4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f01087bb	obj/kern/kernel.asm	/^f01087bb:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f01087c2	obj/kern/kernel.asm	/^f01087c2:	eb 04                	jmp    f01087c8 <strtol+0x1a>$/;"	l
f01087c4	obj/kern/kernel.asm	/^f01087c4:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01087c8	obj/kern/kernel.asm	/^f01087c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087cb	obj/kern/kernel.asm	/^f01087cb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01087ce	obj/kern/kernel.asm	/^f01087ce:	3c 20                	cmp    $0x20,%al$/;"	l
f01087d0	obj/kern/kernel.asm	/^f01087d0:	74 f2                	je     f01087c4 <strtol+0x16>$/;"	l
f01087d2	obj/kern/kernel.asm	/^f01087d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087d5	obj/kern/kernel.asm	/^f01087d5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01087d8	obj/kern/kernel.asm	/^f01087d8:	3c 09                	cmp    $0x9,%al$/;"	l
f01087da	obj/kern/kernel.asm	/^f01087da:	74 e8                	je     f01087c4 <strtol+0x16>$/;"	l
f01087dc	obj/kern/kernel.asm	/^f01087dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087df	obj/kern/kernel.asm	/^f01087df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01087e2	obj/kern/kernel.asm	/^f01087e2:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01087e4	obj/kern/kernel.asm	/^f01087e4:	75 06                	jne    f01087ec <strtol+0x3e>$/;"	l
f01087e6	obj/kern/kernel.asm	/^f01087e6:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01087ea	obj/kern/kernel.asm	/^f01087ea:	eb 15                	jmp    f0108801 <strtol+0x53>$/;"	l
f01087ec	obj/kern/kernel.asm	/^f01087ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01087ef	obj/kern/kernel.asm	/^f01087ef:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01087f2	obj/kern/kernel.asm	/^f01087f2:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01087f4	obj/kern/kernel.asm	/^f01087f4:	75 0b                	jne    f0108801 <strtol+0x53>$/;"	l
f01087f6	obj/kern/kernel.asm	/^f01087f6:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01087fa	obj/kern/kernel.asm	/^f01087fa:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
f0108801	obj/kern/kernel.asm	/^f0108801:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108805	obj/kern/kernel.asm	/^f0108805:	74 06                	je     f010880d <strtol+0x5f>$/;"	l
f0108807	obj/kern/kernel.asm	/^f0108807:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
f010880b	obj/kern/kernel.asm	/^f010880b:	75 24                	jne    f0108831 <strtol+0x83>$/;"	l
f010880d	obj/kern/kernel.asm	/^f010880d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108810	obj/kern/kernel.asm	/^f0108810:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108813	obj/kern/kernel.asm	/^f0108813:	3c 30                	cmp    $0x30,%al$/;"	l
f0108815	obj/kern/kernel.asm	/^f0108815:	75 1a                	jne    f0108831 <strtol+0x83>$/;"	l
f0108817	obj/kern/kernel.asm	/^f0108817:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010881a	obj/kern/kernel.asm	/^f010881a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010881d	obj/kern/kernel.asm	/^f010881d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108820	obj/kern/kernel.asm	/^f0108820:	3c 78                	cmp    $0x78,%al$/;"	l
f0108822	obj/kern/kernel.asm	/^f0108822:	75 0d                	jne    f0108831 <strtol+0x83>$/;"	l
f0108824	obj/kern/kernel.asm	/^f0108824:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
f0108828	obj/kern/kernel.asm	/^f0108828:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
f010882f	obj/kern/kernel.asm	/^f010882f:	eb 2a                	jmp    f010885b <strtol+0xad>$/;"	l
f0108831	obj/kern/kernel.asm	/^f0108831:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108835	obj/kern/kernel.asm	/^f0108835:	75 17                	jne    f010884e <strtol+0xa0>$/;"	l
f0108837	obj/kern/kernel.asm	/^f0108837:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010883a	obj/kern/kernel.asm	/^f010883a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010883d	obj/kern/kernel.asm	/^f010883d:	3c 30                	cmp    $0x30,%al$/;"	l
f010883f	obj/kern/kernel.asm	/^f010883f:	75 0d                	jne    f010884e <strtol+0xa0>$/;"	l
f0108841	obj/kern/kernel.asm	/^f0108841:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0108845	obj/kern/kernel.asm	/^f0108845:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
f010884c	obj/kern/kernel.asm	/^f010884c:	eb 0d                	jmp    f010885b <strtol+0xad>$/;"	l
f010884e	obj/kern/kernel.asm	/^f010884e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0108852	obj/kern/kernel.asm	/^f0108852:	75 07                	jne    f010885b <strtol+0xad>$/;"	l
f0108854	obj/kern/kernel.asm	/^f0108854:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
f010885b	obj/kern/kernel.asm	/^f010885b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010885e	obj/kern/kernel.asm	/^f010885e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108861	obj/kern/kernel.asm	/^f0108861:	3c 2f                	cmp    $0x2f,%al$/;"	l
f0108863	obj/kern/kernel.asm	/^f0108863:	7e 1b                	jle    f0108880 <strtol+0xd2>$/;"	l
f0108865	obj/kern/kernel.asm	/^f0108865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108868	obj/kern/kernel.asm	/^f0108868:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010886b	obj/kern/kernel.asm	/^f010886b:	3c 39                	cmp    $0x39,%al$/;"	l
f010886d	obj/kern/kernel.asm	/^f010886d:	7f 11                	jg     f0108880 <strtol+0xd2>$/;"	l
f010886f	obj/kern/kernel.asm	/^f010886f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108872	obj/kern/kernel.asm	/^f0108872:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108875	obj/kern/kernel.asm	/^f0108875:	0f be c0             	movsbl %al,%eax$/;"	l
f0108878	obj/kern/kernel.asm	/^f0108878:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010887b	obj/kern/kernel.asm	/^f010887b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010887e	obj/kern/kernel.asm	/^f010887e:	eb 48                	jmp    f01088c8 <strtol+0x11a>$/;"	l
f0108880	obj/kern/kernel.asm	/^f0108880:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108883	obj/kern/kernel.asm	/^f0108883:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108886	obj/kern/kernel.asm	/^f0108886:	3c 60                	cmp    $0x60,%al$/;"	l
f0108888	obj/kern/kernel.asm	/^f0108888:	7e 1b                	jle    f01088a5 <strtol+0xf7>$/;"	l
f010888a	obj/kern/kernel.asm	/^f010888a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010888d	obj/kern/kernel.asm	/^f010888d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108890	obj/kern/kernel.asm	/^f0108890:	3c 7a                	cmp    $0x7a,%al$/;"	l
f0108892	obj/kern/kernel.asm	/^f0108892:	7f 11                	jg     f01088a5 <strtol+0xf7>$/;"	l
f0108894	obj/kern/kernel.asm	/^f0108894:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108897	obj/kern/kernel.asm	/^f0108897:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010889a	obj/kern/kernel.asm	/^f010889a:	0f be c0             	movsbl %al,%eax$/;"	l
f010889d	obj/kern/kernel.asm	/^f010889d:	83 e8 57             	sub    $0x57,%eax$/;"	l
f01088a0	obj/kern/kernel.asm	/^f01088a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01088a3	obj/kern/kernel.asm	/^f01088a3:	eb 23                	jmp    f01088c8 <strtol+0x11a>$/;"	l
f01088a5	obj/kern/kernel.asm	/^f01088a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01088a8	obj/kern/kernel.asm	/^f01088a8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01088ab	obj/kern/kernel.asm	/^f01088ab:	3c 40                	cmp    $0x40,%al$/;"	l
f01088ad	obj/kern/kernel.asm	/^f01088ad:	7e 3d                	jle    f01088ec <strtol+0x13e>$/;"	l
f01088af	obj/kern/kernel.asm	/^f01088af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01088b2	obj/kern/kernel.asm	/^f01088b2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01088b5	obj/kern/kernel.asm	/^f01088b5:	3c 5a                	cmp    $0x5a,%al$/;"	l
f01088b7	obj/kern/kernel.asm	/^f01088b7:	7f 33                	jg     f01088ec <strtol+0x13e>$/;"	l
f01088b9	obj/kern/kernel.asm	/^f01088b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01088bc	obj/kern/kernel.asm	/^f01088bc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01088bf	obj/kern/kernel.asm	/^f01088bf:	0f be c0             	movsbl %al,%eax$/;"	l
f01088c2	obj/kern/kernel.asm	/^f01088c2:	83 e8 37             	sub    $0x37,%eax$/;"	l
f01088c5	obj/kern/kernel.asm	/^f01088c5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01088c8	obj/kern/kernel.asm	/^f01088c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01088cb	obj/kern/kernel.asm	/^f01088cb:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f01088ce	obj/kern/kernel.asm	/^f01088ce:	7c 02                	jl     f01088d2 <strtol+0x124>$/;"	l
f01088d0	obj/kern/kernel.asm	/^f01088d0:	eb 1a                	jmp    f01088ec <strtol+0x13e>$/;"	l
f01088d2	obj/kern/kernel.asm	/^f01088d2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01088d6	obj/kern/kernel.asm	/^f01088d6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01088d9	obj/kern/kernel.asm	/^f01088d9:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01088dd	obj/kern/kernel.asm	/^f01088dd:	89 c2                	mov    %eax,%edx$/;"	l
f01088df	obj/kern/kernel.asm	/^f01088df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01088e2	obj/kern/kernel.asm	/^f01088e2:	01 d0                	add    %edx,%eax$/;"	l
f01088e4	obj/kern/kernel.asm	/^f01088e4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f01088e7	obj/kern/kernel.asm	/^f01088e7:	e9 6f ff ff ff       	jmp    f010885b <strtol+0xad>$/;"	l
f01088ec	obj/kern/kernel.asm	/^f01088ec:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01088f0	obj/kern/kernel.asm	/^f01088f0:	74 08                	je     f01088fa <strtol+0x14c>$/;"	l
f01088f2	obj/kern/kernel.asm	/^f01088f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01088f5	obj/kern/kernel.asm	/^f01088f5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01088f8	obj/kern/kernel.asm	/^f01088f8:	89 10                	mov    %edx,(%eax)$/;"	l
f01088fa	obj/kern/kernel.asm	/^f01088fa:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
f01088fe	obj/kern/kernel.asm	/^f01088fe:	74 07                	je     f0108907 <strtol+0x159>$/;"	l
f0108900	obj/kern/kernel.asm	/^f0108900:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0108903	obj/kern/kernel.asm	/^f0108903:	f7 d8                	neg    %eax$/;"	l
f0108905	obj/kern/kernel.asm	/^f0108905:	eb 03                	jmp    f010890a <strtol+0x15c>$/;"	l
f0108907	obj/kern/kernel.asm	/^f0108907:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010890a	obj/kern/kernel.asm	/^f010890a:	c9                   	leave  $/;"	l
f010890b	obj/kern/kernel.asm	/^f010890b:	c3                   	ret    $/;"	l
f010890c	obj/kern/kernel.asm	/^f010890c <mpentry_start>:$/;"	l
f010890c	obj/kern/kernel.asm	/^f010890c:	fa                   	cli    $/;"	l
f010890d	obj/kern/kernel.asm	/^f010890d:	31 c0                	xor    %eax,%eax$/;"	l
f010890f	obj/kern/kernel.asm	/^f010890f:	8e d8                	mov    %eax,%ds$/;"	l
f0108911	obj/kern/kernel.asm	/^f0108911:	8e c0                	mov    %eax,%es$/;"	l
f0108913	obj/kern/kernel.asm	/^f0108913:	8e d0                	mov    %eax,%ss$/;"	l
f0108915	obj/kern/kernel.asm	/^f0108915:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0108918	obj/kern/kernel.asm	/^f0108918:	74 70                	je     f010898a <_kaddr+0x3>$/;"	l
f010891a	obj/kern/kernel.asm	/^f010891a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010891d	obj/kern/kernel.asm	/^f010891d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0108921	obj/kern/kernel.asm	/^f0108921:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0108924	obj/kern/kernel.asm	/^f0108924:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f010892a	obj/kern/kernel.asm	/^f010892a:	08 00                	or     %al,(%eax)$/;"	l
f010892c	obj/kern/kernel.asm	/^f010892c <start32>:$/;"	l
f010892c	obj/kern/kernel.asm	/^f010892c:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0108930	obj/kern/kernel.asm	/^f0108930:	8e d8                	mov    %eax,%ds$/;"	l
f0108932	obj/kern/kernel.asm	/^f0108932:	8e c0                	mov    %eax,%es$/;"	l
f0108934	obj/kern/kernel.asm	/^f0108934:	8e d0                	mov    %eax,%ss$/;"	l
f0108936	obj/kern/kernel.asm	/^f0108936:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010893a	obj/kern/kernel.asm	/^f010893a:	8e e0                	mov    %eax,%fs$/;"	l
f010893c	obj/kern/kernel.asm	/^f010893c:	8e e8                	mov    %eax,%gs$/;"	l
f010893e	obj/kern/kernel.asm	/^f010893e:	b8 00 90 12 00       	mov    $0x129000,%eax$/;"	l
f0108943	obj/kern/kernel.asm	/^f0108943:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0108946	obj/kern/kernel.asm	/^f0108946:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0108949	obj/kern/kernel.asm	/^f0108949:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010894e	obj/kern/kernel.asm	/^f010894e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0108951	obj/kern/kernel.asm	/^f0108951:	8b 25 24 0f 2f f0    	mov    0xf02f0f24,%esp$/;"	l
f0108957	obj/kern/kernel.asm	/^f0108957:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010895c	obj/kern/kernel.asm	/^f010895c:	b8 88 02 10 f0       	mov    $0xf0100288,%eax$/;"	l
f0108961	obj/kern/kernel.asm	/^f0108961:	ff d0                	call   *%eax$/;"	l
f0108963	obj/kern/kernel.asm	/^f0108963 <spin>:$/;"	l
f0108963	obj/kern/kernel.asm	/^f0108963:	eb fe                	jmp    f0108963 <spin>$/;"	l
f0108965	obj/kern/kernel.asm	/^f0108965:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0108968	obj/kern/kernel.asm	/^f0108968 <gdt>:$/;"	l
f0108970	obj/kern/kernel.asm	/^f0108970:	ff                   	(bad)  $/;"	l
f0108971	obj/kern/kernel.asm	/^f0108971:	ff 00                	incl   (%eax)$/;"	l
f0108973	obj/kern/kernel.asm	/^f0108973:	00 00                	add    %al,(%eax)$/;"	l
f0108975	obj/kern/kernel.asm	/^f0108975:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f010897c	obj/kern/kernel.asm	/^f010897c:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0108980	obj/kern/kernel.asm	/^f0108980 <gdtdesc>:$/;"	l
f0108980	obj/kern/kernel.asm	/^f0108980:	17                   	pop    %ss$/;"	l
f0108981	obj/kern/kernel.asm	/^f0108981:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0108986	obj/kern/kernel.asm	/^f0108986 <mpentry_end>:$/;"	l
f0108986	obj/kern/kernel.asm	/^f0108986:	90                   	nop$/;"	l
f0108987	obj/kern/kernel.asm	/^f0108987 <_kaddr>:$/;"	l
f0108987	obj/kern/kernel.asm	/^f0108987:	55                   	push   %ebp$/;"	l
f0108988	obj/kern/kernel.asm	/^f0108988:	89 e5                	mov    %esp,%ebp$/;"	l
f010898a	obj/kern/kernel.asm	/^f010898a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010898d	obj/kern/kernel.asm	/^f010898d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108990	obj/kern/kernel.asm	/^f0108990:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0108993	obj/kern/kernel.asm	/^f0108993:	89 c2                	mov    %eax,%edx$/;"	l
f0108995	obj/kern/kernel.asm	/^f0108995:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f010899a	obj/kern/kernel.asm	/^f010899a:	39 c2                	cmp    %eax,%edx$/;"	l
f010899c	obj/kern/kernel.asm	/^f010899c:	72 21                	jb     f01089bf <_kaddr+0x38>$/;"	l
f010899e	obj/kern/kernel.asm	/^f010899e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01089a1	obj/kern/kernel.asm	/^f01089a1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01089a5	obj/kern/kernel.asm	/^f01089a5:	c7 44 24 08 98 c4 10 	movl   $0xf010c498,0x8(%esp)$/;"	l
f01089ac	obj/kern/kernel.asm	/^f01089ac:	f0 $/;"	l
f01089ad	obj/kern/kernel.asm	/^f01089ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01089b0	obj/kern/kernel.asm	/^f01089b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01089b4	obj/kern/kernel.asm	/^f01089b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01089b7	obj/kern/kernel.asm	/^f01089b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01089ba	obj/kern/kernel.asm	/^f01089ba:	e8 43 79 ff ff       	call   f0100302 <_panic>$/;"	l
f01089bf	obj/kern/kernel.asm	/^f01089bf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01089c2	obj/kern/kernel.asm	/^f01089c2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01089c7	obj/kern/kernel.asm	/^f01089c7:	c9                   	leave  $/;"	l
f01089c8	obj/kern/kernel.asm	/^f01089c8:	c3                   	ret    $/;"	l
f01089c9	obj/kern/kernel.asm	/^f01089c9 <sum>:$/;"	l
f01089c9	obj/kern/kernel.asm	/^f01089c9:	55                   	push   %ebp$/;"	l
f01089ca	obj/kern/kernel.asm	/^f01089ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01089cc	obj/kern/kernel.asm	/^f01089cc:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01089cf	obj/kern/kernel.asm	/^f01089cf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f01089d6	obj/kern/kernel.asm	/^f01089d6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f01089dd	obj/kern/kernel.asm	/^f01089dd:	eb 15                	jmp    f01089f4 <sum+0x2b>$/;"	l
f01089df	obj/kern/kernel.asm	/^f01089df:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01089e2	obj/kern/kernel.asm	/^f01089e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01089e5	obj/kern/kernel.asm	/^f01089e5:	01 d0                	add    %edx,%eax$/;"	l
f01089e7	obj/kern/kernel.asm	/^f01089e7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01089ea	obj/kern/kernel.asm	/^f01089ea:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01089ed	obj/kern/kernel.asm	/^f01089ed:	01 45 f8             	add    %eax,-0x8(%ebp)$/;"	l
f01089f0	obj/kern/kernel.asm	/^f01089f0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f01089f4	obj/kern/kernel.asm	/^f01089f4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01089f7	obj/kern/kernel.asm	/^f01089f7:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
f01089fa	obj/kern/kernel.asm	/^f01089fa:	7c e3                	jl     f01089df <sum+0x16>$/;"	l
f01089fc	obj/kern/kernel.asm	/^f01089fc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01089ff	obj/kern/kernel.asm	/^f01089ff:	c9                   	leave  $/;"	l
f0108a00	obj/kern/kernel.asm	/^f0108a00:	c3                   	ret    $/;"	l
f0108a01	obj/kern/kernel.asm	/^f0108a01 <mpsearch1>:$/;"	l
f0108a01	obj/kern/kernel.asm	/^f0108a01:	55                   	push   %ebp$/;"	l
f0108a02	obj/kern/kernel.asm	/^f0108a02:	89 e5                	mov    %esp,%ebp$/;"	l
f0108a04	obj/kern/kernel.asm	/^f0108a04:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0108a07	obj/kern/kernel.asm	/^f0108a07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108a0a	obj/kern/kernel.asm	/^f0108a0a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108a0e	obj/kern/kernel.asm	/^f0108a0e:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0108a15	obj/kern/kernel.asm	/^f0108a15:	00 $/;"	l
f0108a16	obj/kern/kernel.asm	/^f0108a16:	c7 04 24 bb c4 10 f0 	movl   $0xf010c4bb,(%esp)$/;"	l
f0108a1d	obj/kern/kernel.asm	/^f0108a1d:	e8 65 ff ff ff       	call   f0108987 <_kaddr>$/;"	l
f0108a22	obj/kern/kernel.asm	/^f0108a22:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0108a25	obj/kern/kernel.asm	/^f0108a25:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0108a28	obj/kern/kernel.asm	/^f0108a28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108a2b	obj/kern/kernel.asm	/^f0108a2b:	01 d0                	add    %edx,%eax$/;"	l
f0108a2d	obj/kern/kernel.asm	/^f0108a2d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108a31	obj/kern/kernel.asm	/^f0108a31:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0108a38	obj/kern/kernel.asm	/^f0108a38:	00 $/;"	l
f0108a39	obj/kern/kernel.asm	/^f0108a39:	c7 04 24 bb c4 10 f0 	movl   $0xf010c4bb,(%esp)$/;"	l
f0108a40	obj/kern/kernel.asm	/^f0108a40:	e8 42 ff ff ff       	call   f0108987 <_kaddr>$/;"	l
f0108a45	obj/kern/kernel.asm	/^f0108a45:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108a48	obj/kern/kernel.asm	/^f0108a48:	eb 3f                	jmp    f0108a89 <mpsearch1+0x88>$/;"	l
f0108a4a	obj/kern/kernel.asm	/^f0108a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108a4d	obj/kern/kernel.asm	/^f0108a4d:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0108a54	obj/kern/kernel.asm	/^f0108a54:	00 $/;"	l
f0108a55	obj/kern/kernel.asm	/^f0108a55:	c7 44 24 04 cb c4 10 	movl   $0xf010c4cb,0x4(%esp)$/;"	l
f0108a5c	obj/kern/kernel.asm	/^f0108a5c:	f0 $/;"	l
f0108a5d	obj/kern/kernel.asm	/^f0108a5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108a60	obj/kern/kernel.asm	/^f0108a60:	e8 be fc ff ff       	call   f0108723 <memcmp>$/;"	l
f0108a65	obj/kern/kernel.asm	/^f0108a65:	85 c0                	test   %eax,%eax$/;"	l
f0108a67	obj/kern/kernel.asm	/^f0108a67:	75 1c                	jne    f0108a85 <mpsearch1+0x84>$/;"	l
f0108a69	obj/kern/kernel.asm	/^f0108a69:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0108a70	obj/kern/kernel.asm	/^f0108a70:	00 $/;"	l
f0108a71	obj/kern/kernel.asm	/^f0108a71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108a74	obj/kern/kernel.asm	/^f0108a74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108a77	obj/kern/kernel.asm	/^f0108a77:	e8 4d ff ff ff       	call   f01089c9 <sum>$/;"	l
f0108a7c	obj/kern/kernel.asm	/^f0108a7c:	84 c0                	test   %al,%al$/;"	l
f0108a7e	obj/kern/kernel.asm	/^f0108a7e:	75 05                	jne    f0108a85 <mpsearch1+0x84>$/;"	l
f0108a80	obj/kern/kernel.asm	/^f0108a80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108a83	obj/kern/kernel.asm	/^f0108a83:	eb 11                	jmp    f0108a96 <mpsearch1+0x95>$/;"	l
f0108a85	obj/kern/kernel.asm	/^f0108a85:	83 45 f4 10          	addl   $0x10,-0xc(%ebp)$/;"	l
f0108a89	obj/kern/kernel.asm	/^f0108a89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108a8c	obj/kern/kernel.asm	/^f0108a8c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0108a8f	obj/kern/kernel.asm	/^f0108a8f:	72 b9                	jb     f0108a4a <mpsearch1+0x49>$/;"	l
f0108a91	obj/kern/kernel.asm	/^f0108a91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108a96	obj/kern/kernel.asm	/^f0108a96:	c9                   	leave  $/;"	l
f0108a97	obj/kern/kernel.asm	/^f0108a97:	c3                   	ret    $/;"	l
f0108a98	obj/kern/kernel.asm	/^f0108a98 <mpsearch>:$/;"	l
f0108a98	obj/kern/kernel.asm	/^f0108a98:	55                   	push   %ebp$/;"	l
f0108a99	obj/kern/kernel.asm	/^f0108a99:	89 e5                	mov    %esp,%ebp$/;"	l
f0108a9b	obj/kern/kernel.asm	/^f0108a9b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0108a9e	obj/kern/kernel.asm	/^f0108a9e:	c7 44 24 08 00 04 00 	movl   $0x400,0x8(%esp)$/;"	l
f0108aa5	obj/kern/kernel.asm	/^f0108aa5:	00 $/;"	l
f0108aa6	obj/kern/kernel.asm	/^f0108aa6:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0108aad	obj/kern/kernel.asm	/^f0108aad:	00 $/;"	l
f0108aae	obj/kern/kernel.asm	/^f0108aae:	c7 04 24 bb c4 10 f0 	movl   $0xf010c4bb,(%esp)$/;"	l
f0108ab5	obj/kern/kernel.asm	/^f0108ab5:	e8 cd fe ff ff       	call   f0108987 <_kaddr>$/;"	l
f0108aba	obj/kern/kernel.asm	/^f0108aba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0108abd	obj/kern/kernel.asm	/^f0108abd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108ac0	obj/kern/kernel.asm	/^f0108ac0:	83 c0 0e             	add    $0xe,%eax$/;"	l
f0108ac3	obj/kern/kernel.asm	/^f0108ac3:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f0108ac6	obj/kern/kernel.asm	/^f0108ac6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108ac9	obj/kern/kernel.asm	/^f0108ac9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108acc	obj/kern/kernel.asm	/^f0108acc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0108ad0	obj/kern/kernel.asm	/^f0108ad0:	74 25                	je     f0108af7 <mpsearch+0x5f>$/;"	l
f0108ad2	obj/kern/kernel.asm	/^f0108ad2:	c1 65 f0 04          	shll   $0x4,-0x10(%ebp)$/;"	l
f0108ad6	obj/kern/kernel.asm	/^f0108ad6:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0108add	obj/kern/kernel.asm	/^f0108add:	00 $/;"	l
f0108ade	obj/kern/kernel.asm	/^f0108ade:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108ae1	obj/kern/kernel.asm	/^f0108ae1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108ae4	obj/kern/kernel.asm	/^f0108ae4:	e8 18 ff ff ff       	call   f0108a01 <mpsearch1>$/;"	l
f0108ae9	obj/kern/kernel.asm	/^f0108ae9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0108aec	obj/kern/kernel.asm	/^f0108aec:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0108af0	obj/kern/kernel.asm	/^f0108af0:	74 3d                	je     f0108b2f <mpsearch+0x97>$/;"	l
f0108af2	obj/kern/kernel.asm	/^f0108af2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108af5	obj/kern/kernel.asm	/^f0108af5:	eb 4c                	jmp    f0108b43 <mpsearch+0xab>$/;"	l
f0108af7	obj/kern/kernel.asm	/^f0108af7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108afa	obj/kern/kernel.asm	/^f0108afa:	83 c0 13             	add    $0x13,%eax$/;"	l
f0108afd	obj/kern/kernel.asm	/^f0108afd:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f0108b00	obj/kern/kernel.asm	/^f0108b00:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108b03	obj/kern/kernel.asm	/^f0108b03:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0108b06	obj/kern/kernel.asm	/^f0108b06:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108b09	obj/kern/kernel.asm	/^f0108b09:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108b0c	obj/kern/kernel.asm	/^f0108b0c:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0108b11	obj/kern/kernel.asm	/^f0108b11:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0108b18	obj/kern/kernel.asm	/^f0108b18:	00 $/;"	l
f0108b19	obj/kern/kernel.asm	/^f0108b19:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108b1c	obj/kern/kernel.asm	/^f0108b1c:	e8 e0 fe ff ff       	call   f0108a01 <mpsearch1>$/;"	l
f0108b21	obj/kern/kernel.asm	/^f0108b21:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0108b24	obj/kern/kernel.asm	/^f0108b24:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0108b28	obj/kern/kernel.asm	/^f0108b28:	74 05                	je     f0108b2f <mpsearch+0x97>$/;"	l
f0108b2a	obj/kern/kernel.asm	/^f0108b2a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108b2d	obj/kern/kernel.asm	/^f0108b2d:	eb 14                	jmp    f0108b43 <mpsearch+0xab>$/;"	l
f0108b2f	obj/kern/kernel.asm	/^f0108b2f:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
f0108b36	obj/kern/kernel.asm	/^f0108b36:	00 $/;"	l
f0108b37	obj/kern/kernel.asm	/^f0108b37:	c7 04 24 00 00 0f 00 	movl   $0xf0000,(%esp)$/;"	l
f0108b3e	obj/kern/kernel.asm	/^f0108b3e:	e8 be fe ff ff       	call   f0108a01 <mpsearch1>$/;"	l
f0108b43	obj/kern/kernel.asm	/^f0108b43:	c9                   	leave  $/;"	l
f0108b44	obj/kern/kernel.asm	/^f0108b44:	c3                   	ret    $/;"	l
f0108b45	obj/kern/kernel.asm	/^f0108b45 <mpconfig>:$/;"	l
f0108b45	obj/kern/kernel.asm	/^f0108b45:	55                   	push   %ebp$/;"	l
f0108b46	obj/kern/kernel.asm	/^f0108b46:	89 e5                	mov    %esp,%ebp$/;"	l
f0108b48	obj/kern/kernel.asm	/^f0108b48:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0108b4b	obj/kern/kernel.asm	/^f0108b4b:	e8 48 ff ff ff       	call   f0108a98 <mpsearch>$/;"	l
f0108b50	obj/kern/kernel.asm	/^f0108b50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0108b53	obj/kern/kernel.asm	/^f0108b53:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0108b57	obj/kern/kernel.asm	/^f0108b57:	75 0a                	jne    f0108b63 <mpconfig+0x1e>$/;"	l
f0108b59	obj/kern/kernel.asm	/^f0108b59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108b5e	obj/kern/kernel.asm	/^f0108b5e:	e9 44 01 00 00       	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108b63	obj/kern/kernel.asm	/^f0108b63:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108b66	obj/kern/kernel.asm	/^f0108b66:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0108b69	obj/kern/kernel.asm	/^f0108b69:	85 c0                	test   %eax,%eax$/;"	l
f0108b6b	obj/kern/kernel.asm	/^f0108b6b:	74 0b                	je     f0108b78 <mpconfig+0x33>$/;"	l
f0108b6d	obj/kern/kernel.asm	/^f0108b6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108b70	obj/kern/kernel.asm	/^f0108b70:	0f b6 40 0b          	movzbl 0xb(%eax),%eax$/;"	l
f0108b74	obj/kern/kernel.asm	/^f0108b74:	84 c0                	test   %al,%al$/;"	l
f0108b76	obj/kern/kernel.asm	/^f0108b76:	74 16                	je     f0108b8e <mpconfig+0x49>$/;"	l
f0108b78	obj/kern/kernel.asm	/^f0108b78:	c7 04 24 d0 c4 10 f0 	movl   $0xf010c4d0,(%esp)$/;"	l
f0108b7f	obj/kern/kernel.asm	/^f0108b7f:	e8 bb c7 ff ff       	call   f010533f <cprintf>$/;"	l
f0108b84	obj/kern/kernel.asm	/^f0108b84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108b89	obj/kern/kernel.asm	/^f0108b89:	e9 19 01 00 00       	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108b8e	obj/kern/kernel.asm	/^f0108b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108b91	obj/kern/kernel.asm	/^f0108b91:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0108b94	obj/kern/kernel.asm	/^f0108b94:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108b98	obj/kern/kernel.asm	/^f0108b98:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0108b9f	obj/kern/kernel.asm	/^f0108b9f:	00 $/;"	l
f0108ba0	obj/kern/kernel.asm	/^f0108ba0:	c7 04 24 bb c4 10 f0 	movl   $0xf010c4bb,(%esp)$/;"	l
f0108ba7	obj/kern/kernel.asm	/^f0108ba7:	e8 db fd ff ff       	call   f0108987 <_kaddr>$/;"	l
f0108bac	obj/kern/kernel.asm	/^f0108bac:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108baf	obj/kern/kernel.asm	/^f0108baf:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0108bb6	obj/kern/kernel.asm	/^f0108bb6:	00 $/;"	l
f0108bb7	obj/kern/kernel.asm	/^f0108bb7:	c7 44 24 04 fd c4 10 	movl   $0xf010c4fd,0x4(%esp)$/;"	l
f0108bbe	obj/kern/kernel.asm	/^f0108bbe:	f0 $/;"	l
f0108bbf	obj/kern/kernel.asm	/^f0108bbf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108bc2	obj/kern/kernel.asm	/^f0108bc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108bc5	obj/kern/kernel.asm	/^f0108bc5:	e8 59 fb ff ff       	call   f0108723 <memcmp>$/;"	l
f0108bca	obj/kern/kernel.asm	/^f0108bca:	85 c0                	test   %eax,%eax$/;"	l
f0108bcc	obj/kern/kernel.asm	/^f0108bcc:	74 16                	je     f0108be4 <mpconfig+0x9f>$/;"	l
f0108bce	obj/kern/kernel.asm	/^f0108bce:	c7 04 24 04 c5 10 f0 	movl   $0xf010c504,(%esp)$/;"	l
f0108bd5	obj/kern/kernel.asm	/^f0108bd5:	e8 65 c7 ff ff       	call   f010533f <cprintf>$/;"	l
f0108bda	obj/kern/kernel.asm	/^f0108bda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108bdf	obj/kern/kernel.asm	/^f0108bdf:	e9 c3 00 00 00       	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108be4	obj/kern/kernel.asm	/^f0108be4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108be7	obj/kern/kernel.asm	/^f0108be7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0108beb	obj/kern/kernel.asm	/^f0108beb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108bee	obj/kern/kernel.asm	/^f0108bee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108bf2	obj/kern/kernel.asm	/^f0108bf2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108bf5	obj/kern/kernel.asm	/^f0108bf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108bf8	obj/kern/kernel.asm	/^f0108bf8:	e8 cc fd ff ff       	call   f01089c9 <sum>$/;"	l
f0108bfd	obj/kern/kernel.asm	/^f0108bfd:	84 c0                	test   %al,%al$/;"	l
f0108bff	obj/kern/kernel.asm	/^f0108bff:	74 16                	je     f0108c17 <mpconfig+0xd2>$/;"	l
f0108c01	obj/kern/kernel.asm	/^f0108c01:	c7 04 24 38 c5 10 f0 	movl   $0xf010c538,(%esp)$/;"	l
f0108c08	obj/kern/kernel.asm	/^f0108c08:	e8 32 c7 ff ff       	call   f010533f <cprintf>$/;"	l
f0108c0d	obj/kern/kernel.asm	/^f0108c0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108c12	obj/kern/kernel.asm	/^f0108c12:	e9 90 00 00 00       	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108c17	obj/kern/kernel.asm	/^f0108c17:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108c1a	obj/kern/kernel.asm	/^f0108c1a:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f0108c1e	obj/kern/kernel.asm	/^f0108c1e:	3c 01                	cmp    $0x1,%al$/;"	l
f0108c20	obj/kern/kernel.asm	/^f0108c20:	74 2c                	je     f0108c4e <mpconfig+0x109>$/;"	l
f0108c22	obj/kern/kernel.asm	/^f0108c22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108c25	obj/kern/kernel.asm	/^f0108c25:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f0108c29	obj/kern/kernel.asm	/^f0108c29:	3c 04                	cmp    $0x4,%al$/;"	l
f0108c2b	obj/kern/kernel.asm	/^f0108c2b:	74 21                	je     f0108c4e <mpconfig+0x109>$/;"	l
f0108c2d	obj/kern/kernel.asm	/^f0108c2d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108c30	obj/kern/kernel.asm	/^f0108c30:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f0108c34	obj/kern/kernel.asm	/^f0108c34:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108c37	obj/kern/kernel.asm	/^f0108c37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108c3b	obj/kern/kernel.asm	/^f0108c3b:	c7 04 24 5c c5 10 f0 	movl   $0xf010c55c,(%esp)$/;"	l
f0108c42	obj/kern/kernel.asm	/^f0108c42:	e8 f8 c6 ff ff       	call   f010533f <cprintf>$/;"	l
f0108c47	obj/kern/kernel.asm	/^f0108c47:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108c4c	obj/kern/kernel.asm	/^f0108c4c:	eb 59                	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108c4e	obj/kern/kernel.asm	/^f0108c4e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108c51	obj/kern/kernel.asm	/^f0108c51:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
f0108c55	obj/kern/kernel.asm	/^f0108c55:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108c58	obj/kern/kernel.asm	/^f0108c58:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0108c5b	obj/kern/kernel.asm	/^f0108c5b:	0f b7 52 04          	movzwl 0x4(%edx),%edx$/;"	l
f0108c5f	obj/kern/kernel.asm	/^f0108c5f:	0f b7 ca             	movzwl %dx,%ecx$/;"	l
f0108c62	obj/kern/kernel.asm	/^f0108c62:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0108c65	obj/kern/kernel.asm	/^f0108c65:	01 ca                	add    %ecx,%edx$/;"	l
f0108c67	obj/kern/kernel.asm	/^f0108c67:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108c6b	obj/kern/kernel.asm	/^f0108c6b:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0108c6e	obj/kern/kernel.asm	/^f0108c6e:	e8 56 fd ff ff       	call   f01089c9 <sum>$/;"	l
f0108c73	obj/kern/kernel.asm	/^f0108c73:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0108c76	obj/kern/kernel.asm	/^f0108c76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108c79	obj/kern/kernel.asm	/^f0108c79:	0f b6 40 2a          	movzbl 0x2a(%eax),%eax$/;"	l
f0108c7d	obj/kern/kernel.asm	/^f0108c7d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108c80	obj/kern/kernel.asm	/^f0108c80:	01 d0                	add    %edx,%eax$/;"	l
f0108c82	obj/kern/kernel.asm	/^f0108c82:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108c85	obj/kern/kernel.asm	/^f0108c85:	85 c0                	test   %eax,%eax$/;"	l
f0108c87	obj/kern/kernel.asm	/^f0108c87:	74 13                	je     f0108c9c <mpconfig+0x157>$/;"	l
f0108c89	obj/kern/kernel.asm	/^f0108c89:	c7 04 24 7c c5 10 f0 	movl   $0xf010c57c,(%esp)$/;"	l
f0108c90	obj/kern/kernel.asm	/^f0108c90:	e8 aa c6 ff ff       	call   f010533f <cprintf>$/;"	l
f0108c95	obj/kern/kernel.asm	/^f0108c95:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108c9a	obj/kern/kernel.asm	/^f0108c9a:	eb 0b                	jmp    f0108ca7 <mpconfig+0x162>$/;"	l
f0108c9c	obj/kern/kernel.asm	/^f0108c9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108c9f	obj/kern/kernel.asm	/^f0108c9f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0108ca2	obj/kern/kernel.asm	/^f0108ca2:	89 10                	mov    %edx,(%eax)$/;"	l
f0108ca4	obj/kern/kernel.asm	/^f0108ca4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0108ca7	obj/kern/kernel.asm	/^f0108ca7:	c9                   	leave  $/;"	l
f0108ca8	obj/kern/kernel.asm	/^f0108ca8:	c3                   	ret    $/;"	l
f0108ca9	obj/kern/kernel.asm	/^f0108ca9 <mp_init>:$/;"	l
f0108ca9	obj/kern/kernel.asm	/^f0108ca9:	55                   	push   %ebp$/;"	l
f0108caa	obj/kern/kernel.asm	/^f0108caa:	89 e5                	mov    %esp,%ebp$/;"	l
f0108cac	obj/kern/kernel.asm	/^f0108cac:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0108caf	obj/kern/kernel.asm	/^f0108caf:	c7 05 c0 13 2f f0 20 	movl   $0xf02f1020,0xf02f13c0$/;"	l
f0108cb6	obj/kern/kernel.asm	/^f0108cb6:	10 2f f0 $/;"	l
f0108cb9	obj/kern/kernel.asm	/^f0108cb9:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
f0108cbc	obj/kern/kernel.asm	/^f0108cbc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108cbf	obj/kern/kernel.asm	/^f0108cbf:	e8 81 fe ff ff       	call   f0108b45 <mpconfig>$/;"	l
f0108cc4	obj/kern/kernel.asm	/^f0108cc4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0108cc7	obj/kern/kernel.asm	/^f0108cc7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0108ccb	obj/kern/kernel.asm	/^f0108ccb:	75 05                	jne    f0108cd2 <mp_init+0x29>$/;"	l
f0108ccd	obj/kern/kernel.asm	/^f0108ccd:	e9 c1 01 00 00       	jmp    f0108e93 <mp_init+0x1ea>$/;"	l
f0108cd2	obj/kern/kernel.asm	/^f0108cd2:	c7 05 00 10 2f f0 01 	movl   $0x1,0xf02f1000$/;"	l
f0108cd9	obj/kern/kernel.asm	/^f0108cd9:	00 00 00 $/;"	l
f0108cdc	obj/kern/kernel.asm	/^f0108cdc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108cdf	obj/kern/kernel.asm	/^f0108cdf:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
f0108ce2	obj/kern/kernel.asm	/^f0108ce2:	a3 00 20 33 f0       	mov    %eax,0xf0332000$/;"	l
f0108ce7	obj/kern/kernel.asm	/^f0108ce7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108cea	obj/kern/kernel.asm	/^f0108cea:	83 c0 2c             	add    $0x2c,%eax$/;"	l
f0108ced	obj/kern/kernel.asm	/^f0108ced:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0108cf0	obj/kern/kernel.asm	/^f0108cf0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0108cf7	obj/kern/kernel.asm	/^f0108cf7:	e9 d2 00 00 00       	jmp    f0108dce <mp_init+0x125>$/;"	l
f0108cfc	obj/kern/kernel.asm	/^f0108cfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108cff	obj/kern/kernel.asm	/^f0108cff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108d02	obj/kern/kernel.asm	/^f0108d02:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108d05	obj/kern/kernel.asm	/^f0108d05:	85 c0                	test   %eax,%eax$/;"	l
f0108d07	obj/kern/kernel.asm	/^f0108d07:	74 13                	je     f0108d1c <mp_init+0x73>$/;"	l
f0108d09	obj/kern/kernel.asm	/^f0108d09:	85 c0                	test   %eax,%eax$/;"	l
f0108d0b	obj/kern/kernel.asm	/^f0108d0b:	0f 88 89 00 00 00    	js     f0108d9a <mp_init+0xf1>$/;"	l
f0108d11	obj/kern/kernel.asm	/^f0108d11:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0108d14	obj/kern/kernel.asm	/^f0108d14:	0f 8f 80 00 00 00    	jg     f0108d9a <mp_init+0xf1>$/;"	l
f0108d1a	obj/kern/kernel.asm	/^f0108d1a:	eb 78                	jmp    f0108d94 <mp_init+0xeb>$/;"	l
f0108d1c	obj/kern/kernel.asm	/^f0108d1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108d1f	obj/kern/kernel.asm	/^f0108d1f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0108d22	obj/kern/kernel.asm	/^f0108d22:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0108d25	obj/kern/kernel.asm	/^f0108d25:	0f b6 40 03          	movzbl 0x3(%eax),%eax$/;"	l
f0108d29	obj/kern/kernel.asm	/^f0108d29:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108d2c	obj/kern/kernel.asm	/^f0108d2c:	83 e0 02             	and    $0x2,%eax$/;"	l
f0108d2f	obj/kern/kernel.asm	/^f0108d2f:	85 c0                	test   %eax,%eax$/;"	l
f0108d31	obj/kern/kernel.asm	/^f0108d31:	74 12                	je     f0108d45 <mp_init+0x9c>$/;"	l
f0108d33	obj/kern/kernel.asm	/^f0108d33:	a1 c4 13 2f f0       	mov    0xf02f13c4,%eax$/;"	l
f0108d38	obj/kern/kernel.asm	/^f0108d38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0108d3b	obj/kern/kernel.asm	/^f0108d3b:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f0108d40	obj/kern/kernel.asm	/^f0108d40:	a3 c0 13 2f f0       	mov    %eax,0xf02f13c0$/;"	l
f0108d45	obj/kern/kernel.asm	/^f0108d45:	a1 c4 13 2f f0       	mov    0xf02f13c4,%eax$/;"	l
f0108d4a	obj/kern/kernel.asm	/^f0108d4a:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0108d4d	obj/kern/kernel.asm	/^f0108d4d:	7f 25                	jg     f0108d74 <mp_init+0xcb>$/;"	l
f0108d4f	obj/kern/kernel.asm	/^f0108d4f:	8b 15 c4 13 2f f0    	mov    0xf02f13c4,%edx$/;"	l
f0108d55	obj/kern/kernel.asm	/^f0108d55:	a1 c4 13 2f f0       	mov    0xf02f13c4,%eax$/;"	l
f0108d5a	obj/kern/kernel.asm	/^f0108d5a:	6b d2 74             	imul   $0x74,%edx,%edx$/;"	l
f0108d5d	obj/kern/kernel.asm	/^f0108d5d:	81 c2 20 10 2f f0    	add    $0xf02f1020,%edx$/;"	l
f0108d63	obj/kern/kernel.asm	/^f0108d63:	88 02                	mov    %al,(%edx)$/;"	l
f0108d65	obj/kern/kernel.asm	/^f0108d65:	a1 c4 13 2f f0       	mov    0xf02f13c4,%eax$/;"	l
f0108d6a	obj/kern/kernel.asm	/^f0108d6a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0108d6d	obj/kern/kernel.asm	/^f0108d6d:	a3 c4 13 2f f0       	mov    %eax,0xf02f13c4$/;"	l
f0108d72	obj/kern/kernel.asm	/^f0108d72:	eb 1a                	jmp    f0108d8e <mp_init+0xe5>$/;"	l
f0108d74	obj/kern/kernel.asm	/^f0108d74:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0108d77	obj/kern/kernel.asm	/^f0108d77:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0108d7b	obj/kern/kernel.asm	/^f0108d7b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108d7e	obj/kern/kernel.asm	/^f0108d7e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108d82	obj/kern/kernel.asm	/^f0108d82:	c7 04 24 ac c5 10 f0 	movl   $0xf010c5ac,(%esp)$/;"	l
f0108d89	obj/kern/kernel.asm	/^f0108d89:	e8 b1 c5 ff ff       	call   f010533f <cprintf>$/;"	l
f0108d8e	obj/kern/kernel.asm	/^f0108d8e:	83 45 f4 14          	addl   $0x14,-0xc(%ebp)$/;"	l
f0108d92	obj/kern/kernel.asm	/^f0108d92:	eb 36                	jmp    f0108dca <mp_init+0x121>$/;"	l
f0108d94	obj/kern/kernel.asm	/^f0108d94:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)$/;"	l
f0108d98	obj/kern/kernel.asm	/^f0108d98:	eb 30                	jmp    f0108dca <mp_init+0x121>$/;"	l
f0108d9a	obj/kern/kernel.asm	/^f0108d9a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0108d9d	obj/kern/kernel.asm	/^f0108d9d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108da0	obj/kern/kernel.asm	/^f0108da0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108da3	obj/kern/kernel.asm	/^f0108da3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108da7	obj/kern/kernel.asm	/^f0108da7:	c7 04 24 d4 c5 10 f0 	movl   $0xf010c5d4,(%esp)$/;"	l
f0108dae	obj/kern/kernel.asm	/^f0108dae:	e8 8c c5 ff ff       	call   f010533f <cprintf>$/;"	l
f0108db3	obj/kern/kernel.asm	/^f0108db3:	c7 05 00 10 2f f0 00 	movl   $0x0,0xf02f1000$/;"	l
f0108dba	obj/kern/kernel.asm	/^f0108dba:	00 00 00 $/;"	l
f0108dbd	obj/kern/kernel.asm	/^f0108dbd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108dc0	obj/kern/kernel.asm	/^f0108dc0:	0f b7 40 22          	movzwl 0x22(%eax),%eax$/;"	l
f0108dc4	obj/kern/kernel.asm	/^f0108dc4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108dc7	obj/kern/kernel.asm	/^f0108dc7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0108dca	obj/kern/kernel.asm	/^f0108dca:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0108dce	obj/kern/kernel.asm	/^f0108dce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0108dd1	obj/kern/kernel.asm	/^f0108dd1:	0f b7 40 22          	movzwl 0x22(%eax),%eax$/;"	l
f0108dd5	obj/kern/kernel.asm	/^f0108dd5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0108dd8	obj/kern/kernel.asm	/^f0108dd8:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0108ddb	obj/kern/kernel.asm	/^f0108ddb:	0f 87 1b ff ff ff    	ja     f0108cfc <mp_init+0x53>$/;"	l
f0108de1	obj/kern/kernel.asm	/^f0108de1:	a1 c0 13 2f f0       	mov    0xf02f13c0,%eax$/;"	l
f0108de6	obj/kern/kernel.asm	/^f0108de6:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0108ded	obj/kern/kernel.asm	/^f0108ded:	a1 00 10 2f f0       	mov    0xf02f1000,%eax$/;"	l
f0108df2	obj/kern/kernel.asm	/^f0108df2:	85 c0                	test   %eax,%eax$/;"	l
f0108df4	obj/kern/kernel.asm	/^f0108df4:	75 22                	jne    f0108e18 <mp_init+0x16f>$/;"	l
f0108df6	obj/kern/kernel.asm	/^f0108df6:	c7 05 c4 13 2f f0 01 	movl   $0x1,0xf02f13c4$/;"	l
f0108dfd	obj/kern/kernel.asm	/^f0108dfd:	00 00 00 $/;"	l
f0108e00	obj/kern/kernel.asm	/^f0108e00:	c7 05 00 20 33 f0 00 	movl   $0x0,0xf0332000$/;"	l
f0108e07	obj/kern/kernel.asm	/^f0108e07:	00 00 00 $/;"	l
f0108e0a	obj/kern/kernel.asm	/^f0108e0a:	c7 04 24 f4 c5 10 f0 	movl   $0xf010c5f4,(%esp)$/;"	l
f0108e11	obj/kern/kernel.asm	/^f0108e11:	e8 29 c5 ff ff       	call   f010533f <cprintf>$/;"	l
f0108e16	obj/kern/kernel.asm	/^f0108e16:	eb 7b                	jmp    f0108e93 <mp_init+0x1ea>$/;"	l
f0108e18	obj/kern/kernel.asm	/^f0108e18:	8b 15 c4 13 2f f0    	mov    0xf02f13c4,%edx$/;"	l
f0108e1e	obj/kern/kernel.asm	/^f0108e1e:	a1 c0 13 2f f0       	mov    0xf02f13c0,%eax$/;"	l
f0108e23	obj/kern/kernel.asm	/^f0108e23:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108e26	obj/kern/kernel.asm	/^f0108e26:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108e29	obj/kern/kernel.asm	/^f0108e29:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0108e2d	obj/kern/kernel.asm	/^f0108e2d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108e31	obj/kern/kernel.asm	/^f0108e31:	c7 04 24 20 c6 10 f0 	movl   $0xf010c620,(%esp)$/;"	l
f0108e38	obj/kern/kernel.asm	/^f0108e38:	e8 02 c5 ff ff       	call   f010533f <cprintf>$/;"	l
f0108e3d	obj/kern/kernel.asm	/^f0108e3d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0108e40	obj/kern/kernel.asm	/^f0108e40:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0108e44	obj/kern/kernel.asm	/^f0108e44:	84 c0                	test   %al,%al$/;"	l
f0108e46	obj/kern/kernel.asm	/^f0108e46:	74 4b                	je     f0108e93 <mp_init+0x1ea>$/;"	l
f0108e48	obj/kern/kernel.asm	/^f0108e48:	c7 04 24 40 c6 10 f0 	movl   $0xf010c640,(%esp)$/;"	l
f0108e4f	obj/kern/kernel.asm	/^f0108e4f:	e8 eb c4 ff ff       	call   f010533f <cprintf>$/;"	l
f0108e54	obj/kern/kernel.asm	/^f0108e54:	c7 45 e4 22 00 00 00 	movl   $0x22,-0x1c(%ebp)$/;"	l
f0108e5b	obj/kern/kernel.asm	/^f0108e5b:	c6 45 e3 70          	movb   $0x70,-0x1d(%ebp)$/;"	l
f0108e5f	obj/kern/kernel.asm	/^f0108e5f:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f0108e63	obj/kern/kernel.asm	/^f0108e63:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0108e66	obj/kern/kernel.asm	/^f0108e66:	ee                   	out    %al,(%dx)$/;"	l
f0108e67	obj/kern/kernel.asm	/^f0108e67:	c7 45 dc 23 00 00 00 	movl   $0x23,-0x24(%ebp)$/;"	l
f0108e6e	obj/kern/kernel.asm	/^f0108e6e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0108e71	obj/kern/kernel.asm	/^f0108e71:	89 c2                	mov    %eax,%edx$/;"	l
f0108e73	obj/kern/kernel.asm	/^f0108e73:	ec                   	in     (%dx),%al$/;"	l
f0108e74	obj/kern/kernel.asm	/^f0108e74:	88 45 db             	mov    %al,-0x25(%ebp)$/;"	l
f0108e77	obj/kern/kernel.asm	/^f0108e77:	0f b6 45 db          	movzbl -0x25(%ebp),%eax$/;"	l
f0108e7b	obj/kern/kernel.asm	/^f0108e7b:	83 c8 01             	or     $0x1,%eax$/;"	l
f0108e7e	obj/kern/kernel.asm	/^f0108e7e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108e81	obj/kern/kernel.asm	/^f0108e81:	c7 45 d4 23 00 00 00 	movl   $0x23,-0x2c(%ebp)$/;"	l
f0108e88	obj/kern/kernel.asm	/^f0108e88:	88 45 d3             	mov    %al,-0x2d(%ebp)$/;"	l
f0108e8b	obj/kern/kernel.asm	/^f0108e8b:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f0108e8f	obj/kern/kernel.asm	/^f0108e8f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0108e92	obj/kern/kernel.asm	/^f0108e92:	ee                   	out    %al,(%dx)$/;"	l
f0108e93	obj/kern/kernel.asm	/^f0108e93:	c9                   	leave  $/;"	l
f0108e94	obj/kern/kernel.asm	/^f0108e94:	c3                   	ret    $/;"	l
f0108e95	obj/kern/kernel.asm	/^f0108e95 <_kaddr>:$/;"	l
f0108e95	obj/kern/kernel.asm	/^f0108e95:	55                   	push   %ebp$/;"	l
f0108e96	obj/kern/kernel.asm	/^f0108e96:	89 e5                	mov    %esp,%ebp$/;"	l
f0108e98	obj/kern/kernel.asm	/^f0108e98:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0108e9b	obj/kern/kernel.asm	/^f0108e9b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108e9e	obj/kern/kernel.asm	/^f0108e9e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0108ea1	obj/kern/kernel.asm	/^f0108ea1:	89 c2                	mov    %eax,%edx$/;"	l
f0108ea3	obj/kern/kernel.asm	/^f0108ea3:	a1 28 0f 2f f0       	mov    0xf02f0f28,%eax$/;"	l
f0108ea8	obj/kern/kernel.asm	/^f0108ea8:	39 c2                	cmp    %eax,%edx$/;"	l
f0108eaa	obj/kern/kernel.asm	/^f0108eaa:	72 21                	jb     f0108ecd <_kaddr+0x38>$/;"	l
f0108eac	obj/kern/kernel.asm	/^f0108eac:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108eaf	obj/kern/kernel.asm	/^f0108eaf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0108eb3	obj/kern/kernel.asm	/^f0108eb3:	c7 44 24 08 84 c6 10 	movl   $0xf010c684,0x8(%esp)$/;"	l
f0108eba	obj/kern/kernel.asm	/^f0108eba:	f0 $/;"	l
f0108ebb	obj/kern/kernel.asm	/^f0108ebb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108ebe	obj/kern/kernel.asm	/^f0108ebe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108ec2	obj/kern/kernel.asm	/^f0108ec2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108ec5	obj/kern/kernel.asm	/^f0108ec5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108ec8	obj/kern/kernel.asm	/^f0108ec8:	e8 35 74 ff ff       	call   f0100302 <_panic>$/;"	l
f0108ecd	obj/kern/kernel.asm	/^f0108ecd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0108ed0	obj/kern/kernel.asm	/^f0108ed0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0108ed5	obj/kern/kernel.asm	/^f0108ed5:	c9                   	leave  $/;"	l
f0108ed6	obj/kern/kernel.asm	/^f0108ed6:	c3                   	ret    $/;"	l
f0108ed7	obj/kern/kernel.asm	/^f0108ed7 <lapicw>:$/;"	l
f0108ed7	obj/kern/kernel.asm	/^f0108ed7:	55                   	push   %ebp$/;"	l
f0108ed8	obj/kern/kernel.asm	/^f0108ed8:	89 e5                	mov    %esp,%ebp$/;"	l
f0108eda	obj/kern/kernel.asm	/^f0108eda:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f0108edf	obj/kern/kernel.asm	/^f0108edf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0108ee2	obj/kern/kernel.asm	/^f0108ee2:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0108ee5	obj/kern/kernel.asm	/^f0108ee5:	01 c2                	add    %eax,%edx$/;"	l
f0108ee7	obj/kern/kernel.asm	/^f0108ee7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0108eea	obj/kern/kernel.asm	/^f0108eea:	89 02                	mov    %eax,(%edx)$/;"	l
f0108eec	obj/kern/kernel.asm	/^f0108eec:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f0108ef1	obj/kern/kernel.asm	/^f0108ef1:	83 c0 20             	add    $0x20,%eax$/;"	l
f0108ef4	obj/kern/kernel.asm	/^f0108ef4:	8b 00                	mov    (%eax),%eax$/;"	l
f0108ef6	obj/kern/kernel.asm	/^f0108ef6:	5d                   	pop    %ebp$/;"	l
f0108ef7	obj/kern/kernel.asm	/^f0108ef7:	c3                   	ret    $/;"	l
f0108ef8	obj/kern/kernel.asm	/^f0108ef8 <lapic_init>:$/;"	l
f0108ef8	obj/kern/kernel.asm	/^f0108ef8:	55                   	push   %ebp$/;"	l
f0108ef9	obj/kern/kernel.asm	/^f0108ef9:	89 e5                	mov    %esp,%ebp$/;"	l
f0108efb	obj/kern/kernel.asm	/^f0108efb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0108efe	obj/kern/kernel.asm	/^f0108efe:	a1 00 20 33 f0       	mov    0xf0332000,%eax$/;"	l
f0108f03	obj/kern/kernel.asm	/^f0108f03:	85 c0                	test   %eax,%eax$/;"	l
f0108f05	obj/kern/kernel.asm	/^f0108f05:	75 05                	jne    f0108f0c <lapic_init+0x14>$/;"	l
f0108f07	obj/kern/kernel.asm	/^f0108f07:	e9 74 01 00 00       	jmp    f0109080 <lapic_init+0x188>$/;"	l
f0108f0c	obj/kern/kernel.asm	/^f0108f0c:	a1 00 20 33 f0       	mov    0xf0332000,%eax$/;"	l
f0108f11	obj/kern/kernel.asm	/^f0108f11:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0108f18	obj/kern/kernel.asm	/^f0108f18:	00 $/;"	l
f0108f19	obj/kern/kernel.asm	/^f0108f19:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0108f1c	obj/kern/kernel.asm	/^f0108f1c:	e8 26 90 ff ff       	call   f0101f47 <mmio_map_region>$/;"	l
f0108f21	obj/kern/kernel.asm	/^f0108f21:	a3 04 20 33 f0       	mov    %eax,0xf0332004$/;"	l
f0108f26	obj/kern/kernel.asm	/^f0108f26:	c7 44 24 04 27 01 00 	movl   $0x127,0x4(%esp)$/;"	l
f0108f2d	obj/kern/kernel.asm	/^f0108f2d:	00 $/;"	l
f0108f2e	obj/kern/kernel.asm	/^f0108f2e:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)$/;"	l
f0108f35	obj/kern/kernel.asm	/^f0108f35:	e8 9d ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108f3a	obj/kern/kernel.asm	/^f0108f3a:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)$/;"	l
f0108f41	obj/kern/kernel.asm	/^f0108f41:	00 $/;"	l
f0108f42	obj/kern/kernel.asm	/^f0108f42:	c7 04 24 f8 00 00 00 	movl   $0xf8,(%esp)$/;"	l
f0108f49	obj/kern/kernel.asm	/^f0108f49:	e8 89 ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108f4e	obj/kern/kernel.asm	/^f0108f4e:	c7 44 24 04 20 00 02 	movl   $0x20020,0x4(%esp)$/;"	l
f0108f55	obj/kern/kernel.asm	/^f0108f55:	00 $/;"	l
f0108f56	obj/kern/kernel.asm	/^f0108f56:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
f0108f5d	obj/kern/kernel.asm	/^f0108f5d:	e8 75 ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108f62	obj/kern/kernel.asm	/^f0108f62:	c7 44 24 04 80 96 98 	movl   $0x989680,0x4(%esp)$/;"	l
f0108f69	obj/kern/kernel.asm	/^f0108f69:	00 $/;"	l
f0108f6a	obj/kern/kernel.asm	/^f0108f6a:	c7 04 24 e0 00 00 00 	movl   $0xe0,(%esp)$/;"	l
f0108f71	obj/kern/kernel.asm	/^f0108f71:	e8 61 ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108f76	obj/kern/kernel.asm	/^f0108f76:	e8 07 01 00 00       	call   f0109082 <cpunum>$/;"	l
f0108f7b	obj/kern/kernel.asm	/^f0108f7b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0108f7e	obj/kern/kernel.asm	/^f0108f7e:	8d 90 20 10 2f f0    	lea    -0xfd0efe0(%eax),%edx$/;"	l
f0108f84	obj/kern/kernel.asm	/^f0108f84:	a1 c0 13 2f f0       	mov    0xf02f13c0,%eax$/;"	l
f0108f89	obj/kern/kernel.asm	/^f0108f89:	39 c2                	cmp    %eax,%edx$/;"	l
f0108f8b	obj/kern/kernel.asm	/^f0108f8b:	74 14                	je     f0108fa1 <lapic_init+0xa9>$/;"	l
f0108f8d	obj/kern/kernel.asm	/^f0108f8d:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
f0108f94	obj/kern/kernel.asm	/^f0108f94:	00 $/;"	l
f0108f95	obj/kern/kernel.asm	/^f0108f95:	c7 04 24 d4 00 00 00 	movl   $0xd4,(%esp)$/;"	l
f0108f9c	obj/kern/kernel.asm	/^f0108f9c:	e8 36 ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108fa1	obj/kern/kernel.asm	/^f0108fa1:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
f0108fa8	obj/kern/kernel.asm	/^f0108fa8:	00 $/;"	l
f0108fa9	obj/kern/kernel.asm	/^f0108fa9:	c7 04 24 d8 00 00 00 	movl   $0xd8,(%esp)$/;"	l
f0108fb0	obj/kern/kernel.asm	/^f0108fb0:	e8 22 ff ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108fb5	obj/kern/kernel.asm	/^f0108fb5:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f0108fba	obj/kern/kernel.asm	/^f0108fba:	83 c0 30             	add    $0x30,%eax$/;"	l
f0108fbd	obj/kern/kernel.asm	/^f0108fbd:	8b 00                	mov    (%eax),%eax$/;"	l
f0108fbf	obj/kern/kernel.asm	/^f0108fbf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0108fc2	obj/kern/kernel.asm	/^f0108fc2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108fc5	obj/kern/kernel.asm	/^f0108fc5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0108fc8	obj/kern/kernel.asm	/^f0108fc8:	76 14                	jbe    f0108fde <lapic_init+0xe6>$/;"	l
f0108fca	obj/kern/kernel.asm	/^f0108fca:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
f0108fd1	obj/kern/kernel.asm	/^f0108fd1:	00 $/;"	l
f0108fd2	obj/kern/kernel.asm	/^f0108fd2:	c7 04 24 d0 00 00 00 	movl   $0xd0,(%esp)$/;"	l
f0108fd9	obj/kern/kernel.asm	/^f0108fd9:	e8 f9 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108fde	obj/kern/kernel.asm	/^f0108fde:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
f0108fe5	obj/kern/kernel.asm	/^f0108fe5:	00 $/;"	l
f0108fe6	obj/kern/kernel.asm	/^f0108fe6:	c7 04 24 dc 00 00 00 	movl   $0xdc,(%esp)$/;"	l
f0108fed	obj/kern/kernel.asm	/^f0108fed:	e8 e5 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0108ff2	obj/kern/kernel.asm	/^f0108ff2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0108ff9	obj/kern/kernel.asm	/^f0108ff9:	00 $/;"	l
f0108ffa	obj/kern/kernel.asm	/^f0108ffa:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)$/;"	l
f0109001	obj/kern/kernel.asm	/^f0109001:	e8 d1 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109006	obj/kern/kernel.asm	/^f0109006:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010900d	obj/kern/kernel.asm	/^f010900d:	00 $/;"	l
f010900e	obj/kern/kernel.asm	/^f010900e:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)$/;"	l
f0109015	obj/kern/kernel.asm	/^f0109015:	e8 bd fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f010901a	obj/kern/kernel.asm	/^f010901a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0109021	obj/kern/kernel.asm	/^f0109021:	00 $/;"	l
f0109022	obj/kern/kernel.asm	/^f0109022:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
f0109029	obj/kern/kernel.asm	/^f0109029:	e8 a9 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f010902e	obj/kern/kernel.asm	/^f010902e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0109035	obj/kern/kernel.asm	/^f0109035:	00 $/;"	l
f0109036	obj/kern/kernel.asm	/^f0109036:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
f010903d	obj/kern/kernel.asm	/^f010903d:	e8 95 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109042	obj/kern/kernel.asm	/^f0109042:	c7 44 24 04 00 85 08 	movl   $0x88500,0x4(%esp)$/;"	l
f0109049	obj/kern/kernel.asm	/^f0109049:	00 $/;"	l
f010904a	obj/kern/kernel.asm	/^f010904a:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
f0109051	obj/kern/kernel.asm	/^f0109051:	e8 81 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109056	obj/kern/kernel.asm	/^f0109056:	90                   	nop$/;"	l
f0109057	obj/kern/kernel.asm	/^f0109057:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f010905c	obj/kern/kernel.asm	/^f010905c:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
f0109061	obj/kern/kernel.asm	/^f0109061:	8b 00                	mov    (%eax),%eax$/;"	l
f0109063	obj/kern/kernel.asm	/^f0109063:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f0109068	obj/kern/kernel.asm	/^f0109068:	85 c0                	test   %eax,%eax$/;"	l
f010906a	obj/kern/kernel.asm	/^f010906a:	75 eb                	jne    f0109057 <lapic_init+0x15f>$/;"	l
f010906c	obj/kern/kernel.asm	/^f010906c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0109073	obj/kern/kernel.asm	/^f0109073:	00 $/;"	l
f0109074	obj/kern/kernel.asm	/^f0109074:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f010907b	obj/kern/kernel.asm	/^f010907b:	e8 57 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109080	obj/kern/kernel.asm	/^f0109080:	c9                   	leave  $/;"	l
f0109081	obj/kern/kernel.asm	/^f0109081:	c3                   	ret    $/;"	l
f0109082	obj/kern/kernel.asm	/^f0109082 <cpunum>:$/;"	l
f0109082	obj/kern/kernel.asm	/^f0109082:	55                   	push   %ebp$/;"	l
f0109083	obj/kern/kernel.asm	/^f0109083:	89 e5                	mov    %esp,%ebp$/;"	l
f0109085	obj/kern/kernel.asm	/^f0109085:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f010908a	obj/kern/kernel.asm	/^f010908a:	85 c0                	test   %eax,%eax$/;"	l
f010908c	obj/kern/kernel.asm	/^f010908c:	74 0f                	je     f010909d <cpunum+0x1b>$/;"	l
f010908e	obj/kern/kernel.asm	/^f010908e:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f0109093	obj/kern/kernel.asm	/^f0109093:	83 c0 20             	add    $0x20,%eax$/;"	l
f0109096	obj/kern/kernel.asm	/^f0109096:	8b 00                	mov    (%eax),%eax$/;"	l
f0109098	obj/kern/kernel.asm	/^f0109098:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010909b	obj/kern/kernel.asm	/^f010909b:	eb 05                	jmp    f01090a2 <cpunum+0x20>$/;"	l
f010909d	obj/kern/kernel.asm	/^f010909d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01090a2	obj/kern/kernel.asm	/^f01090a2:	5d                   	pop    %ebp$/;"	l
f01090a3	obj/kern/kernel.asm	/^f01090a3:	c3                   	ret    $/;"	l
f01090a4	obj/kern/kernel.asm	/^f01090a4 <lapic_eoi>:$/;"	l
f01090a4	obj/kern/kernel.asm	/^f01090a4:	55                   	push   %ebp$/;"	l
f01090a5	obj/kern/kernel.asm	/^f01090a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01090a7	obj/kern/kernel.asm	/^f01090a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01090aa	obj/kern/kernel.asm	/^f01090aa:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f01090af	obj/kern/kernel.asm	/^f01090af:	85 c0                	test   %eax,%eax$/;"	l
f01090b1	obj/kern/kernel.asm	/^f01090b1:	74 14                	je     f01090c7 <lapic_eoi+0x23>$/;"	l
f01090b3	obj/kern/kernel.asm	/^f01090b3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01090ba	obj/kern/kernel.asm	/^f01090ba:	00 $/;"	l
f01090bb	obj/kern/kernel.asm	/^f01090bb:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
f01090c2	obj/kern/kernel.asm	/^f01090c2:	e8 10 fe ff ff       	call   f0108ed7 <lapicw>$/;"	l
f01090c7	obj/kern/kernel.asm	/^f01090c7:	c9                   	leave  $/;"	l
f01090c8	obj/kern/kernel.asm	/^f01090c8:	c3                   	ret    $/;"	l
f01090c9	obj/kern/kernel.asm	/^f01090c9 <microdelay>:$/;"	l
f01090c9	obj/kern/kernel.asm	/^f01090c9:	55                   	push   %ebp$/;"	l
f01090ca	obj/kern/kernel.asm	/^f01090ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01090cc	obj/kern/kernel.asm	/^f01090cc:	5d                   	pop    %ebp$/;"	l
f01090cd	obj/kern/kernel.asm	/^f01090cd:	c3                   	ret    $/;"	l
f01090ce	obj/kern/kernel.asm	/^f01090ce <lapic_startap>:$/;"	l
f01090ce	obj/kern/kernel.asm	/^f01090ce:	55                   	push   %ebp$/;"	l
f01090cf	obj/kern/kernel.asm	/^f01090cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01090d1	obj/kern/kernel.asm	/^f01090d1:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01090d4	obj/kern/kernel.asm	/^f01090d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01090d7	obj/kern/kernel.asm	/^f01090d7:	88 45 d4             	mov    %al,-0x2c(%ebp)$/;"	l
f01090da	obj/kern/kernel.asm	/^f01090da:	c7 45 ec 70 00 00 00 	movl   $0x70,-0x14(%ebp)$/;"	l
f01090e1	obj/kern/kernel.asm	/^f01090e1:	c6 45 eb 0f          	movb   $0xf,-0x15(%ebp)$/;"	l
f01090e5	obj/kern/kernel.asm	/^f01090e5:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
f01090e9	obj/kern/kernel.asm	/^f01090e9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01090ec	obj/kern/kernel.asm	/^f01090ec:	ee                   	out    %al,(%dx)$/;"	l
f01090ed	obj/kern/kernel.asm	/^f01090ed:	c7 45 e4 71 00 00 00 	movl   $0x71,-0x1c(%ebp)$/;"	l
f01090f4	obj/kern/kernel.asm	/^f01090f4:	c6 45 e3 0a          	movb   $0xa,-0x1d(%ebp)$/;"	l
f01090f8	obj/kern/kernel.asm	/^f01090f8:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f01090fc	obj/kern/kernel.asm	/^f01090fc:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01090ff	obj/kern/kernel.asm	/^f01090ff:	ee                   	out    %al,(%dx)$/;"	l
f0109100	obj/kern/kernel.asm	/^f0109100:	c7 44 24 08 67 04 00 	movl   $0x467,0x8(%esp)$/;"	l
f0109107	obj/kern/kernel.asm	/^f0109107:	00 $/;"	l
f0109108	obj/kern/kernel.asm	/^f0109108:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f010910f	obj/kern/kernel.asm	/^f010910f:	00 $/;"	l
f0109110	obj/kern/kernel.asm	/^f0109110:	c7 04 24 a7 c6 10 f0 	movl   $0xf010c6a7,(%esp)$/;"	l
f0109117	obj/kern/kernel.asm	/^f0109117:	e8 79 fd ff ff       	call   f0108e95 <_kaddr>$/;"	l
f010911c	obj/kern/kernel.asm	/^f010911c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010911f	obj/kern/kernel.asm	/^f010911f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0109122	obj/kern/kernel.asm	/^f0109122:	66 c7 00 00 00       	movw   $0x0,(%eax)$/;"	l
f0109127	obj/kern/kernel.asm	/^f0109127:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010912a	obj/kern/kernel.asm	/^f010912a:	8d 50 02             	lea    0x2(%eax),%edx$/;"	l
f010912d	obj/kern/kernel.asm	/^f010912d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109130	obj/kern/kernel.asm	/^f0109130:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0109133	obj/kern/kernel.asm	/^f0109133:	66 89 02             	mov    %ax,(%edx)$/;"	l
f0109136	obj/kern/kernel.asm	/^f0109136:	0f b6 45 d4          	movzbl -0x2c(%ebp),%eax$/;"	l
f010913a	obj/kern/kernel.asm	/^f010913a:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f010913d	obj/kern/kernel.asm	/^f010913d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109141	obj/kern/kernel.asm	/^f0109141:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
f0109148	obj/kern/kernel.asm	/^f0109148:	e8 8a fd ff ff       	call   f0108ed7 <lapicw>$/;"	l
f010914d	obj/kern/kernel.asm	/^f010914d:	c7 44 24 04 00 c5 00 	movl   $0xc500,0x4(%esp)$/;"	l
f0109154	obj/kern/kernel.asm	/^f0109154:	00 $/;"	l
f0109155	obj/kern/kernel.asm	/^f0109155:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
f010915c	obj/kern/kernel.asm	/^f010915c:	e8 76 fd ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109161	obj/kern/kernel.asm	/^f0109161:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
f0109168	obj/kern/kernel.asm	/^f0109168:	e8 5c ff ff ff       	call   f01090c9 <microdelay>$/;"	l
f010916d	obj/kern/kernel.asm	/^f010916d:	c7 44 24 04 00 85 00 	movl   $0x8500,0x4(%esp)$/;"	l
f0109174	obj/kern/kernel.asm	/^f0109174:	00 $/;"	l
f0109175	obj/kern/kernel.asm	/^f0109175:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
f010917c	obj/kern/kernel.asm	/^f010917c:	e8 56 fd ff ff       	call   f0108ed7 <lapicw>$/;"	l
f0109181	obj/kern/kernel.asm	/^f0109181:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0109188	obj/kern/kernel.asm	/^f0109188:	e8 3c ff ff ff       	call   f01090c9 <microdelay>$/;"	l
f010918d	obj/kern/kernel.asm	/^f010918d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0109194	obj/kern/kernel.asm	/^f0109194:	eb 40                	jmp    f01091d6 <lapic_startap+0x108>$/;"	l
f0109196	obj/kern/kernel.asm	/^f0109196:	0f b6 45 d4          	movzbl -0x2c(%ebp),%eax$/;"	l
f010919a	obj/kern/kernel.asm	/^f010919a:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f010919d	obj/kern/kernel.asm	/^f010919d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01091a1	obj/kern/kernel.asm	/^f01091a1:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
f01091a8	obj/kern/kernel.asm	/^f01091a8:	e8 2a fd ff ff       	call   f0108ed7 <lapicw>$/;"	l
f01091ad	obj/kern/kernel.asm	/^f01091ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01091b0	obj/kern/kernel.asm	/^f01091b0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01091b3	obj/kern/kernel.asm	/^f01091b3:	80 cc 06             	or     $0x6,%ah$/;"	l
f01091b6	obj/kern/kernel.asm	/^f01091b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01091ba	obj/kern/kernel.asm	/^f01091ba:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
f01091c1	obj/kern/kernel.asm	/^f01091c1:	e8 11 fd ff ff       	call   f0108ed7 <lapicw>$/;"	l
f01091c6	obj/kern/kernel.asm	/^f01091c6:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
f01091cd	obj/kern/kernel.asm	/^f01091cd:	e8 f7 fe ff ff       	call   f01090c9 <microdelay>$/;"	l
f01091d2	obj/kern/kernel.asm	/^f01091d2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01091d6	obj/kern/kernel.asm	/^f01091d6:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)$/;"	l
f01091da	obj/kern/kernel.asm	/^f01091da:	7e ba                	jle    f0109196 <lapic_startap+0xc8>$/;"	l
f01091dc	obj/kern/kernel.asm	/^f01091dc:	c9                   	leave  $/;"	l
f01091dd	obj/kern/kernel.asm	/^f01091dd:	c3                   	ret    $/;"	l
f01091de	obj/kern/kernel.asm	/^f01091de <lapic_ipi>:$/;"	l
f01091de	obj/kern/kernel.asm	/^f01091de:	55                   	push   %ebp$/;"	l
f01091df	obj/kern/kernel.asm	/^f01091df:	89 e5                	mov    %esp,%ebp$/;"	l
f01091e1	obj/kern/kernel.asm	/^f01091e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01091e4	obj/kern/kernel.asm	/^f01091e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01091e7	obj/kern/kernel.asm	/^f01091e7:	0d 00 00 0c 00       	or     $0xc0000,%eax$/;"	l
f01091ec	obj/kern/kernel.asm	/^f01091ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01091f0	obj/kern/kernel.asm	/^f01091f0:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
f01091f7	obj/kern/kernel.asm	/^f01091f7:	e8 db fc ff ff       	call   f0108ed7 <lapicw>$/;"	l
f01091fc	obj/kern/kernel.asm	/^f01091fc:	90                   	nop$/;"	l
f01091fd	obj/kern/kernel.asm	/^f01091fd:	a1 04 20 33 f0       	mov    0xf0332004,%eax$/;"	l
f0109202	obj/kern/kernel.asm	/^f0109202:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
f0109207	obj/kern/kernel.asm	/^f0109207:	8b 00                	mov    (%eax),%eax$/;"	l
f0109209	obj/kern/kernel.asm	/^f0109209:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f010920e	obj/kern/kernel.asm	/^f010920e:	85 c0                	test   %eax,%eax$/;"	l
f0109210	obj/kern/kernel.asm	/^f0109210:	75 eb                	jne    f01091fd <lapic_ipi+0x1f>$/;"	l
f0109212	obj/kern/kernel.asm	/^f0109212:	c9                   	leave  $/;"	l
f0109213	obj/kern/kernel.asm	/^f0109213:	c3                   	ret    $/;"	l
f0109214	obj/kern/kernel.asm	/^f0109214 <xchg>:$/;"	l
f0109214	obj/kern/kernel.asm	/^f0109214:	55                   	push   %ebp$/;"	l
f0109215	obj/kern/kernel.asm	/^f0109215:	89 e5                	mov    %esp,%ebp$/;"	l
f0109217	obj/kern/kernel.asm	/^f0109217:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010921a	obj/kern/kernel.asm	/^f010921a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010921d	obj/kern/kernel.asm	/^f010921d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109220	obj/kern/kernel.asm	/^f0109220:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0109223	obj/kern/kernel.asm	/^f0109223:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0109226	obj/kern/kernel.asm	/^f0109226:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0109229	obj/kern/kernel.asm	/^f0109229:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010922c	obj/kern/kernel.asm	/^f010922c:	c9                   	leave  $/;"	l
f010922d	obj/kern/kernel.asm	/^f010922d:	c3                   	ret    $/;"	l
f010922e	obj/kern/kernel.asm	/^f010922e <get_caller_pcs>:$/;"	l
f010922e	obj/kern/kernel.asm	/^f010922e:	55                   	push   %ebp$/;"	l
f010922f	obj/kern/kernel.asm	/^f010922f:	89 e5                	mov    %esp,%ebp$/;"	l
f0109231	obj/kern/kernel.asm	/^f0109231:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0109234	obj/kern/kernel.asm	/^f0109234:	89 e8                	mov    %ebp,%eax$/;"	l
f0109236	obj/kern/kernel.asm	/^f0109236:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109239	obj/kern/kernel.asm	/^f0109239:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010923c	obj/kern/kernel.asm	/^f010923c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010923f	obj/kern/kernel.asm	/^f010923f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f0109246	obj/kern/kernel.asm	/^f0109246:	eb 32                	jmp    f010927a <get_caller_pcs+0x4c>$/;"	l
f0109248	obj/kern/kernel.asm	/^f0109248:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
f010924c	obj/kern/kernel.asm	/^f010924c:	74 32                	je     f0109280 <get_caller_pcs+0x52>$/;"	l
f010924e	obj/kern/kernel.asm	/^f010924e:	81 7d fc ff ff 7f ef 	cmpl   $0xef7fffff,-0x4(%ebp)$/;"	l
f0109255	obj/kern/kernel.asm	/^f0109255:	76 29                	jbe    f0109280 <get_caller_pcs+0x52>$/;"	l
f0109257	obj/kern/kernel.asm	/^f0109257:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010925a	obj/kern/kernel.asm	/^f010925a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0109261	obj/kern/kernel.asm	/^f0109261:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109264	obj/kern/kernel.asm	/^f0109264:	01 c2                	add    %eax,%edx$/;"	l
f0109266	obj/kern/kernel.asm	/^f0109266:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0109269	obj/kern/kernel.asm	/^f0109269:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010926c	obj/kern/kernel.asm	/^f010926c:	89 02                	mov    %eax,(%edx)$/;"	l
f010926e	obj/kern/kernel.asm	/^f010926e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0109271	obj/kern/kernel.asm	/^f0109271:	8b 00                	mov    (%eax),%eax$/;"	l
f0109273	obj/kern/kernel.asm	/^f0109273:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0109276	obj/kern/kernel.asm	/^f0109276:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f010927a	obj/kern/kernel.asm	/^f010927a:	83 7d f8 09          	cmpl   $0x9,-0x8(%ebp)$/;"	l
f010927e	obj/kern/kernel.asm	/^f010927e:	7e c8                	jle    f0109248 <get_caller_pcs+0x1a>$/;"	l
f0109280	obj/kern/kernel.asm	/^f0109280:	eb 19                	jmp    f010929b <get_caller_pcs+0x6d>$/;"	l
f0109282	obj/kern/kernel.asm	/^f0109282:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0109285	obj/kern/kernel.asm	/^f0109285:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f010928c	obj/kern/kernel.asm	/^f010928c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010928f	obj/kern/kernel.asm	/^f010928f:	01 d0                	add    %edx,%eax$/;"	l
f0109291	obj/kern/kernel.asm	/^f0109291:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0109297	obj/kern/kernel.asm	/^f0109297:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f010929b	obj/kern/kernel.asm	/^f010929b:	83 7d f8 09          	cmpl   $0x9,-0x8(%ebp)$/;"	l
f010929f	obj/kern/kernel.asm	/^f010929f:	7e e1                	jle    f0109282 <get_caller_pcs+0x54>$/;"	l
f01092a1	obj/kern/kernel.asm	/^f01092a1:	c9                   	leave  $/;"	l
f01092a2	obj/kern/kernel.asm	/^f01092a2:	c3                   	ret    $/;"	l
f01092a3	obj/kern/kernel.asm	/^f01092a3 <holding>:$/;"	l
f01092a3	obj/kern/kernel.asm	/^f01092a3:	55                   	push   %ebp$/;"	l
f01092a4	obj/kern/kernel.asm	/^f01092a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01092a6	obj/kern/kernel.asm	/^f01092a6:	53                   	push   %ebx$/;"	l
f01092a7	obj/kern/kernel.asm	/^f01092a7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01092aa	obj/kern/kernel.asm	/^f01092aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01092ad	obj/kern/kernel.asm	/^f01092ad:	8b 00                	mov    (%eax),%eax$/;"	l
f01092af	obj/kern/kernel.asm	/^f01092af:	85 c0                	test   %eax,%eax$/;"	l
f01092b1	obj/kern/kernel.asm	/^f01092b1:	74 1e                	je     f01092d1 <holding+0x2e>$/;"	l
f01092b3	obj/kern/kernel.asm	/^f01092b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01092b6	obj/kern/kernel.asm	/^f01092b6:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f01092b9	obj/kern/kernel.asm	/^f01092b9:	e8 c4 fd ff ff       	call   f0109082 <cpunum>$/;"	l
f01092be	obj/kern/kernel.asm	/^f01092be:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01092c1	obj/kern/kernel.asm	/^f01092c1:	05 20 10 2f f0       	add    $0xf02f1020,%eax$/;"	l
f01092c6	obj/kern/kernel.asm	/^f01092c6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01092c8	obj/kern/kernel.asm	/^f01092c8:	75 07                	jne    f01092d1 <holding+0x2e>$/;"	l
f01092ca	obj/kern/kernel.asm	/^f01092ca:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01092cf	obj/kern/kernel.asm	/^f01092cf:	eb 05                	jmp    f01092d6 <holding+0x33>$/;"	l
f01092d1	obj/kern/kernel.asm	/^f01092d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01092d6	obj/kern/kernel.asm	/^f01092d6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01092d9	obj/kern/kernel.asm	/^f01092d9:	5b                   	pop    %ebx$/;"	l
f01092da	obj/kern/kernel.asm	/^f01092da:	5d                   	pop    %ebp$/;"	l
f01092db	obj/kern/kernel.asm	/^f01092db:	c3                   	ret    $/;"	l
f01092dc	obj/kern/kernel.asm	/^f01092dc <__spin_initlock>:$/;"	l
f01092dc	obj/kern/kernel.asm	/^f01092dc:	55                   	push   %ebp$/;"	l
f01092dd	obj/kern/kernel.asm	/^f01092dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01092df	obj/kern/kernel.asm	/^f01092df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01092e2	obj/kern/kernel.asm	/^f01092e2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01092e8	obj/kern/kernel.asm	/^f01092e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01092eb	obj/kern/kernel.asm	/^f01092eb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01092ee	obj/kern/kernel.asm	/^f01092ee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01092f1	obj/kern/kernel.asm	/^f01092f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01092f4	obj/kern/kernel.asm	/^f01092f4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01092fb	obj/kern/kernel.asm	/^f01092fb:	5d                   	pop    %ebp$/;"	l
f01092fc	obj/kern/kernel.asm	/^f01092fc:	c3                   	ret    $/;"	l
f01092fd	obj/kern/kernel.asm	/^f01092fd <spin_lock>:$/;"	l
f01092fd	obj/kern/kernel.asm	/^f01092fd:	55                   	push   %ebp$/;"	l
f01092fe	obj/kern/kernel.asm	/^f01092fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0109300	obj/kern/kernel.asm	/^f0109300:	53                   	push   %ebx$/;"	l
f0109301	obj/kern/kernel.asm	/^f0109301:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0109304	obj/kern/kernel.asm	/^f0109304:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109307	obj/kern/kernel.asm	/^f0109307:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010930a	obj/kern/kernel.asm	/^f010930a:	e8 94 ff ff ff       	call   f01092a3 <holding>$/;"	l
f010930f	obj/kern/kernel.asm	/^f010930f:	85 c0                	test   %eax,%eax$/;"	l
f0109311	obj/kern/kernel.asm	/^f0109311:	74 2f                	je     f0109342 <spin_lock+0x45>$/;"	l
f0109313	obj/kern/kernel.asm	/^f0109313:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109316	obj/kern/kernel.asm	/^f0109316:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0109319	obj/kern/kernel.asm	/^f0109319:	e8 64 fd ff ff       	call   f0109082 <cpunum>$/;"	l
f010931e	obj/kern/kernel.asm	/^f010931e:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0109322	obj/kern/kernel.asm	/^f0109322:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0109326	obj/kern/kernel.asm	/^f0109326:	c7 44 24 08 c0 c6 10 	movl   $0xf010c6c0,0x8(%esp)$/;"	l
f010932d	obj/kern/kernel.asm	/^f010932d:	f0 $/;"	l
f010932e	obj/kern/kernel.asm	/^f010932e:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0109335	obj/kern/kernel.asm	/^f0109335:	00 $/;"	l
f0109336	obj/kern/kernel.asm	/^f0109336:	c7 04 24 ea c6 10 f0 	movl   $0xf010c6ea,(%esp)$/;"	l
f010933d	obj/kern/kernel.asm	/^f010933d:	e8 c0 6f ff ff       	call   f0100302 <_panic>$/;"	l
f0109342	obj/kern/kernel.asm	/^f0109342:	eb 02                	jmp    f0109346 <spin_lock+0x49>$/;"	l
f0109344	obj/kern/kernel.asm	/^f0109344:	f3 90                	pause  $/;"	l
f0109346	obj/kern/kernel.asm	/^f0109346:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109349	obj/kern/kernel.asm	/^f0109349:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0109350	obj/kern/kernel.asm	/^f0109350:	00 $/;"	l
f0109351	obj/kern/kernel.asm	/^f0109351:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109354	obj/kern/kernel.asm	/^f0109354:	e8 bb fe ff ff       	call   f0109214 <xchg>$/;"	l
f0109359	obj/kern/kernel.asm	/^f0109359:	85 c0                	test   %eax,%eax$/;"	l
f010935b	obj/kern/kernel.asm	/^f010935b:	75 e7                	jne    f0109344 <spin_lock+0x47>$/;"	l
f010935d	obj/kern/kernel.asm	/^f010935d:	e8 20 fd ff ff       	call   f0109082 <cpunum>$/;"	l
f0109362	obj/kern/kernel.asm	/^f0109362:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0109365	obj/kern/kernel.asm	/^f0109365:	8d 90 20 10 2f f0    	lea    -0xfd0efe0(%eax),%edx$/;"	l
f010936b	obj/kern/kernel.asm	/^f010936b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010936e	obj/kern/kernel.asm	/^f010936e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0109371	obj/kern/kernel.asm	/^f0109371:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109374	obj/kern/kernel.asm	/^f0109374:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0109377	obj/kern/kernel.asm	/^f0109377:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010937a	obj/kern/kernel.asm	/^f010937a:	e8 af fe ff ff       	call   f010922e <get_caller_pcs>$/;"	l
f010937f	obj/kern/kernel.asm	/^f010937f:	83 c4 24             	add    $0x24,%esp$/;"	l
f0109382	obj/kern/kernel.asm	/^f0109382:	5b                   	pop    %ebx$/;"	l
f0109383	obj/kern/kernel.asm	/^f0109383:	5d                   	pop    %ebp$/;"	l
f0109384	obj/kern/kernel.asm	/^f0109384:	c3                   	ret    $/;"	l
f0109385	obj/kern/kernel.asm	/^f0109385 <spin_unlock>:$/;"	l
f0109385	obj/kern/kernel.asm	/^f0109385:	55                   	push   %ebp$/;"	l
f0109386	obj/kern/kernel.asm	/^f0109386:	89 e5                	mov    %esp,%ebp$/;"	l
f0109388	obj/kern/kernel.asm	/^f0109388:	57                   	push   %edi$/;"	l
f0109389	obj/kern/kernel.asm	/^f0109389:	56                   	push   %esi$/;"	l
f010938a	obj/kern/kernel.asm	/^f010938a:	53                   	push   %ebx$/;"	l
f010938b	obj/kern/kernel.asm	/^f010938b:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
f010938e	obj/kern/kernel.asm	/^f010938e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109391	obj/kern/kernel.asm	/^f0109391:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109394	obj/kern/kernel.asm	/^f0109394:	e8 0a ff ff ff       	call   f01092a3 <holding>$/;"	l
f0109399	obj/kern/kernel.asm	/^f0109399:	85 c0                	test   %eax,%eax$/;"	l
f010939b	obj/kern/kernel.asm	/^f010939b:	0f 85 02 01 00 00    	jne    f01094a3 <spin_unlock+0x11e>$/;"	l
f01093a1	obj/kern/kernel.asm	/^f01093a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01093a4	obj/kern/kernel.asm	/^f01093a4:	83 c0 0c             	add    $0xc,%eax$/;"	l
f01093a7	obj/kern/kernel.asm	/^f01093a7:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01093ae	obj/kern/kernel.asm	/^f01093ae:	00 $/;"	l
f01093af	obj/kern/kernel.asm	/^f01093af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01093b3	obj/kern/kernel.asm	/^f01093b3:	8d 45 a4             	lea    -0x5c(%ebp),%eax$/;"	l
f01093b6	obj/kern/kernel.asm	/^f01093b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01093b9	obj/kern/kernel.asm	/^f01093b9:	e8 6a f2 ff ff       	call   f0108628 <memmove>$/;"	l
f01093be	obj/kern/kernel.asm	/^f01093be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01093c1	obj/kern/kernel.asm	/^f01093c1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01093c4	obj/kern/kernel.asm	/^f01093c4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01093c7	obj/kern/kernel.asm	/^f01093c7:	0f b6 f0             	movzbl %al,%esi$/;"	l
f01093ca	obj/kern/kernel.asm	/^f01093ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01093cd	obj/kern/kernel.asm	/^f01093cd:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01093d0	obj/kern/kernel.asm	/^f01093d0:	e8 ad fc ff ff       	call   f0109082 <cpunum>$/;"	l
f01093d5	obj/kern/kernel.asm	/^f01093d5:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01093d9	obj/kern/kernel.asm	/^f01093d9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01093dd	obj/kern/kernel.asm	/^f01093dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01093e1	obj/kern/kernel.asm	/^f01093e1:	c7 04 24 fc c6 10 f0 	movl   $0xf010c6fc,(%esp)$/;"	l
f01093e8	obj/kern/kernel.asm	/^f01093e8:	e8 52 bf ff ff       	call   f010533f <cprintf>$/;"	l
f01093ed	obj/kern/kernel.asm	/^f01093ed:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01093f4	obj/kern/kernel.asm	/^f01093f4:	eb 7c                	jmp    f0109472 <spin_unlock+0xed>$/;"	l
f01093f6	obj/kern/kernel.asm	/^f01093f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01093f9	obj/kern/kernel.asm	/^f01093f9:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f01093fd	obj/kern/kernel.asm	/^f01093fd:	8d 55 cc             	lea    -0x34(%ebp),%edx$/;"	l
f0109400	obj/kern/kernel.asm	/^f0109400:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0109404	obj/kern/kernel.asm	/^f0109404:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109407	obj/kern/kernel.asm	/^f0109407:	e8 cb e3 ff ff       	call   f01077d7 <debuginfo_eip>$/;"	l
f010940c	obj/kern/kernel.asm	/^f010940c:	85 c0                	test   %eax,%eax$/;"	l
f010940e	obj/kern/kernel.asm	/^f010940e:	78 47                	js     f0109457 <spin_unlock+0xd2>$/;"	l
f0109410	obj/kern/kernel.asm	/^f0109410:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0109413	obj/kern/kernel.asm	/^f0109413:	8b 54 85 a4          	mov    -0x5c(%ebp,%eax,4),%edx$/;"	l
f0109417	obj/kern/kernel.asm	/^f0109417:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010941a	obj/kern/kernel.asm	/^f010941a:	89 d7                	mov    %edx,%edi$/;"	l
f010941c	obj/kern/kernel.asm	/^f010941c:	29 c7                	sub    %eax,%edi$/;"	l
f010941e	obj/kern/kernel.asm	/^f010941e:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0109421	obj/kern/kernel.asm	/^f0109421:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0109424	obj/kern/kernel.asm	/^f0109424:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0109427	obj/kern/kernel.asm	/^f0109427:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f010942a	obj/kern/kernel.asm	/^f010942a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010942d	obj/kern/kernel.asm	/^f010942d:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f0109431	obj/kern/kernel.asm	/^f0109431:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
f0109435	obj/kern/kernel.asm	/^f0109435:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0109439	obj/kern/kernel.asm	/^f0109439:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010943d	obj/kern/kernel.asm	/^f010943d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0109441	obj/kern/kernel.asm	/^f0109441:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0109445	obj/kern/kernel.asm	/^f0109445:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109449	obj/kern/kernel.asm	/^f0109449:	c7 04 24 32 c7 10 f0 	movl   $0xf010c732,(%esp)$/;"	l
f0109450	obj/kern/kernel.asm	/^f0109450:	e8 ea be ff ff       	call   f010533f <cprintf>$/;"	l
f0109455	obj/kern/kernel.asm	/^f0109455:	eb 17                	jmp    f010946e <spin_unlock+0xe9>$/;"	l
f0109457	obj/kern/kernel.asm	/^f0109457:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010945a	obj/kern/kernel.asm	/^f010945a:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f010945e	obj/kern/kernel.asm	/^f010945e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109462	obj/kern/kernel.asm	/^f0109462:	c7 04 24 49 c7 10 f0 	movl   $0xf010c749,(%esp)$/;"	l
f0109469	obj/kern/kernel.asm	/^f0109469:	e8 d1 be ff ff       	call   f010533f <cprintf>$/;"	l
f010946e	obj/kern/kernel.asm	/^f010946e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f0109472	obj/kern/kernel.asm	/^f0109472:	83 7d e4 09          	cmpl   $0x9,-0x1c(%ebp)$/;"	l
f0109476	obj/kern/kernel.asm	/^f0109476:	7f 0f                	jg     f0109487 <spin_unlock+0x102>$/;"	l
f0109478	obj/kern/kernel.asm	/^f0109478:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010947b	obj/kern/kernel.asm	/^f010947b:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f010947f	obj/kern/kernel.asm	/^f010947f:	85 c0                	test   %eax,%eax$/;"	l
f0109481	obj/kern/kernel.asm	/^f0109481:	0f 85 6f ff ff ff    	jne    f01093f6 <spin_unlock+0x71>$/;"	l
f0109487	obj/kern/kernel.asm	/^f0109487:	c7 44 24 08 51 c7 10 	movl   $0xf010c751,0x8(%esp)$/;"	l
f010948e	obj/kern/kernel.asm	/^f010948e:	f0 $/;"	l
f010948f	obj/kern/kernel.asm	/^f010948f:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0109496	obj/kern/kernel.asm	/^f0109496:	00 $/;"	l
f0109497	obj/kern/kernel.asm	/^f0109497:	c7 04 24 ea c6 10 f0 	movl   $0xf010c6ea,(%esp)$/;"	l
f010949e	obj/kern/kernel.asm	/^f010949e:	e8 5f 6e ff ff       	call   f0100302 <_panic>$/;"	l
f01094a3	obj/kern/kernel.asm	/^f01094a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01094a6	obj/kern/kernel.asm	/^f01094a6:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
f01094ad	obj/kern/kernel.asm	/^f01094ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01094b0	obj/kern/kernel.asm	/^f01094b0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01094b7	obj/kern/kernel.asm	/^f01094b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01094ba	obj/kern/kernel.asm	/^f01094ba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01094c1	obj/kern/kernel.asm	/^f01094c1:	00 $/;"	l
f01094c2	obj/kern/kernel.asm	/^f01094c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01094c5	obj/kern/kernel.asm	/^f01094c5:	e8 4a fd ff ff       	call   f0109214 <xchg>$/;"	l
f01094ca	obj/kern/kernel.asm	/^f01094ca:	83 c4 7c             	add    $0x7c,%esp$/;"	l
f01094cd	obj/kern/kernel.asm	/^f01094cd:	5b                   	pop    %ebx$/;"	l
f01094ce	obj/kern/kernel.asm	/^f01094ce:	5e                   	pop    %esi$/;"	l
f01094cf	obj/kern/kernel.asm	/^f01094cf:	5f                   	pop    %edi$/;"	l
f01094d0	obj/kern/kernel.asm	/^f01094d0:	5d                   	pop    %ebp$/;"	l
f01094d1	obj/kern/kernel.asm	/^f01094d1:	c3                   	ret    $/;"	l
f01094d2	obj/kern/kernel.asm	/^f01094d2 <_paddr>:$/;"	l
f01094d2	obj/kern/kernel.asm	/^f01094d2:	55                   	push   %ebp$/;"	l
f01094d3	obj/kern/kernel.asm	/^f01094d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01094d5	obj/kern/kernel.asm	/^f01094d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01094d8	obj/kern/kernel.asm	/^f01094d8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01094db	obj/kern/kernel.asm	/^f01094db:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01094e0	obj/kern/kernel.asm	/^f01094e0:	77 21                	ja     f0109503 <_paddr+0x31>$/;"	l
f01094e2	obj/kern/kernel.asm	/^f01094e2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01094e5	obj/kern/kernel.asm	/^f01094e5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01094e9	obj/kern/kernel.asm	/^f01094e9:	c7 44 24 08 60 c7 10 	movl   $0xf010c760,0x8(%esp)$/;"	l
f01094f0	obj/kern/kernel.asm	/^f01094f0:	f0 $/;"	l
f01094f1	obj/kern/kernel.asm	/^f01094f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01094f4	obj/kern/kernel.asm	/^f01094f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01094f8	obj/kern/kernel.asm	/^f01094f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01094fb	obj/kern/kernel.asm	/^f01094fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01094fe	obj/kern/kernel.asm	/^f01094fe:	e8 ff 6d ff ff       	call   f0100302 <_panic>$/;"	l
f0109503	obj/kern/kernel.asm	/^f0109503:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109506	obj/kern/kernel.asm	/^f0109506:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010950b	obj/kern/kernel.asm	/^f010950b:	c9                   	leave  $/;"	l
f010950c	obj/kern/kernel.asm	/^f010950c:	c3                   	ret    $/;"	l
f010950d	obj/kern/kernel.asm	/^f010950d <pci_network_attach>:$/;"	l
f010950d	obj/kern/kernel.asm	/^f010950d:	55                   	push   %ebp$/;"	l
f010950e	obj/kern/kernel.asm	/^f010950e:	89 e5                	mov    %esp,%ebp$/;"	l
f0109510	obj/kern/kernel.asm	/^f0109510:	53                   	push   %ebx$/;"	l
f0109511	obj/kern/kernel.asm	/^f0109511:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0109514	obj/kern/kernel.asm	/^f0109514:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109517	obj/kern/kernel.asm	/^f0109517:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010951a	obj/kern/kernel.asm	/^f010951a:	e8 f1 0c 00 00       	call   f010a210 <pci_func_enable>$/;"	l
f010951f	obj/kern/kernel.asm	/^f010951f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109522	obj/kern/kernel.asm	/^f0109522:	8b 50 2c             	mov    0x2c(%eax),%edx$/;"	l
f0109525	obj/kern/kernel.asm	/^f0109525:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109528	obj/kern/kernel.asm	/^f0109528:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f010952b	obj/kern/kernel.asm	/^f010952b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010952f	obj/kern/kernel.asm	/^f010952f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109532	obj/kern/kernel.asm	/^f0109532:	e8 10 8a ff ff       	call   f0101f47 <mmio_map_region>$/;"	l
f0109537	obj/kern/kernel.asm	/^f0109537:	a3 20 28 37 f0       	mov    %eax,0xf0372820$/;"	l
f010953c	obj/kern/kernel.asm	/^f010953c:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109541	obj/kern/kernel.asm	/^f0109541:	83 c0 08             	add    $0x8,%eax$/;"	l
f0109544	obj/kern/kernel.asm	/^f0109544:	8b 00                	mov    (%eax),%eax$/;"	l
f0109546	obj/kern/kernel.asm	/^f0109546:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010954a	obj/kern/kernel.asm	/^f010954a:	c7 04 24 84 c7 10 f0 	movl   $0xf010c784,(%esp)$/;"	l
f0109551	obj/kern/kernel.asm	/^f0109551:	e8 e9 bd ff ff       	call   f010533f <cprintf>$/;"	l
f0109556	obj/kern/kernel.asm	/^f0109556:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010955b	obj/kern/kernel.asm	/^f010955b:	8d 98 00 38 00 00    	lea    0x3800(%eax),%ebx$/;"	l
f0109561	obj/kern/kernel.asm	/^f0109561:	c7 44 24 08 40 28 38 	movl   $0xf0382840,0x8(%esp)$/;"	l
f0109568	obj/kern/kernel.asm	/^f0109568:	f0 $/;"	l
f0109569	obj/kern/kernel.asm	/^f0109569:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
f0109570	obj/kern/kernel.asm	/^f0109570:	00 $/;"	l
f0109571	obj/kern/kernel.asm	/^f0109571:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f0109578	obj/kern/kernel.asm	/^f0109578:	e8 55 ff ff ff       	call   f01094d2 <_paddr>$/;"	l
f010957d	obj/kern/kernel.asm	/^f010957d:	89 03                	mov    %eax,(%ebx)$/;"	l
f010957f	obj/kern/kernel.asm	/^f010957f:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109584	obj/kern/kernel.asm	/^f0109584:	05 04 38 00 00       	add    $0x3804,%eax$/;"	l
f0109589	obj/kern/kernel.asm	/^f0109589:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010958f	obj/kern/kernel.asm	/^f010958f:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109594	obj/kern/kernel.asm	/^f0109594:	05 08 38 00 00       	add    $0x3808,%eax$/;"	l
f0109599	obj/kern/kernel.asm	/^f0109599:	c7 00 00 02 00 00    	movl   $0x200,(%eax)$/;"	l
f010959f	obj/kern/kernel.asm	/^f010959f:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01095a4	obj/kern/kernel.asm	/^f01095a4:	05 10 38 00 00       	add    $0x3810,%eax$/;"	l
f01095a9	obj/kern/kernel.asm	/^f01095a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01095af	obj/kern/kernel.asm	/^f01095af:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01095b4	obj/kern/kernel.asm	/^f01095b4:	05 18 38 00 00       	add    $0x3818,%eax$/;"	l
f01095b9	obj/kern/kernel.asm	/^f01095b9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01095bf	obj/kern/kernel.asm	/^f01095bf:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01095c4	obj/kern/kernel.asm	/^f01095c4:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
f01095c9	obj/kern/kernel.asm	/^f01095c9:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f01095cf	obj/kern/kernel.asm	/^f01095cf:	81 c2 00 04 00 00    	add    $0x400,%edx$/;"	l
f01095d5	obj/kern/kernel.asm	/^f01095d5:	8b 12                	mov    (%edx),%edx$/;"	l
f01095d7	obj/kern/kernel.asm	/^f01095d7:	83 ca 02             	or     $0x2,%edx$/;"	l
f01095da	obj/kern/kernel.asm	/^f01095da:	89 10                	mov    %edx,(%eax)$/;"	l
f01095dc	obj/kern/kernel.asm	/^f01095dc:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01095e1	obj/kern/kernel.asm	/^f01095e1:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
f01095e6	obj/kern/kernel.asm	/^f01095e6:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f01095ec	obj/kern/kernel.asm	/^f01095ec:	81 c2 00 04 00 00    	add    $0x400,%edx$/;"	l
f01095f2	obj/kern/kernel.asm	/^f01095f2:	8b 12                	mov    (%edx),%edx$/;"	l
f01095f4	obj/kern/kernel.asm	/^f01095f4:	83 ca 08             	or     $0x8,%edx$/;"	l
f01095f7	obj/kern/kernel.asm	/^f01095f7:	89 10                	mov    %edx,(%eax)$/;"	l
f01095f9	obj/kern/kernel.asm	/^f01095f9:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01095fe	obj/kern/kernel.asm	/^f01095fe:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
f0109603	obj/kern/kernel.asm	/^f0109603:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109609	obj/kern/kernel.asm	/^f0109609:	81 c2 00 04 00 00    	add    $0x400,%edx$/;"	l
f010960f	obj/kern/kernel.asm	/^f010960f:	8b 12                	mov    (%edx),%edx$/;"	l
f0109611	obj/kern/kernel.asm	/^f0109611:	80 ce 01             	or     $0x1,%dh$/;"	l
f0109614	obj/kern/kernel.asm	/^f0109614:	89 10                	mov    %edx,(%eax)$/;"	l
f0109616	obj/kern/kernel.asm	/^f0109616:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010961b	obj/kern/kernel.asm	/^f010961b:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
f0109620	obj/kern/kernel.asm	/^f0109620:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109626	obj/kern/kernel.asm	/^f0109626:	81 c2 00 04 00 00    	add    $0x400,%edx$/;"	l
f010962c	obj/kern/kernel.asm	/^f010962c:	8b 12                	mov    (%edx),%edx$/;"	l
f010962e	obj/kern/kernel.asm	/^f010962e:	81 ca 00 00 04 00    	or     $0x40000,%edx$/;"	l
f0109634	obj/kern/kernel.asm	/^f0109634:	89 10                	mov    %edx,(%eax)$/;"	l
f0109636	obj/kern/kernel.asm	/^f0109636:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010963b	obj/kern/kernel.asm	/^f010963b:	05 10 04 00 00       	add    $0x410,%eax$/;"	l
f0109640	obj/kern/kernel.asm	/^f0109640:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109646	obj/kern/kernel.asm	/^f0109646:	81 c2 10 04 00 00    	add    $0x410,%edx$/;"	l
f010964c	obj/kern/kernel.asm	/^f010964c:	8b 12                	mov    (%edx),%edx$/;"	l
f010964e	obj/kern/kernel.asm	/^f010964e:	83 ca 0a             	or     $0xa,%edx$/;"	l
f0109651	obj/kern/kernel.asm	/^f0109651:	89 10                	mov    %edx,(%eax)$/;"	l
f0109653	obj/kern/kernel.asm	/^f0109653:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109658	obj/kern/kernel.asm	/^f0109658:	05 10 04 00 00       	add    $0x410,%eax$/;"	l
f010965d	obj/kern/kernel.asm	/^f010965d:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109663	obj/kern/kernel.asm	/^f0109663:	81 c2 10 04 00 00    	add    $0x410,%edx$/;"	l
f0109669	obj/kern/kernel.asm	/^f0109669:	8b 12                	mov    (%edx),%edx$/;"	l
f010966b	obj/kern/kernel.asm	/^f010966b:	80 ce 20             	or     $0x20,%dh$/;"	l
f010966e	obj/kern/kernel.asm	/^f010966e:	89 10                	mov    %edx,(%eax)$/;"	l
f0109670	obj/kern/kernel.asm	/^f0109670:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109675	obj/kern/kernel.asm	/^f0109675:	05 10 04 00 00       	add    $0x410,%eax$/;"	l
f010967a	obj/kern/kernel.asm	/^f010967a:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109680	obj/kern/kernel.asm	/^f0109680:	81 c2 10 04 00 00    	add    $0x410,%edx$/;"	l
f0109686	obj/kern/kernel.asm	/^f0109686:	8b 12                	mov    (%edx),%edx$/;"	l
f0109688	obj/kern/kernel.asm	/^f0109688:	81 ca 00 00 c0 00    	or     $0xc00000,%edx$/;"	l
f010968e	obj/kern/kernel.asm	/^f010968e:	89 10                	mov    %edx,(%eax)$/;"	l
f0109690	obj/kern/kernel.asm	/^f0109690:	c7 44 24 08 00 02 00 	movl   $0x200,0x8(%esp)$/;"	l
f0109697	obj/kern/kernel.asm	/^f0109697:	00 $/;"	l
f0109698	obj/kern/kernel.asm	/^f0109698:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010969f	obj/kern/kernel.asm	/^f010969f:	00 $/;"	l
f01096a0	obj/kern/kernel.asm	/^f01096a0:	c7 04 24 40 28 38 f0 	movl   $0xf0382840,(%esp)$/;"	l
f01096a7	obj/kern/kernel.asm	/^f01096a7:	e8 0e ef ff ff       	call   f01085ba <memset>$/;"	l
f01096ac	obj/kern/kernel.asm	/^f01096ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01096b3	obj/kern/kernel.asm	/^f01096b3:	e9 a1 00 00 00       	jmp    f0109759 <pci_network_attach+0x24c>$/;"	l
f01096b8	obj/kern/kernel.asm	/^f01096b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01096bb	obj/kern/kernel.asm	/^f01096bb:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f01096be	obj/kern/kernel.asm	/^f01096be:	05 40 28 37 f0       	add    $0xf0372840,%eax$/;"	l
f01096c3	obj/kern/kernel.asm	/^f01096c3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01096c7	obj/kern/kernel.asm	/^f01096c7:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
f01096ce	obj/kern/kernel.asm	/^f01096ce:	00 $/;"	l
f01096cf	obj/kern/kernel.asm	/^f01096cf:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f01096d6	obj/kern/kernel.asm	/^f01096d6:	e8 f7 fd ff ff       	call   f01094d2 <_paddr>$/;"	l
f01096db	obj/kern/kernel.asm	/^f01096db:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01096e0	obj/kern/kernel.asm	/^f01096e0:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
f01096e3	obj/kern/kernel.asm	/^f01096e3:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01096e6	obj/kern/kernel.asm	/^f01096e6:	81 c1 40 28 38 f0    	add    $0xf0382840,%ecx$/;"	l
f01096ec	obj/kern/kernel.asm	/^f01096ec:	89 01                	mov    %eax,(%ecx)$/;"	l
f01096ee	obj/kern/kernel.asm	/^f01096ee:	89 51 04             	mov    %edx,0x4(%ecx)$/;"	l
f01096f1	obj/kern/kernel.asm	/^f01096f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01096f4	obj/kern/kernel.asm	/^f01096f4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01096f7	obj/kern/kernel.asm	/^f01096f7:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f01096fc	obj/kern/kernel.asm	/^f01096fc:	0f b6 40 0b          	movzbl 0xb(%eax),%eax$/;"	l
f0109700	obj/kern/kernel.asm	/^f0109700:	83 c8 08             	or     $0x8,%eax$/;"	l
f0109703	obj/kern/kernel.asm	/^f0109703:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109706	obj/kern/kernel.asm	/^f0109706:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f0109709	obj/kern/kernel.asm	/^f0109709:	81 c2 40 28 38 f0    	add    $0xf0382840,%edx$/;"	l
f010970f	obj/kern/kernel.asm	/^f010970f:	88 42 0b             	mov    %al,0xb(%edx)$/;"	l
f0109712	obj/kern/kernel.asm	/^f0109712:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109715	obj/kern/kernel.asm	/^f0109715:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109718	obj/kern/kernel.asm	/^f0109718:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f010971d	obj/kern/kernel.asm	/^f010971d:	0f b6 40 0b          	movzbl 0xb(%eax),%eax$/;"	l
f0109721	obj/kern/kernel.asm	/^f0109721:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
f0109724	obj/kern/kernel.asm	/^f0109724:	89 c2                	mov    %eax,%edx$/;"	l
f0109726	obj/kern/kernel.asm	/^f0109726:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109729	obj/kern/kernel.asm	/^f0109729:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010972c	obj/kern/kernel.asm	/^f010972c:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f0109731	obj/kern/kernel.asm	/^f0109731:	88 50 0b             	mov    %dl,0xb(%eax)$/;"	l
f0109734	obj/kern/kernel.asm	/^f0109734:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109737	obj/kern/kernel.asm	/^f0109737:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010973a	obj/kern/kernel.asm	/^f010973a:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f010973f	obj/kern/kernel.asm	/^f010973f:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109743	obj/kern/kernel.asm	/^f0109743:	83 c8 01             	or     $0x1,%eax$/;"	l
f0109746	obj/kern/kernel.asm	/^f0109746:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109749	obj/kern/kernel.asm	/^f0109749:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f010974c	obj/kern/kernel.asm	/^f010974c:	81 c2 40 28 38 f0    	add    $0xf0382840,%edx$/;"	l
f0109752	obj/kern/kernel.asm	/^f0109752:	88 42 0c             	mov    %al,0xc(%edx)$/;"	l
f0109755	obj/kern/kernel.asm	/^f0109755:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0109759	obj/kern/kernel.asm	/^f0109759:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
f010975d	obj/kern/kernel.asm	/^f010975d:	0f 8e 55 ff ff ff    	jle    f01096b8 <pci_network_attach+0x1ab>$/;"	l
f0109763	obj/kern/kernel.asm	/^f0109763:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109768	obj/kern/kernel.asm	/^f0109768:	05 00 54 00 00       	add    $0x5400,%eax$/;"	l
f010976d	obj/kern/kernel.asm	/^f010976d:	c7 00 52 54 00 12    	movl   $0x12005452,(%eax)$/;"	l
f0109773	obj/kern/kernel.asm	/^f0109773:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109778	obj/kern/kernel.asm	/^f0109778:	05 04 54 00 00       	add    $0x5404,%eax$/;"	l
f010977d	obj/kern/kernel.asm	/^f010977d:	c7 00 34 56 00 00    	movl   $0x5634,(%eax)$/;"	l
f0109783	obj/kern/kernel.asm	/^f0109783:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109788	obj/kern/kernel.asm	/^f0109788:	05 04 54 00 00       	add    $0x5404,%eax$/;"	l
f010978d	obj/kern/kernel.asm	/^f010978d:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f0109793	obj/kern/kernel.asm	/^f0109793:	81 c2 04 54 00 00    	add    $0x5404,%edx$/;"	l
f0109799	obj/kern/kernel.asm	/^f0109799:	8b 12                	mov    (%edx),%edx$/;"	l
f010979b	obj/kern/kernel.asm	/^f010979b:	81 ca 00 00 00 80    	or     $0x80000000,%edx$/;"	l
f01097a1	obj/kern/kernel.asm	/^f01097a1:	89 10                	mov    %edx,(%eax)$/;"	l
f01097a3	obj/kern/kernel.asm	/^f01097a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01097aa	obj/kern/kernel.asm	/^f01097aa:	eb 1d                	jmp    f01097c9 <pci_network_attach+0x2bc>$/;"	l
f01097ac	obj/kern/kernel.asm	/^f01097ac:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01097b1	obj/kern/kernel.asm	/^f01097b1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01097b4	obj/kern/kernel.asm	/^f01097b4:	81 c2 80 14 00 00    	add    $0x1480,%edx$/;"	l
f01097ba	obj/kern/kernel.asm	/^f01097ba:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f01097bd	obj/kern/kernel.asm	/^f01097bd:	01 d0                	add    %edx,%eax$/;"	l
f01097bf	obj/kern/kernel.asm	/^f01097bf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01097c5	obj/kern/kernel.asm	/^f01097c5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01097c9	obj/kern/kernel.asm	/^f01097c9:	83 7d f4 7f          	cmpl   $0x7f,-0xc(%ebp)$/;"	l
f01097cd	obj/kern/kernel.asm	/^f01097cd:	7e dd                	jle    f01097ac <pci_network_attach+0x29f>$/;"	l
f01097cf	obj/kern/kernel.asm	/^f01097cf:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01097d4	obj/kern/kernel.asm	/^f01097d4:	8d 98 00 28 00 00    	lea    0x2800(%eax),%ebx$/;"	l
f01097da	obj/kern/kernel.asm	/^f01097da:	c7 44 24 08 20 20 37 	movl   $0xf0372020,0x8(%esp)$/;"	l
f01097e1	obj/kern/kernel.asm	/^f01097e1:	f0 $/;"	l
f01097e2	obj/kern/kernel.asm	/^f01097e2:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
f01097e9	obj/kern/kernel.asm	/^f01097e9:	00 $/;"	l
f01097ea	obj/kern/kernel.asm	/^f01097ea:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f01097f1	obj/kern/kernel.asm	/^f01097f1:	e8 dc fc ff ff       	call   f01094d2 <_paddr>$/;"	l
f01097f6	obj/kern/kernel.asm	/^f01097f6:	89 03                	mov    %eax,(%ebx)$/;"	l
f01097f8	obj/kern/kernel.asm	/^f01097f8:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01097fd	obj/kern/kernel.asm	/^f01097fd:	05 04 28 00 00       	add    $0x2804,%eax$/;"	l
f0109802	obj/kern/kernel.asm	/^f0109802:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0109808	obj/kern/kernel.asm	/^f0109808:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010980d	obj/kern/kernel.asm	/^f010980d:	05 08 28 00 00       	add    $0x2808,%eax$/;"	l
f0109812	obj/kern/kernel.asm	/^f0109812:	c7 00 00 08 00 00    	movl   $0x800,(%eax)$/;"	l
f0109818	obj/kern/kernel.asm	/^f0109818:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010981d	obj/kern/kernel.asm	/^f010981d:	05 10 28 00 00       	add    $0x2810,%eax$/;"	l
f0109822	obj/kern/kernel.asm	/^f0109822:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0109828	obj/kern/kernel.asm	/^f0109828:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010982d	obj/kern/kernel.asm	/^f010982d:	05 18 28 00 00       	add    $0x2818,%eax$/;"	l
f0109832	obj/kern/kernel.asm	/^f0109832:	c7 00 7f 00 00 00    	movl   $0x7f,(%eax)$/;"	l
f0109838	obj/kern/kernel.asm	/^f0109838:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)$/;"	l
f010983f	obj/kern/kernel.asm	/^f010983f:	00 $/;"	l
f0109840	obj/kern/kernel.asm	/^f0109840:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0109847	obj/kern/kernel.asm	/^f0109847:	00 $/;"	l
f0109848	obj/kern/kernel.asm	/^f0109848:	c7 04 24 20 20 37 f0 	movl   $0xf0372020,(%esp)$/;"	l
f010984f	obj/kern/kernel.asm	/^f010984f:	e8 66 ed ff ff       	call   f01085ba <memset>$/;"	l
f0109854	obj/kern/kernel.asm	/^f0109854:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010985b	obj/kern/kernel.asm	/^f010985b:	eb 3d                	jmp    f010989a <pci_network_attach+0x38d>$/;"	l
f010985d	obj/kern/kernel.asm	/^f010985d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109860	obj/kern/kernel.asm	/^f0109860:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f0109863	obj/kern/kernel.asm	/^f0109863:	05 20 20 33 f0       	add    $0xf0332020,%eax$/;"	l
f0109868	obj/kern/kernel.asm	/^f0109868:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010986c	obj/kern/kernel.asm	/^f010986c:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
f0109873	obj/kern/kernel.asm	/^f0109873:	00 $/;"	l
f0109874	obj/kern/kernel.asm	/^f0109874:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f010987b	obj/kern/kernel.asm	/^f010987b:	e8 52 fc ff ff       	call   f01094d2 <_paddr>$/;"	l
f0109880	obj/kern/kernel.asm	/^f0109880:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0109885	obj/kern/kernel.asm	/^f0109885:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
f0109888	obj/kern/kernel.asm	/^f0109888:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f010988b	obj/kern/kernel.asm	/^f010988b:	81 c1 20 20 37 f0    	add    $0xf0372020,%ecx$/;"	l
f0109891	obj/kern/kernel.asm	/^f0109891:	89 01                	mov    %eax,(%ecx)$/;"	l
f0109893	obj/kern/kernel.asm	/^f0109893:	89 51 04             	mov    %edx,0x4(%ecx)$/;"	l
f0109896	obj/kern/kernel.asm	/^f0109896:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f010989a	obj/kern/kernel.asm	/^f010989a:	83 7d f4 7f          	cmpl   $0x7f,-0xc(%ebp)$/;"	l
f010989e	obj/kern/kernel.asm	/^f010989e:	7e bd                	jle    f010985d <pci_network_attach+0x350>$/;"	l
f01098a0	obj/kern/kernel.asm	/^f01098a0:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01098a5	obj/kern/kernel.asm	/^f01098a5:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f01098aa	obj/kern/kernel.asm	/^f01098aa:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f01098b0	obj/kern/kernel.asm	/^f01098b0:	81 c2 00 01 00 00    	add    $0x100,%edx$/;"	l
f01098b6	obj/kern/kernel.asm	/^f01098b6:	8b 12                	mov    (%edx),%edx$/;"	l
f01098b8	obj/kern/kernel.asm	/^f01098b8:	80 e2 3f             	and    $0x3f,%dl$/;"	l
f01098bb	obj/kern/kernel.asm	/^f01098bb:	89 10                	mov    %edx,(%eax)$/;"	l
f01098bd	obj/kern/kernel.asm	/^f01098bd:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01098c2	obj/kern/kernel.asm	/^f01098c2:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f01098c7	obj/kern/kernel.asm	/^f01098c7:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f01098cd	obj/kern/kernel.asm	/^f01098cd:	81 c2 00 01 00 00    	add    $0x100,%edx$/;"	l
f01098d3	obj/kern/kernel.asm	/^f01098d3:	8b 12                	mov    (%edx),%edx$/;"	l
f01098d5	obj/kern/kernel.asm	/^f01098d5:	81 e2 ff ff fc ff    	and    $0xfffcffff,%edx$/;"	l
f01098db	obj/kern/kernel.asm	/^f01098db:	89 10                	mov    %edx,(%eax)$/;"	l
f01098dd	obj/kern/kernel.asm	/^f01098dd:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f01098e2	obj/kern/kernel.asm	/^f01098e2:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f01098e7	obj/kern/kernel.asm	/^f01098e7:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f01098ed	obj/kern/kernel.asm	/^f01098ed:	81 c2 00 01 00 00    	add    $0x100,%edx$/;"	l
f01098f3	obj/kern/kernel.asm	/^f01098f3:	8b 12                	mov    (%edx),%edx$/;"	l
f01098f5	obj/kern/kernel.asm	/^f01098f5:	81 ca 00 00 00 04    	or     $0x4000000,%edx$/;"	l
f01098fb	obj/kern/kernel.asm	/^f01098fb:	89 10                	mov    %edx,(%eax)$/;"	l
f01098fd	obj/kern/kernel.asm	/^f01098fd:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109902	obj/kern/kernel.asm	/^f0109902:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f0109907	obj/kern/kernel.asm	/^f0109907:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f010990d	obj/kern/kernel.asm	/^f010990d:	81 c2 00 01 00 00    	add    $0x100,%edx$/;"	l
f0109913	obj/kern/kernel.asm	/^f0109913:	8b 12                	mov    (%edx),%edx$/;"	l
f0109915	obj/kern/kernel.asm	/^f0109915:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
f0109918	obj/kern/kernel.asm	/^f0109918:	89 10                	mov    %edx,(%eax)$/;"	l
f010991a	obj/kern/kernel.asm	/^f010991a:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f010991f	obj/kern/kernel.asm	/^f010991f:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
f0109924	obj/kern/kernel.asm	/^f0109924:	8b 15 20 28 37 f0    	mov    0xf0372820,%edx$/;"	l
f010992a	obj/kern/kernel.asm	/^f010992a:	81 c2 00 01 00 00    	add    $0x100,%edx$/;"	l
f0109930	obj/kern/kernel.asm	/^f0109930:	8b 12                	mov    (%edx),%edx$/;"	l
f0109932	obj/kern/kernel.asm	/^f0109932:	83 ca 02             	or     $0x2,%edx$/;"	l
f0109935	obj/kern/kernel.asm	/^f0109935:	89 10                	mov    %edx,(%eax)$/;"	l
f0109937	obj/kern/kernel.asm	/^f0109937:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010993c	obj/kern/kernel.asm	/^f010993c:	83 c4 24             	add    $0x24,%esp$/;"	l
f010993f	obj/kern/kernel.asm	/^f010993f:	5b                   	pop    %ebx$/;"	l
f0109940	obj/kern/kernel.asm	/^f0109940:	5d                   	pop    %ebp$/;"	l
f0109941	obj/kern/kernel.asm	/^f0109941:	c3                   	ret    $/;"	l
f0109942	obj/kern/kernel.asm	/^f0109942 <e1000_transmit>:$/;"	l
f0109942	obj/kern/kernel.asm	/^f0109942:	55                   	push   %ebp$/;"	l
f0109943	obj/kern/kernel.asm	/^f0109943:	89 e5                	mov    %esp,%ebp$/;"	l
f0109945	obj/kern/kernel.asm	/^f0109945:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0109948	obj/kern/kernel.asm	/^f0109948:	81 7d 0c 00 08 00 00 	cmpl   $0x800,0xc(%ebp)$/;"	l
f010994f	obj/kern/kernel.asm	/^f010994f:	76 23                	jbe    f0109974 <e1000_transmit+0x32>$/;"	l
f0109951	obj/kern/kernel.asm	/^f0109951:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109954	obj/kern/kernel.asm	/^f0109954:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0109958	obj/kern/kernel.asm	/^f0109958:	c7 44 24 08 b0 c7 10 	movl   $0xf010c7b0,0x8(%esp)$/;"	l
f010995f	obj/kern/kernel.asm	/^f010995f:	f0 $/;"	l
f0109960	obj/kern/kernel.asm	/^f0109960:	c7 44 24 04 8c 00 00 	movl   $0x8c,0x4(%esp)$/;"	l
f0109967	obj/kern/kernel.asm	/^f0109967:	00 $/;"	l
f0109968	obj/kern/kernel.asm	/^f0109968:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f010996f	obj/kern/kernel.asm	/^f010996f:	e8 8e 69 ff ff       	call   f0100302 <_panic>$/;"	l
f0109974	obj/kern/kernel.asm	/^f0109974:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109979	obj/kern/kernel.asm	/^f0109979:	8b 80 18 38 00 00    	mov    0x3818(%eax),%eax$/;"	l
f010997f	obj/kern/kernel.asm	/^f010997f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109982	obj/kern/kernel.asm	/^f0109982:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109985	obj/kern/kernel.asm	/^f0109985:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109988	obj/kern/kernel.asm	/^f0109988:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f010998d	obj/kern/kernel.asm	/^f010998d:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109991	obj/kern/kernel.asm	/^f0109991:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0109994	obj/kern/kernel.asm	/^f0109994:	83 e0 01             	and    $0x1,%eax$/;"	l
f0109997	obj/kern/kernel.asm	/^f0109997:	85 c0                	test   %eax,%eax$/;"	l
f0109999	obj/kern/kernel.asm	/^f0109999:	0f 84 94 00 00 00    	je     f0109a33 <e1000_transmit+0xf1>$/;"	l
f010999f	obj/kern/kernel.asm	/^f010999f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01099a2	obj/kern/kernel.asm	/^f01099a2:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f01099a5	obj/kern/kernel.asm	/^f01099a5:	8d 90 40 28 37 f0    	lea    -0xfc8d7c0(%eax),%edx$/;"	l
f01099ab	obj/kern/kernel.asm	/^f01099ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01099ae	obj/kern/kernel.asm	/^f01099ae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01099b2	obj/kern/kernel.asm	/^f01099b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01099b5	obj/kern/kernel.asm	/^f01099b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01099b9	obj/kern/kernel.asm	/^f01099b9:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01099bc	obj/kern/kernel.asm	/^f01099bc:	e8 67 ec ff ff       	call   f0108628 <memmove>$/;"	l
f01099c1	obj/kern/kernel.asm	/^f01099c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01099c4	obj/kern/kernel.asm	/^f01099c4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01099c7	obj/kern/kernel.asm	/^f01099c7:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f01099cc	obj/kern/kernel.asm	/^f01099cc:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f01099d0	obj/kern/kernel.asm	/^f01099d0:	83 e0 fe             	and    $0xfffffffe,%eax$/;"	l
f01099d3	obj/kern/kernel.asm	/^f01099d3:	89 c2                	mov    %eax,%edx$/;"	l
f01099d5	obj/kern/kernel.asm	/^f01099d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01099d8	obj/kern/kernel.asm	/^f01099d8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01099db	obj/kern/kernel.asm	/^f01099db:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f01099e0	obj/kern/kernel.asm	/^f01099e0:	88 50 0c             	mov    %dl,0xc(%eax)$/;"	l
f01099e3	obj/kern/kernel.asm	/^f01099e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01099e6	obj/kern/kernel.asm	/^f01099e6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01099e9	obj/kern/kernel.asm	/^f01099e9:	05 40 28 38 f0       	add    $0xf0382840,%eax$/;"	l
f01099ee	obj/kern/kernel.asm	/^f01099ee:	0f b6 40 0b          	movzbl 0xb(%eax),%eax$/;"	l
f01099f2	obj/kern/kernel.asm	/^f01099f2:	83 c8 01             	or     $0x1,%eax$/;"	l
f01099f5	obj/kern/kernel.asm	/^f01099f5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01099f8	obj/kern/kernel.asm	/^f01099f8:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f01099fb	obj/kern/kernel.asm	/^f01099fb:	81 c2 40 28 38 f0    	add    $0xf0382840,%edx$/;"	l
f0109a01	obj/kern/kernel.asm	/^f0109a01:	88 42 0b             	mov    %al,0xb(%edx)$/;"	l
f0109a04	obj/kern/kernel.asm	/^f0109a04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109a07	obj/kern/kernel.asm	/^f0109a07:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109a0a	obj/kern/kernel.asm	/^f0109a0a:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f0109a0d	obj/kern/kernel.asm	/^f0109a0d:	81 c2 40 28 38 f0    	add    $0xf0382840,%edx$/;"	l
f0109a13	obj/kern/kernel.asm	/^f0109a13:	66 89 42 08          	mov    %ax,0x8(%edx)$/;"	l
f0109a17	obj/kern/kernel.asm	/^f0109a17:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109a1c	obj/kern/kernel.asm	/^f0109a1c:	05 18 38 00 00       	add    $0x3818,%eax$/;"	l
f0109a21	obj/kern/kernel.asm	/^f0109a21:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109a24	obj/kern/kernel.asm	/^f0109a24:	83 c2 01             	add    $0x1,%edx$/;"	l
f0109a27	obj/kern/kernel.asm	/^f0109a27:	83 e2 1f             	and    $0x1f,%edx$/;"	l
f0109a2a	obj/kern/kernel.asm	/^f0109a2a:	89 10                	mov    %edx,(%eax)$/;"	l
f0109a2c	obj/kern/kernel.asm	/^f0109a2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0109a31	obj/kern/kernel.asm	/^f0109a31:	eb 05                	jmp    f0109a38 <e1000_transmit+0xf6>$/;"	l
f0109a33	obj/kern/kernel.asm	/^f0109a33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0109a38	obj/kern/kernel.asm	/^f0109a38:	c9                   	leave  $/;"	l
f0109a39	obj/kern/kernel.asm	/^f0109a39:	c3                   	ret    $/;"	l
f0109a3a	obj/kern/kernel.asm	/^f0109a3a <e1000_receive>:$/;"	l
f0109a3a	obj/kern/kernel.asm	/^f0109a3a:	55                   	push   %ebp$/;"	l
f0109a3b	obj/kern/kernel.asm	/^f0109a3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0109a3d	obj/kern/kernel.asm	/^f0109a3d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0109a40	obj/kern/kernel.asm	/^f0109a40:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109a45	obj/kern/kernel.asm	/^f0109a45:	05 18 28 00 00       	add    $0x2818,%eax$/;"	l
f0109a4a	obj/kern/kernel.asm	/^f0109a4a:	8b 00                	mov    (%eax),%eax$/;"	l
f0109a4c	obj/kern/kernel.asm	/^f0109a4c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0109a4f	obj/kern/kernel.asm	/^f0109a4f:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0109a52	obj/kern/kernel.asm	/^f0109a52:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109a55	obj/kern/kernel.asm	/^f0109a55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109a58	obj/kern/kernel.asm	/^f0109a58:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109a5b	obj/kern/kernel.asm	/^f0109a5b:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109a60	obj/kern/kernel.asm	/^f0109a60:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109a64	obj/kern/kernel.asm	/^f0109a64:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0109a67	obj/kern/kernel.asm	/^f0109a67:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109a6c	obj/kern/kernel.asm	/^f0109a6c:	05 18 28 00 00       	add    $0x2818,%eax$/;"	l
f0109a71	obj/kern/kernel.asm	/^f0109a71:	8b 00                	mov    (%eax),%eax$/;"	l
f0109a73	obj/kern/kernel.asm	/^f0109a73:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0109a77	obj/kern/kernel.asm	/^f0109a77:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109a7a	obj/kern/kernel.asm	/^f0109a7a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0109a7e	obj/kern/kernel.asm	/^f0109a7e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109a82	obj/kern/kernel.asm	/^f0109a82:	c7 04 24 f8 c7 10 f0 	movl   $0xf010c7f8,(%esp)$/;"	l
f0109a89	obj/kern/kernel.asm	/^f0109a89:	e8 b1 b8 ff ff       	call   f010533f <cprintf>$/;"	l
f0109a8e	obj/kern/kernel.asm	/^f0109a8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109a91	obj/kern/kernel.asm	/^f0109a91:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109a94	obj/kern/kernel.asm	/^f0109a94:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109a99	obj/kern/kernel.asm	/^f0109a99:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109a9d	obj/kern/kernel.asm	/^f0109a9d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0109aa0	obj/kern/kernel.asm	/^f0109aa0:	83 e0 01             	and    $0x1,%eax$/;"	l
f0109aa3	obj/kern/kernel.asm	/^f0109aa3:	85 c0                	test   %eax,%eax$/;"	l
f0109aa5	obj/kern/kernel.asm	/^f0109aa5:	75 16                	jne    f0109abd <e1000_receive+0x83>$/;"	l
f0109aa7	obj/kern/kernel.asm	/^f0109aa7:	c7 04 24 3f c8 10 f0 	movl   $0xf010c83f,(%esp)$/;"	l
f0109aae	obj/kern/kernel.asm	/^f0109aae:	e8 8c b8 ff ff       	call   f010533f <cprintf>$/;"	l
f0109ab3	obj/kern/kernel.asm	/^f0109ab3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0109ab8	obj/kern/kernel.asm	/^f0109ab8:	e9 e8 00 00 00       	jmp    f0109ba5 <e1000_receive+0x16b>$/;"	l
f0109abd	obj/kern/kernel.asm	/^f0109abd:	c7 04 24 46 c8 10 f0 	movl   $0xf010c846,(%esp)$/;"	l
f0109ac4	obj/kern/kernel.asm	/^f0109ac4:	e8 76 b8 ff ff       	call   f010533f <cprintf>$/;"	l
f0109ac9	obj/kern/kernel.asm	/^f0109ac9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109acc	obj/kern/kernel.asm	/^f0109acc:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109acf	obj/kern/kernel.asm	/^f0109acf:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109ad4	obj/kern/kernel.asm	/^f0109ad4:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109ad8	obj/kern/kernel.asm	/^f0109ad8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0109adb	obj/kern/kernel.asm	/^f0109adb:	83 e0 02             	and    $0x2,%eax$/;"	l
f0109ade	obj/kern/kernel.asm	/^f0109ade:	85 c0                	test   %eax,%eax$/;"	l
f0109ae0	obj/kern/kernel.asm	/^f0109ae0:	75 1c                	jne    f0109afe <e1000_receive+0xc4>$/;"	l
f0109ae2	obj/kern/kernel.asm	/^f0109ae2:	c7 44 24 08 64 c8 10 	movl   $0xf010c864,0x8(%esp)$/;"	l
f0109ae9	obj/kern/kernel.asm	/^f0109ae9:	f0 $/;"	l
f0109aea	obj/kern/kernel.asm	/^f0109aea:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f0109af1	obj/kern/kernel.asm	/^f0109af1:	00 $/;"	l
f0109af2	obj/kern/kernel.asm	/^f0109af2:	c7 04 24 a1 c7 10 f0 	movl   $0xf010c7a1,(%esp)$/;"	l
f0109af9	obj/kern/kernel.asm	/^f0109af9:	e8 04 68 ff ff       	call   f0100302 <_panic>$/;"	l
f0109afe	obj/kern/kernel.asm	/^f0109afe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b01	obj/kern/kernel.asm	/^f0109b01:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109b04	obj/kern/kernel.asm	/^f0109b04:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109b09	obj/kern/kernel.asm	/^f0109b09:	0f b7 40 08          	movzwl 0x8(%eax),%eax$/;"	l
f0109b0d	obj/kern/kernel.asm	/^f0109b0d:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f0109b10	obj/kern/kernel.asm	/^f0109b10:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109b13	obj/kern/kernel.asm	/^f0109b13:	89 10                	mov    %edx,(%eax)$/;"	l
f0109b15	obj/kern/kernel.asm	/^f0109b15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109b18	obj/kern/kernel.asm	/^f0109b18:	8b 00                	mov    (%eax),%eax$/;"	l
f0109b1a	obj/kern/kernel.asm	/^f0109b1a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109b1d	obj/kern/kernel.asm	/^f0109b1d:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f0109b20	obj/kern/kernel.asm	/^f0109b20:	81 c2 20 20 33 f0    	add    $0xf0332020,%edx$/;"	l
f0109b26	obj/kern/kernel.asm	/^f0109b26:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0109b2a	obj/kern/kernel.asm	/^f0109b2a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0109b2e	obj/kern/kernel.asm	/^f0109b2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109b31	obj/kern/kernel.asm	/^f0109b31:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109b34	obj/kern/kernel.asm	/^f0109b34:	e8 ef ea ff ff       	call   f0108628 <memmove>$/;"	l
f0109b39	obj/kern/kernel.asm	/^f0109b39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b3c	obj/kern/kernel.asm	/^f0109b3c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109b3f	obj/kern/kernel.asm	/^f0109b3f:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109b44	obj/kern/kernel.asm	/^f0109b44:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109b48	obj/kern/kernel.asm	/^f0109b48:	83 e0 fe             	and    $0xfffffffe,%eax$/;"	l
f0109b4b	obj/kern/kernel.asm	/^f0109b4b:	89 c2                	mov    %eax,%edx$/;"	l
f0109b4d	obj/kern/kernel.asm	/^f0109b4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b50	obj/kern/kernel.asm	/^f0109b50:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109b53	obj/kern/kernel.asm	/^f0109b53:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109b58	obj/kern/kernel.asm	/^f0109b58:	88 50 0c             	mov    %dl,0xc(%eax)$/;"	l
f0109b5b	obj/kern/kernel.asm	/^f0109b5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b5e	obj/kern/kernel.asm	/^f0109b5e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109b61	obj/kern/kernel.asm	/^f0109b61:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109b66	obj/kern/kernel.asm	/^f0109b66:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0109b6a	obj/kern/kernel.asm	/^f0109b6a:	83 e0 fd             	and    $0xfffffffd,%eax$/;"	l
f0109b6d	obj/kern/kernel.asm	/^f0109b6d:	89 c2                	mov    %eax,%edx$/;"	l
f0109b6f	obj/kern/kernel.asm	/^f0109b6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b72	obj/kern/kernel.asm	/^f0109b72:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0109b75	obj/kern/kernel.asm	/^f0109b75:	05 20 20 37 f0       	add    $0xf0372020,%eax$/;"	l
f0109b7a	obj/kern/kernel.asm	/^f0109b7a:	88 50 0c             	mov    %dl,0xc(%eax)$/;"	l
f0109b7d	obj/kern/kernel.asm	/^f0109b7d:	a1 20 28 37 f0       	mov    0xf0372820,%eax$/;"	l
f0109b82	obj/kern/kernel.asm	/^f0109b82:	8d 90 18 28 00 00    	lea    0x2818(%eax),%edx$/;"	l
f0109b88	obj/kern/kernel.asm	/^f0109b88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b8b	obj/kern/kernel.asm	/^f0109b8b:	89 02                	mov    %eax,(%edx)$/;"	l
f0109b8d	obj/kern/kernel.asm	/^f0109b8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109b90	obj/kern/kernel.asm	/^f0109b90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109b94	obj/kern/kernel.asm	/^f0109b94:	c7 04 24 ab c8 10 f0 	movl   $0xf010c8ab,(%esp)$/;"	l
f0109b9b	obj/kern/kernel.asm	/^f0109b9b:	e8 9f b7 ff ff       	call   f010533f <cprintf>$/;"	l
f0109ba0	obj/kern/kernel.asm	/^f0109ba0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0109ba5	obj/kern/kernel.asm	/^f0109ba5:	c9                   	leave  $/;"	l
f0109ba6	obj/kern/kernel.asm	/^f0109ba6:	c3                   	ret    $/;"	l
f0109ba7	obj/kern/kernel.asm	/^f0109ba7 <pci_conf1_set_addr>:$/;"	l
f0109ba7	obj/kern/kernel.asm	/^f0109ba7:	55                   	push   %ebp$/;"	l
f0109ba8	obj/kern/kernel.asm	/^f0109ba8:	89 e5                	mov    %esp,%ebp$/;"	l
f0109baa	obj/kern/kernel.asm	/^f0109baa:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0109bad	obj/kern/kernel.asm	/^f0109bad:	81 7d 08 ff 00 00 00 	cmpl   $0xff,0x8(%ebp)$/;"	l
f0109bb4	obj/kern/kernel.asm	/^f0109bb4:	76 24                	jbe    f0109bda <pci_conf1_set_addr+0x33>$/;"	l
f0109bb6	obj/kern/kernel.asm	/^f0109bb6:	c7 44 24 0c c8 c8 10 	movl   $0xf010c8c8,0xc(%esp)$/;"	l
f0109bbd	obj/kern/kernel.asm	/^f0109bbd:	f0 $/;"	l
f0109bbe	obj/kern/kernel.asm	/^f0109bbe:	c7 44 24 08 d2 c8 10 	movl   $0xf010c8d2,0x8(%esp)$/;"	l
f0109bc5	obj/kern/kernel.asm	/^f0109bc5:	f0 $/;"	l
f0109bc6	obj/kern/kernel.asm	/^f0109bc6:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f0109bcd	obj/kern/kernel.asm	/^f0109bcd:	00 $/;"	l
f0109bce	obj/kern/kernel.asm	/^f0109bce:	c7 04 24 e7 c8 10 f0 	movl   $0xf010c8e7,(%esp)$/;"	l
f0109bd5	obj/kern/kernel.asm	/^f0109bd5:	e8 28 67 ff ff       	call   f0100302 <_panic>$/;"	l
f0109bda	obj/kern/kernel.asm	/^f0109bda:	83 7d 0c 1f          	cmpl   $0x1f,0xc(%ebp)$/;"	l
f0109bde	obj/kern/kernel.asm	/^f0109bde:	76 24                	jbe    f0109c04 <pci_conf1_set_addr+0x5d>$/;"	l
f0109be0	obj/kern/kernel.asm	/^f0109be0:	c7 44 24 0c f2 c8 10 	movl   $0xf010c8f2,0xc(%esp)$/;"	l
f0109be7	obj/kern/kernel.asm	/^f0109be7:	f0 $/;"	l
f0109be8	obj/kern/kernel.asm	/^f0109be8:	c7 44 24 08 d2 c8 10 	movl   $0xf010c8d2,0x8(%esp)$/;"	l
f0109bef	obj/kern/kernel.asm	/^f0109bef:	f0 $/;"	l
f0109bf0	obj/kern/kernel.asm	/^f0109bf0:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0109bf7	obj/kern/kernel.asm	/^f0109bf7:	00 $/;"	l
f0109bf8	obj/kern/kernel.asm	/^f0109bf8:	c7 04 24 e7 c8 10 f0 	movl   $0xf010c8e7,(%esp)$/;"	l
f0109bff	obj/kern/kernel.asm	/^f0109bff:	e8 fe 66 ff ff       	call   f0100302 <_panic>$/;"	l
f0109c04	obj/kern/kernel.asm	/^f0109c04:	83 7d 10 07          	cmpl   $0x7,0x10(%ebp)$/;"	l
f0109c08	obj/kern/kernel.asm	/^f0109c08:	76 24                	jbe    f0109c2e <pci_conf1_set_addr+0x87>$/;"	l
f0109c0a	obj/kern/kernel.asm	/^f0109c0a:	c7 44 24 0c fb c8 10 	movl   $0xf010c8fb,0xc(%esp)$/;"	l
f0109c11	obj/kern/kernel.asm	/^f0109c11:	f0 $/;"	l
f0109c12	obj/kern/kernel.asm	/^f0109c12:	c7 44 24 08 d2 c8 10 	movl   $0xf010c8d2,0x8(%esp)$/;"	l
f0109c19	obj/kern/kernel.asm	/^f0109c19:	f0 $/;"	l
f0109c1a	obj/kern/kernel.asm	/^f0109c1a:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0109c21	obj/kern/kernel.asm	/^f0109c21:	00 $/;"	l
f0109c22	obj/kern/kernel.asm	/^f0109c22:	c7 04 24 e7 c8 10 f0 	movl   $0xf010c8e7,(%esp)$/;"	l
f0109c29	obj/kern/kernel.asm	/^f0109c29:	e8 d4 66 ff ff       	call   f0100302 <_panic>$/;"	l
f0109c2e	obj/kern/kernel.asm	/^f0109c2e:	81 7d 14 ff 00 00 00 	cmpl   $0xff,0x14(%ebp)$/;"	l
f0109c35	obj/kern/kernel.asm	/^f0109c35:	76 24                	jbe    f0109c5b <pci_conf1_set_addr+0xb4>$/;"	l
f0109c37	obj/kern/kernel.asm	/^f0109c37:	c7 44 24 0c 04 c9 10 	movl   $0xf010c904,0xc(%esp)$/;"	l
f0109c3e	obj/kern/kernel.asm	/^f0109c3e:	f0 $/;"	l
f0109c3f	obj/kern/kernel.asm	/^f0109c3f:	c7 44 24 08 d2 c8 10 	movl   $0xf010c8d2,0x8(%esp)$/;"	l
f0109c46	obj/kern/kernel.asm	/^f0109c46:	f0 $/;"	l
f0109c47	obj/kern/kernel.asm	/^f0109c47:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f0109c4e	obj/kern/kernel.asm	/^f0109c4e:	00 $/;"	l
f0109c4f	obj/kern/kernel.asm	/^f0109c4f:	c7 04 24 e7 c8 10 f0 	movl   $0xf010c8e7,(%esp)$/;"	l
f0109c56	obj/kern/kernel.asm	/^f0109c56:	e8 a7 66 ff ff       	call   f0100302 <_panic>$/;"	l
f0109c5b	obj/kern/kernel.asm	/^f0109c5b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0109c5e	obj/kern/kernel.asm	/^f0109c5e:	83 e0 03             	and    $0x3,%eax$/;"	l
f0109c61	obj/kern/kernel.asm	/^f0109c61:	85 c0                	test   %eax,%eax$/;"	l
f0109c63	obj/kern/kernel.asm	/^f0109c63:	74 24                	je     f0109c89 <pci_conf1_set_addr+0xe2>$/;"	l
f0109c65	obj/kern/kernel.asm	/^f0109c65:	c7 44 24 0c 11 c9 10 	movl   $0xf010c911,0xc(%esp)$/;"	l
f0109c6c	obj/kern/kernel.asm	/^f0109c6c:	f0 $/;"	l
f0109c6d	obj/kern/kernel.asm	/^f0109c6d:	c7 44 24 08 d2 c8 10 	movl   $0xf010c8d2,0x8(%esp)$/;"	l
f0109c74	obj/kern/kernel.asm	/^f0109c74:	f0 $/;"	l
f0109c75	obj/kern/kernel.asm	/^f0109c75:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
f0109c7c	obj/kern/kernel.asm	/^f0109c7c:	00 $/;"	l
f0109c7d	obj/kern/kernel.asm	/^f0109c7d:	c7 04 24 e7 c8 10 f0 	movl   $0xf010c8e7,(%esp)$/;"	l
f0109c84	obj/kern/kernel.asm	/^f0109c84:	e8 79 66 ff ff       	call   f0100302 <_panic>$/;"	l
f0109c89	obj/kern/kernel.asm	/^f0109c89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109c8c	obj/kern/kernel.asm	/^f0109c8c:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0109c8f	obj/kern/kernel.asm	/^f0109c8f:	89 c2                	mov    %eax,%edx$/;"	l
f0109c91	obj/kern/kernel.asm	/^f0109c91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109c94	obj/kern/kernel.asm	/^f0109c94:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f0109c97	obj/kern/kernel.asm	/^f0109c97:	09 c2                	or     %eax,%edx$/;"	l
f0109c99	obj/kern/kernel.asm	/^f0109c99:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109c9c	obj/kern/kernel.asm	/^f0109c9c:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0109c9f	obj/kern/kernel.asm	/^f0109c9f:	09 d0                	or     %edx,%eax$/;"	l
f0109ca1	obj/kern/kernel.asm	/^f0109ca1:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
f0109ca4	obj/kern/kernel.asm	/^f0109ca4:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
f0109ca9	obj/kern/kernel.asm	/^f0109ca9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109cac	obj/kern/kernel.asm	/^f0109cac:	a1 38 a6 12 f0       	mov    0xf012a638,%eax$/;"	l
f0109cb1	obj/kern/kernel.asm	/^f0109cb1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0109cb4	obj/kern/kernel.asm	/^f0109cb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109cb7	obj/kern/kernel.asm	/^f0109cb7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0109cba	obj/kern/kernel.asm	/^f0109cba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0109cbd	obj/kern/kernel.asm	/^f0109cbd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0109cc0	obj/kern/kernel.asm	/^f0109cc0:	ef                   	out    %eax,(%dx)$/;"	l
f0109cc1	obj/kern/kernel.asm	/^f0109cc1:	c9                   	leave  $/;"	l
f0109cc2	obj/kern/kernel.asm	/^f0109cc2:	c3                   	ret    $/;"	l
f0109cc3	obj/kern/kernel.asm	/^f0109cc3 <pci_conf_read>:$/;"	l
f0109cc3	obj/kern/kernel.asm	/^f0109cc3:	55                   	push   %ebp$/;"	l
f0109cc4	obj/kern/kernel.asm	/^f0109cc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0109cc6	obj/kern/kernel.asm	/^f0109cc6:	53                   	push   %ebx$/;"	l
f0109cc7	obj/kern/kernel.asm	/^f0109cc7:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0109cca	obj/kern/kernel.asm	/^f0109cca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109ccd	obj/kern/kernel.asm	/^f0109ccd:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0109cd0	obj/kern/kernel.asm	/^f0109cd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109cd3	obj/kern/kernel.asm	/^f0109cd3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0109cd6	obj/kern/kernel.asm	/^f0109cd6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109cd9	obj/kern/kernel.asm	/^f0109cd9:	8b 00                	mov    (%eax),%eax$/;"	l
f0109cdb	obj/kern/kernel.asm	/^f0109cdb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0109cde	obj/kern/kernel.asm	/^f0109cde:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0109ce1	obj/kern/kernel.asm	/^f0109ce1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0109ce5	obj/kern/kernel.asm	/^f0109ce5:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0109ce9	obj/kern/kernel.asm	/^f0109ce9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0109ced	obj/kern/kernel.asm	/^f0109ced:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109cf0	obj/kern/kernel.asm	/^f0109cf0:	e8 b2 fe ff ff       	call   f0109ba7 <pci_conf1_set_addr>$/;"	l
f0109cf5	obj/kern/kernel.asm	/^f0109cf5:	a1 3c a6 12 f0       	mov    0xf012a63c,%eax$/;"	l
f0109cfa	obj/kern/kernel.asm	/^f0109cfa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109cfd	obj/kern/kernel.asm	/^f0109cfd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0109d00	obj/kern/kernel.asm	/^f0109d00:	89 c2                	mov    %eax,%edx$/;"	l
f0109d02	obj/kern/kernel.asm	/^f0109d02:	ed                   	in     (%dx),%eax$/;"	l
f0109d03	obj/kern/kernel.asm	/^f0109d03:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0109d06	obj/kern/kernel.asm	/^f0109d06:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0109d09	obj/kern/kernel.asm	/^f0109d09:	83 c4 24             	add    $0x24,%esp$/;"	l
f0109d0c	obj/kern/kernel.asm	/^f0109d0c:	5b                   	pop    %ebx$/;"	l
f0109d0d	obj/kern/kernel.asm	/^f0109d0d:	5d                   	pop    %ebp$/;"	l
f0109d0e	obj/kern/kernel.asm	/^f0109d0e:	c3                   	ret    $/;"	l
f0109d0f	obj/kern/kernel.asm	/^f0109d0f <pci_conf_write>:$/;"	l
f0109d0f	obj/kern/kernel.asm	/^f0109d0f:	55                   	push   %ebp$/;"	l
f0109d10	obj/kern/kernel.asm	/^f0109d10:	89 e5                	mov    %esp,%ebp$/;"	l
f0109d12	obj/kern/kernel.asm	/^f0109d12:	53                   	push   %ebx$/;"	l
f0109d13	obj/kern/kernel.asm	/^f0109d13:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0109d16	obj/kern/kernel.asm	/^f0109d16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109d19	obj/kern/kernel.asm	/^f0109d19:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0109d1c	obj/kern/kernel.asm	/^f0109d1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109d1f	obj/kern/kernel.asm	/^f0109d1f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0109d22	obj/kern/kernel.asm	/^f0109d22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109d25	obj/kern/kernel.asm	/^f0109d25:	8b 00                	mov    (%eax),%eax$/;"	l
f0109d27	obj/kern/kernel.asm	/^f0109d27:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0109d2a	obj/kern/kernel.asm	/^f0109d2a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0109d2d	obj/kern/kernel.asm	/^f0109d2d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0109d31	obj/kern/kernel.asm	/^f0109d31:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0109d35	obj/kern/kernel.asm	/^f0109d35:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0109d39	obj/kern/kernel.asm	/^f0109d39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109d3c	obj/kern/kernel.asm	/^f0109d3c:	e8 66 fe ff ff       	call   f0109ba7 <pci_conf1_set_addr>$/;"	l
f0109d41	obj/kern/kernel.asm	/^f0109d41:	a1 3c a6 12 f0       	mov    0xf012a63c,%eax$/;"	l
f0109d46	obj/kern/kernel.asm	/^f0109d46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0109d49	obj/kern/kernel.asm	/^f0109d49:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109d4c	obj/kern/kernel.asm	/^f0109d4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0109d4f	obj/kern/kernel.asm	/^f0109d4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0109d52	obj/kern/kernel.asm	/^f0109d52:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109d55	obj/kern/kernel.asm	/^f0109d55:	ef                   	out    %eax,(%dx)$/;"	l
f0109d56	obj/kern/kernel.asm	/^f0109d56:	83 c4 24             	add    $0x24,%esp$/;"	l
f0109d59	obj/kern/kernel.asm	/^f0109d59:	5b                   	pop    %ebx$/;"	l
f0109d5a	obj/kern/kernel.asm	/^f0109d5a:	5d                   	pop    %ebp$/;"	l
f0109d5b	obj/kern/kernel.asm	/^f0109d5b:	c3                   	ret    $/;"	l
f0109d5c	obj/kern/kernel.asm	/^f0109d5c <pci_attach_match>:$/;"	l
f0109d5c	obj/kern/kernel.asm	/^f0109d5c:	55                   	push   %ebp$/;"	l
f0109d5d	obj/kern/kernel.asm	/^f0109d5d:	89 e5                	mov    %esp,%ebp$/;"	l
f0109d5f	obj/kern/kernel.asm	/^f0109d5f:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0109d62	obj/kern/kernel.asm	/^f0109d62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0109d69	obj/kern/kernel.asm	/^f0109d69:	e9 aa 00 00 00       	jmp    f0109e18 <pci_attach_match+0xbc>$/;"	l
f0109d6e	obj/kern/kernel.asm	/^f0109d6e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109d71	obj/kern/kernel.asm	/^f0109d71:	89 d0                	mov    %edx,%eax$/;"	l
f0109d73	obj/kern/kernel.asm	/^f0109d73:	01 c0                	add    %eax,%eax$/;"	l
f0109d75	obj/kern/kernel.asm	/^f0109d75:	01 d0                	add    %edx,%eax$/;"	l
f0109d77	obj/kern/kernel.asm	/^f0109d77:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0109d7a	obj/kern/kernel.asm	/^f0109d7a:	89 c2                	mov    %eax,%edx$/;"	l
f0109d7c	obj/kern/kernel.asm	/^f0109d7c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109d7f	obj/kern/kernel.asm	/^f0109d7f:	01 d0                	add    %edx,%eax$/;"	l
f0109d81	obj/kern/kernel.asm	/^f0109d81:	8b 00                	mov    (%eax),%eax$/;"	l
f0109d83	obj/kern/kernel.asm	/^f0109d83:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0109d86	obj/kern/kernel.asm	/^f0109d86:	0f 85 88 00 00 00    	jne    f0109e14 <pci_attach_match+0xb8>$/;"	l
f0109d8c	obj/kern/kernel.asm	/^f0109d8c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109d8f	obj/kern/kernel.asm	/^f0109d8f:	89 d0                	mov    %edx,%eax$/;"	l
f0109d91	obj/kern/kernel.asm	/^f0109d91:	01 c0                	add    %eax,%eax$/;"	l
f0109d93	obj/kern/kernel.asm	/^f0109d93:	01 d0                	add    %edx,%eax$/;"	l
f0109d95	obj/kern/kernel.asm	/^f0109d95:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0109d98	obj/kern/kernel.asm	/^f0109d98:	89 c2                	mov    %eax,%edx$/;"	l
f0109d9a	obj/kern/kernel.asm	/^f0109d9a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109d9d	obj/kern/kernel.asm	/^f0109d9d:	01 d0                	add    %edx,%eax$/;"	l
f0109d9f	obj/kern/kernel.asm	/^f0109d9f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0109da2	obj/kern/kernel.asm	/^f0109da2:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
f0109da5	obj/kern/kernel.asm	/^f0109da5:	75 6d                	jne    f0109e14 <pci_attach_match+0xb8>$/;"	l
f0109da7	obj/kern/kernel.asm	/^f0109da7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109daa	obj/kern/kernel.asm	/^f0109daa:	89 d0                	mov    %edx,%eax$/;"	l
f0109dac	obj/kern/kernel.asm	/^f0109dac:	01 c0                	add    %eax,%eax$/;"	l
f0109dae	obj/kern/kernel.asm	/^f0109dae:	01 d0                	add    %edx,%eax$/;"	l
f0109db0	obj/kern/kernel.asm	/^f0109db0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0109db3	obj/kern/kernel.asm	/^f0109db3:	89 c2                	mov    %eax,%edx$/;"	l
f0109db5	obj/kern/kernel.asm	/^f0109db5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109db8	obj/kern/kernel.asm	/^f0109db8:	01 d0                	add    %edx,%eax$/;"	l
f0109dba	obj/kern/kernel.asm	/^f0109dba:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0109dbd	obj/kern/kernel.asm	/^f0109dbd:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0109dc0	obj/kern/kernel.asm	/^f0109dc0:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0109dc3	obj/kern/kernel.asm	/^f0109dc3:	ff d0                	call   *%eax$/;"	l
f0109dc5	obj/kern/kernel.asm	/^f0109dc5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0109dc8	obj/kern/kernel.asm	/^f0109dc8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0109dcc	obj/kern/kernel.asm	/^f0109dcc:	7e 05                	jle    f0109dd3 <pci_attach_match+0x77>$/;"	l
f0109dce	obj/kern/kernel.asm	/^f0109dce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0109dd1	obj/kern/kernel.asm	/^f0109dd1:	eb 68                	jmp    f0109e3b <pci_attach_match+0xdf>$/;"	l
f0109dd3	obj/kern/kernel.asm	/^f0109dd3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0109dd7	obj/kern/kernel.asm	/^f0109dd7:	79 3b                	jns    f0109e14 <pci_attach_match+0xb8>$/;"	l
f0109dd9	obj/kern/kernel.asm	/^f0109dd9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109ddc	obj/kern/kernel.asm	/^f0109ddc:	89 d0                	mov    %edx,%eax$/;"	l
f0109dde	obj/kern/kernel.asm	/^f0109dde:	01 c0                	add    %eax,%eax$/;"	l
f0109de0	obj/kern/kernel.asm	/^f0109de0:	01 d0                	add    %edx,%eax$/;"	l
f0109de2	obj/kern/kernel.asm	/^f0109de2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0109de5	obj/kern/kernel.asm	/^f0109de5:	89 c2                	mov    %eax,%edx$/;"	l
f0109de7	obj/kern/kernel.asm	/^f0109de7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109dea	obj/kern/kernel.asm	/^f0109dea:	01 d0                	add    %edx,%eax$/;"	l
f0109dec	obj/kern/kernel.asm	/^f0109dec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0109def	obj/kern/kernel.asm	/^f0109def:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0109df2	obj/kern/kernel.asm	/^f0109df2:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0109df6	obj/kern/kernel.asm	/^f0109df6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0109dfa	obj/kern/kernel.asm	/^f0109dfa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0109dfd	obj/kern/kernel.asm	/^f0109dfd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0109e01	obj/kern/kernel.asm	/^f0109e01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109e04	obj/kern/kernel.asm	/^f0109e04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109e08	obj/kern/kernel.asm	/^f0109e08:	c7 04 24 28 c9 10 f0 	movl   $0xf010c928,(%esp)$/;"	l
f0109e0f	obj/kern/kernel.asm	/^f0109e0f:	e8 2b b5 ff ff       	call   f010533f <cprintf>$/;"	l
f0109e14	obj/kern/kernel.asm	/^f0109e14:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0109e18	obj/kern/kernel.asm	/^f0109e18:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0109e1b	obj/kern/kernel.asm	/^f0109e1b:	89 d0                	mov    %edx,%eax$/;"	l
f0109e1d	obj/kern/kernel.asm	/^f0109e1d:	01 c0                	add    %eax,%eax$/;"	l
f0109e1f	obj/kern/kernel.asm	/^f0109e1f:	01 d0                	add    %edx,%eax$/;"	l
f0109e21	obj/kern/kernel.asm	/^f0109e21:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0109e24	obj/kern/kernel.asm	/^f0109e24:	89 c2                	mov    %eax,%edx$/;"	l
f0109e26	obj/kern/kernel.asm	/^f0109e26:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0109e29	obj/kern/kernel.asm	/^f0109e29:	01 d0                	add    %edx,%eax$/;"	l
f0109e2b	obj/kern/kernel.asm	/^f0109e2b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0109e2e	obj/kern/kernel.asm	/^f0109e2e:	85 c0                	test   %eax,%eax$/;"	l
f0109e30	obj/kern/kernel.asm	/^f0109e30:	0f 85 38 ff ff ff    	jne    f0109d6e <pci_attach_match+0x12>$/;"	l
f0109e36	obj/kern/kernel.asm	/^f0109e36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0109e3b	obj/kern/kernel.asm	/^f0109e3b:	c9                   	leave  $/;"	l
f0109e3c	obj/kern/kernel.asm	/^f0109e3c:	c3                   	ret    $/;"	l
f0109e3d	obj/kern/kernel.asm	/^f0109e3d <pci_attach>:$/;"	l
f0109e3d	obj/kern/kernel.asm	/^f0109e3d:	55                   	push   %ebp$/;"	l
f0109e3e	obj/kern/kernel.asm	/^f0109e3e:	89 e5                	mov    %esp,%ebp$/;"	l
f0109e40	obj/kern/kernel.asm	/^f0109e40:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0109e43	obj/kern/kernel.asm	/^f0109e43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109e46	obj/kern/kernel.asm	/^f0109e46:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0109e49	obj/kern/kernel.asm	/^f0109e49:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0109e4c	obj/kern/kernel.asm	/^f0109e4c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0109e4f	obj/kern/kernel.asm	/^f0109e4f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0109e52	obj/kern/kernel.asm	/^f0109e52:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
f0109e55	obj/kern/kernel.asm	/^f0109e55:	89 d1                	mov    %edx,%ecx$/;"	l
f0109e57	obj/kern/kernel.asm	/^f0109e57:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f0109e5a	obj/kern/kernel.asm	/^f0109e5a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0109e5d	obj/kern/kernel.asm	/^f0109e5d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0109e61	obj/kern/kernel.asm	/^f0109e61:	c7 44 24 08 40 a6 12 	movl   $0xf012a640,0x8(%esp)$/;"	l
f0109e68	obj/kern/kernel.asm	/^f0109e68:	f0 $/;"	l
f0109e69	obj/kern/kernel.asm	/^f0109e69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0109e6d	obj/kern/kernel.asm	/^f0109e6d:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0109e70	obj/kern/kernel.asm	/^f0109e70:	e8 e7 fe ff ff       	call   f0109d5c <pci_attach_match>$/;"	l
f0109e75	obj/kern/kernel.asm	/^f0109e75:	85 c0                	test   %eax,%eax$/;"	l
f0109e77	obj/kern/kernel.asm	/^f0109e77:	75 33                	jne    f0109eac <pci_attach+0x6f>$/;"	l
f0109e79	obj/kern/kernel.asm	/^f0109e79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109e7c	obj/kern/kernel.asm	/^f0109e7c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0109e7f	obj/kern/kernel.asm	/^f0109e7f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0109e82	obj/kern/kernel.asm	/^f0109e82:	89 c1                	mov    %eax,%ecx$/;"	l
f0109e84	obj/kern/kernel.asm	/^f0109e84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109e87	obj/kern/kernel.asm	/^f0109e87:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0109e8a	obj/kern/kernel.asm	/^f0109e8a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0109e8d	obj/kern/kernel.asm	/^f0109e8d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0109e90	obj/kern/kernel.asm	/^f0109e90:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0109e94	obj/kern/kernel.asm	/^f0109e94:	c7 44 24 08 58 a6 12 	movl   $0xf012a658,0x8(%esp)$/;"	l
f0109e9b	obj/kern/kernel.asm	/^f0109e9b:	f0 $/;"	l
f0109e9c	obj/kern/kernel.asm	/^f0109e9c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0109ea0	obj/kern/kernel.asm	/^f0109ea0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109ea3	obj/kern/kernel.asm	/^f0109ea3:	e8 b4 fe ff ff       	call   f0109d5c <pci_attach_match>$/;"	l
f0109ea8	obj/kern/kernel.asm	/^f0109ea8:	85 c0                	test   %eax,%eax$/;"	l
f0109eaa	obj/kern/kernel.asm	/^f0109eaa:	74 07                	je     f0109eb3 <pci_attach+0x76>$/;"	l
f0109eac	obj/kern/kernel.asm	/^f0109eac:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0109eb1	obj/kern/kernel.asm	/^f0109eb1:	eb 05                	jmp    f0109eb8 <pci_attach+0x7b>$/;"	l
f0109eb3	obj/kern/kernel.asm	/^f0109eb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0109eb8	obj/kern/kernel.asm	/^f0109eb8:	c9                   	leave  $/;"	l
f0109eb9	obj/kern/kernel.asm	/^f0109eb9:	c3                   	ret    $/;"	l
f0109eba	obj/kern/kernel.asm	/^f0109eba <pci_print_func>:$/;"	l
f0109eba	obj/kern/kernel.asm	/^f0109eba:	55                   	push   %ebp$/;"	l
f0109ebb	obj/kern/kernel.asm	/^f0109ebb:	89 e5                	mov    %esp,%ebp$/;"	l
f0109ebd	obj/kern/kernel.asm	/^f0109ebd:	57                   	push   %edi$/;"	l
f0109ebe	obj/kern/kernel.asm	/^f0109ebe:	56                   	push   %esi$/;"	l
f0109ebf	obj/kern/kernel.asm	/^f0109ebf:	53                   	push   %ebx$/;"	l
f0109ec0	obj/kern/kernel.asm	/^f0109ec0:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0109ec3	obj/kern/kernel.asm	/^f0109ec3:	a1 70 a6 12 f0       	mov    0xf012a670,%eax$/;"	l
f0109ec8	obj/kern/kernel.asm	/^f0109ec8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0109ecb	obj/kern/kernel.asm	/^f0109ecb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109ece	obj/kern/kernel.asm	/^f0109ece:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0109ed1	obj/kern/kernel.asm	/^f0109ed1:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0109ed4	obj/kern/kernel.asm	/^f0109ed4:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0109ed7	obj/kern/kernel.asm	/^f0109ed7:	77 13                	ja     f0109eec <pci_print_func+0x32>$/;"	l
f0109ed9	obj/kern/kernel.asm	/^f0109ed9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109edc	obj/kern/kernel.asm	/^f0109edc:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0109edf	obj/kern/kernel.asm	/^f0109edf:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0109ee2	obj/kern/kernel.asm	/^f0109ee2:	8b 04 85 70 a6 12 f0 	mov    -0xfed5990(,%eax,4),%eax$/;"	l
f0109ee9	obj/kern/kernel.asm	/^f0109ee9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0109eec	obj/kern/kernel.asm	/^f0109eec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109eef	obj/kern/kernel.asm	/^f0109eef:	0f b6 40 44          	movzbl 0x44(%eax),%eax$/;"	l
f0109ef3	obj/kern/kernel.asm	/^f0109ef3:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0109ef6	obj/kern/kernel.asm	/^f0109ef6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109ef9	obj/kern/kernel.asm	/^f0109ef9:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0109efc	obj/kern/kernel.asm	/^f0109efc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0109eff	obj/kern/kernel.asm	/^f0109eff:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0109f02	obj/kern/kernel.asm	/^f0109f02:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0109f05	obj/kern/kernel.asm	/^f0109f05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f08	obj/kern/kernel.asm	/^f0109f08:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0109f0b	obj/kern/kernel.asm	/^f0109f0b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0109f0e	obj/kern/kernel.asm	/^f0109f0e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0109f11	obj/kern/kernel.asm	/^f0109f11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f14	obj/kern/kernel.asm	/^f0109f14:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0109f17	obj/kern/kernel.asm	/^f0109f17:	89 c2                	mov    %eax,%edx$/;"	l
f0109f19	obj/kern/kernel.asm	/^f0109f19:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0109f1c	obj/kern/kernel.asm	/^f0109f1c:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0109f1f	obj/kern/kernel.asm	/^f0109f1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f22	obj/kern/kernel.asm	/^f0109f22:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0109f25	obj/kern/kernel.asm	/^f0109f25:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0109f28	obj/kern/kernel.asm	/^f0109f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f2b	obj/kern/kernel.asm	/^f0109f2b:	8b 70 08             	mov    0x8(%eax),%esi$/;"	l
f0109f2e	obj/kern/kernel.asm	/^f0109f2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f31	obj/kern/kernel.asm	/^f0109f31:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0109f34	obj/kern/kernel.asm	/^f0109f34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109f37	obj/kern/kernel.asm	/^f0109f37:	8b 00                	mov    (%eax),%eax$/;"	l
f0109f39	obj/kern/kernel.asm	/^f0109f39:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0109f3c	obj/kern/kernel.asm	/^f0109f3c:	89 4c 24 24          	mov    %ecx,0x24(%esp)$/;"	l
f0109f40	obj/kern/kernel.asm	/^f0109f40:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0109f43	obj/kern/kernel.asm	/^f0109f43:	89 44 24 20          	mov    %eax,0x20(%esp)$/;"	l
f0109f47	obj/kern/kernel.asm	/^f0109f47:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0109f4a	obj/kern/kernel.asm	/^f0109f4a:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0109f4e	obj/kern/kernel.asm	/^f0109f4e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0109f51	obj/kern/kernel.asm	/^f0109f51:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0109f55	obj/kern/kernel.asm	/^f0109f55:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0109f58	obj/kern/kernel.asm	/^f0109f58:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0109f5c	obj/kern/kernel.asm	/^f0109f5c:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0109f60	obj/kern/kernel.asm	/^f0109f60:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0109f64	obj/kern/kernel.asm	/^f0109f64:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0109f68	obj/kern/kernel.asm	/^f0109f68:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0109f6c	obj/kern/kernel.asm	/^f0109f6c:	c7 04 24 c8 c9 10 f0 	movl   $0xf010c9c8,(%esp)$/;"	l
f0109f73	obj/kern/kernel.asm	/^f0109f73:	e8 c7 b3 ff ff       	call   f010533f <cprintf>$/;"	l
f0109f78	obj/kern/kernel.asm	/^f0109f78:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0109f7b	obj/kern/kernel.asm	/^f0109f7b:	5b                   	pop    %ebx$/;"	l
f0109f7c	obj/kern/kernel.asm	/^f0109f7c:	5e                   	pop    %esi$/;"	l
f0109f7d	obj/kern/kernel.asm	/^f0109f7d:	5f                   	pop    %edi$/;"	l
f0109f7e	obj/kern/kernel.asm	/^f0109f7e:	5d                   	pop    %ebp$/;"	l
f0109f7f	obj/kern/kernel.asm	/^f0109f7f:	c3                   	ret    $/;"	l
f0109f80	obj/kern/kernel.asm	/^f0109f80 <pci_scan_bus>:$/;"	l
f0109f80	obj/kern/kernel.asm	/^f0109f80:	55                   	push   %ebp$/;"	l
f0109f81	obj/kern/kernel.asm	/^f0109f81:	89 e5                	mov    %esp,%ebp$/;"	l
f0109f83	obj/kern/kernel.asm	/^f0109f83:	57                   	push   %edi$/;"	l
f0109f84	obj/kern/kernel.asm	/^f0109f84:	56                   	push   %esi$/;"	l
f0109f85	obj/kern/kernel.asm	/^f0109f85:	53                   	push   %ebx$/;"	l
f0109f86	obj/kern/kernel.asm	/^f0109f86:	81 ec 0c 01 00 00    	sub    $0x10c,%esp$/;"	l
f0109f8c	obj/kern/kernel.asm	/^f0109f8c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0109f93	obj/kern/kernel.asm	/^f0109f93:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f0109f9a	obj/kern/kernel.asm	/^f0109f9a:	00 $/;"	l
f0109f9b	obj/kern/kernel.asm	/^f0109f9b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0109fa2	obj/kern/kernel.asm	/^f0109fa2:	00 $/;"	l
f0109fa3	obj/kern/kernel.asm	/^f0109fa3:	8d 45 94             	lea    -0x6c(%ebp),%eax$/;"	l
f0109fa6	obj/kern/kernel.asm	/^f0109fa6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109fa9	obj/kern/kernel.asm	/^f0109fa9:	e8 0c e6 ff ff       	call   f01085ba <memset>$/;"	l
f0109fae	obj/kern/kernel.asm	/^f0109fae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0109fb1	obj/kern/kernel.asm	/^f0109fb1:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
f0109fb4	obj/kern/kernel.asm	/^f0109fb4:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)$/;"	l
f0109fbb	obj/kern/kernel.asm	/^f0109fbb:	e9 34 01 00 00       	jmp    f010a0f4 <pci_scan_bus+0x174>$/;"	l
f0109fc0	obj/kern/kernel.asm	/^f0109fc0:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
f0109fc7	obj/kern/kernel.asm	/^f0109fc7:	00 $/;"	l
f0109fc8	obj/kern/kernel.asm	/^f0109fc8:	8d 45 94             	lea    -0x6c(%ebp),%eax$/;"	l
f0109fcb	obj/kern/kernel.asm	/^f0109fcb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0109fce	obj/kern/kernel.asm	/^f0109fce:	e8 f0 fc ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f0109fd3	obj/kern/kernel.asm	/^f0109fd3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0109fd6	obj/kern/kernel.asm	/^f0109fd6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0109fd9	obj/kern/kernel.asm	/^f0109fd9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0109fdc	obj/kern/kernel.asm	/^f0109fdc:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0109fdf	obj/kern/kernel.asm	/^f0109fdf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0109fe2	obj/kern/kernel.asm	/^f0109fe2:	0f 87 03 01 00 00    	ja     f010a0eb <pci_scan_bus+0x16b>$/;"	l
f0109fe8	obj/kern/kernel.asm	/^f0109fe8:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f0109fec	obj/kern/kernel.asm	/^f0109fec:	8d 95 04 ff ff ff    	lea    -0xfc(%ebp),%edx$/;"	l
f0109ff2	obj/kern/kernel.asm	/^f0109ff2:	8d 5d 94             	lea    -0x6c(%ebp),%ebx$/;"	l
f0109ff5	obj/kern/kernel.asm	/^f0109ff5:	b8 12 00 00 00       	mov    $0x12,%eax$/;"	l
f0109ffa	obj/kern/kernel.asm	/^f0109ffa:	89 d7                	mov    %edx,%edi$/;"	l
f0109ffc	obj/kern/kernel.asm	/^f0109ffc:	89 de                	mov    %ebx,%esi$/;"	l
f0109ffe	obj/kern/kernel.asm	/^f0109ffe:	89 c1                	mov    %eax,%ecx$/;"	l
f010a000	obj/kern/kernel.asm	/^f010a000:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010a002	obj/kern/kernel.asm	/^f010a002:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%ebp)$/;"	l
f010a009	obj/kern/kernel.asm	/^f010a009:	00 00 00 $/;"	l
f010a00c	obj/kern/kernel.asm	/^f010a00c:	e9 b4 00 00 00       	jmp    f010a0c5 <pci_scan_bus+0x145>$/;"	l
f010a011	obj/kern/kernel.asm	/^f010a011:	8d 95 4c ff ff ff    	lea    -0xb4(%ebp),%edx$/;"	l
f010a017	obj/kern/kernel.asm	/^f010a017:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx$/;"	l
f010a01d	obj/kern/kernel.asm	/^f010a01d:	b8 12 00 00 00       	mov    $0x12,%eax$/;"	l
f010a022	obj/kern/kernel.asm	/^f010a022:	89 d7                	mov    %edx,%edi$/;"	l
f010a024	obj/kern/kernel.asm	/^f010a024:	89 de                	mov    %ebx,%esi$/;"	l
f010a026	obj/kern/kernel.asm	/^f010a026:	89 c1                	mov    %eax,%ecx$/;"	l
f010a028	obj/kern/kernel.asm	/^f010a028:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010a02a	obj/kern/kernel.asm	/^f010a02a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010a031	obj/kern/kernel.asm	/^f010a031:	00 $/;"	l
f010a032	obj/kern/kernel.asm	/^f010a032:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax$/;"	l
f010a038	obj/kern/kernel.asm	/^f010a038:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a03b	obj/kern/kernel.asm	/^f010a03b:	e8 83 fc ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a040	obj/kern/kernel.asm	/^f010a040:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)$/;"	l
f010a046	obj/kern/kernel.asm	/^f010a046:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f010a04c	obj/kern/kernel.asm	/^f010a04c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010a04f	obj/kern/kernel.asm	/^f010a04f:	3d ff ff 00 00       	cmp    $0xffff,%eax$/;"	l
f010a054	obj/kern/kernel.asm	/^f010a054:	74 60                	je     f010a0b6 <pci_scan_bus+0x136>$/;"	l
f010a056	obj/kern/kernel.asm	/^f010a056:	c7 44 24 04 3c 00 00 	movl   $0x3c,0x4(%esp)$/;"	l
f010a05d	obj/kern/kernel.asm	/^f010a05d:	00 $/;"	l
f010a05e	obj/kern/kernel.asm	/^f010a05e:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax$/;"	l
f010a064	obj/kern/kernel.asm	/^f010a064:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a067	obj/kern/kernel.asm	/^f010a067:	e8 57 fc ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a06c	obj/kern/kernel.asm	/^f010a06c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010a06f	obj/kern/kernel.asm	/^f010a06f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010a072	obj/kern/kernel.asm	/^f010a072:	88 45 90             	mov    %al,-0x70(%ebp)$/;"	l
f010a075	obj/kern/kernel.asm	/^f010a075:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)$/;"	l
f010a07c	obj/kern/kernel.asm	/^f010a07c:	00 $/;"	l
f010a07d	obj/kern/kernel.asm	/^f010a07d:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax$/;"	l
f010a083	obj/kern/kernel.asm	/^f010a083:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a086	obj/kern/kernel.asm	/^f010a086:	e8 38 fc ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a08b	obj/kern/kernel.asm	/^f010a08b:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)$/;"	l
f010a091	obj/kern/kernel.asm	/^f010a091:	a1 34 a6 12 f0       	mov    0xf012a634,%eax$/;"	l
f010a096	obj/kern/kernel.asm	/^f010a096:	85 c0                	test   %eax,%eax$/;"	l
f010a098	obj/kern/kernel.asm	/^f010a098:	74 0e                	je     f010a0a8 <pci_scan_bus+0x128>$/;"	l
f010a09a	obj/kern/kernel.asm	/^f010a09a:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax$/;"	l
f010a0a0	obj/kern/kernel.asm	/^f010a0a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a0a3	obj/kern/kernel.asm	/^f010a0a3:	e8 12 fe ff ff       	call   f0109eba <pci_print_func>$/;"	l
f010a0a8	obj/kern/kernel.asm	/^f010a0a8:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax$/;"	l
f010a0ae	obj/kern/kernel.asm	/^f010a0ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a0b1	obj/kern/kernel.asm	/^f010a0b1:	e8 87 fd ff ff       	call   f0109e3d <pci_attach>$/;"	l
f010a0b6	obj/kern/kernel.asm	/^f010a0b6:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax$/;"	l
f010a0bc	obj/kern/kernel.asm	/^f010a0bc:	83 c0 01             	add    $0x1,%eax$/;"	l
f010a0bf	obj/kern/kernel.asm	/^f010a0bf:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)$/;"	l
f010a0c5	obj/kern/kernel.asm	/^f010a0c5:	8b 95 0c ff ff ff    	mov    -0xf4(%ebp),%edx$/;"	l
f010a0cb	obj/kern/kernel.asm	/^f010a0cb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a0ce	obj/kern/kernel.asm	/^f010a0ce:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f010a0d3	obj/kern/kernel.asm	/^f010a0d3:	85 c0                	test   %eax,%eax$/;"	l
f010a0d5	obj/kern/kernel.asm	/^f010a0d5:	74 07                	je     f010a0de <pci_scan_bus+0x15e>$/;"	l
f010a0d7	obj/kern/kernel.asm	/^f010a0d7:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010a0dc	obj/kern/kernel.asm	/^f010a0dc:	eb 05                	jmp    f010a0e3 <pci_scan_bus+0x163>$/;"	l
f010a0de	obj/kern/kernel.asm	/^f010a0de:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010a0e3	obj/kern/kernel.asm	/^f010a0e3:	39 c2                	cmp    %eax,%edx$/;"	l
f010a0e5	obj/kern/kernel.asm	/^f010a0e5:	0f 82 26 ff ff ff    	jb     f010a011 <pci_scan_bus+0x91>$/;"	l
f010a0eb	obj/kern/kernel.asm	/^f010a0eb:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
f010a0ee	obj/kern/kernel.asm	/^f010a0ee:	83 c0 01             	add    $0x1,%eax$/;"	l
f010a0f1	obj/kern/kernel.asm	/^f010a0f1:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
f010a0f4	obj/kern/kernel.asm	/^f010a0f4:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
f010a0f7	obj/kern/kernel.asm	/^f010a0f7:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f010a0fa	obj/kern/kernel.asm	/^f010a0fa:	0f 86 c0 fe ff ff    	jbe    f0109fc0 <pci_scan_bus+0x40>$/;"	l
f010a100	obj/kern/kernel.asm	/^f010a100:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010a103	obj/kern/kernel.asm	/^f010a103:	81 c4 0c 01 00 00    	add    $0x10c,%esp$/;"	l
f010a109	obj/kern/kernel.asm	/^f010a109:	5b                   	pop    %ebx$/;"	l
f010a10a	obj/kern/kernel.asm	/^f010a10a:	5e                   	pop    %esi$/;"	l
f010a10b	obj/kern/kernel.asm	/^f010a10b:	5f                   	pop    %edi$/;"	l
f010a10c	obj/kern/kernel.asm	/^f010a10c:	5d                   	pop    %ebp$/;"	l
f010a10d	obj/kern/kernel.asm	/^f010a10d:	c3                   	ret    $/;"	l
f010a10e	obj/kern/kernel.asm	/^f010a10e <pci_bridge_attach>:$/;"	l
f010a10e	obj/kern/kernel.asm	/^f010a10e:	55                   	push   %ebp$/;"	l
f010a10f	obj/kern/kernel.asm	/^f010a10f:	89 e5                	mov    %esp,%ebp$/;"	l
f010a111	obj/kern/kernel.asm	/^f010a111:	56                   	push   %esi$/;"	l
f010a112	obj/kern/kernel.asm	/^f010a112:	53                   	push   %ebx$/;"	l
f010a113	obj/kern/kernel.asm	/^f010a113:	83 ec 30             	sub    $0x30,%esp$/;"	l
f010a116	obj/kern/kernel.asm	/^f010a116:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)$/;"	l
f010a11d	obj/kern/kernel.asm	/^f010a11d:	00 $/;"	l
f010a11e	obj/kern/kernel.asm	/^f010a11e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a121	obj/kern/kernel.asm	/^f010a121:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a124	obj/kern/kernel.asm	/^f010a124:	e8 9a fb ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a129	obj/kern/kernel.asm	/^f010a129:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010a12c	obj/kern/kernel.asm	/^f010a12c:	c7 44 24 04 18 00 00 	movl   $0x18,0x4(%esp)$/;"	l
f010a133	obj/kern/kernel.asm	/^f010a133:	00 $/;"	l
f010a134	obj/kern/kernel.asm	/^f010a134:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a137	obj/kern/kernel.asm	/^f010a137:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a13a	obj/kern/kernel.asm	/^f010a13a:	e8 84 fb ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a13f	obj/kern/kernel.asm	/^f010a13f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010a142	obj/kern/kernel.asm	/^f010a142:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010a145	obj/kern/kernel.asm	/^f010a145:	83 e0 0f             	and    $0xf,%eax$/;"	l
f010a148	obj/kern/kernel.asm	/^f010a148:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010a14b	obj/kern/kernel.asm	/^f010a14b:	75 36                	jne    f010a183 <pci_bridge_attach+0x75>$/;"	l
f010a14d	obj/kern/kernel.asm	/^f010a14d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a150	obj/kern/kernel.asm	/^f010a150:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010a153	obj/kern/kernel.asm	/^f010a153:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a156	obj/kern/kernel.asm	/^f010a156:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010a159	obj/kern/kernel.asm	/^f010a159:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a15c	obj/kern/kernel.asm	/^f010a15c:	8b 00                	mov    (%eax),%eax$/;"	l
f010a15e	obj/kern/kernel.asm	/^f010a15e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010a161	obj/kern/kernel.asm	/^f010a161:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010a165	obj/kern/kernel.asm	/^f010a165:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010a169	obj/kern/kernel.asm	/^f010a169:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a16d	obj/kern/kernel.asm	/^f010a16d:	c7 04 24 04 ca 10 f0 	movl   $0xf010ca04,(%esp)$/;"	l
f010a174	obj/kern/kernel.asm	/^f010a174:	e8 c6 b1 ff ff       	call   f010533f <cprintf>$/;"	l
f010a179	obj/kern/kernel.asm	/^f010a179:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010a17e	obj/kern/kernel.asm	/^f010a17e:	e9 86 00 00 00       	jmp    f010a209 <pci_bridge_attach+0xfb>$/;"	l
f010a183	obj/kern/kernel.asm	/^f010a183:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f010a18a	obj/kern/kernel.asm	/^f010a18a:	00 $/;"	l
f010a18b	obj/kern/kernel.asm	/^f010a18b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010a192	obj/kern/kernel.asm	/^f010a192:	00 $/;"	l
f010a193	obj/kern/kernel.asm	/^f010a193:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f010a196	obj/kern/kernel.asm	/^f010a196:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a199	obj/kern/kernel.asm	/^f010a199:	e8 1c e4 ff ff       	call   f01085ba <memset>$/;"	l
f010a19e	obj/kern/kernel.asm	/^f010a19e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a1a1	obj/kern/kernel.asm	/^f010a1a1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010a1a4	obj/kern/kernel.asm	/^f010a1a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010a1a7	obj/kern/kernel.asm	/^f010a1a7:	c1 e8 08             	shr    $0x8,%eax$/;"	l
f010a1aa	obj/kern/kernel.asm	/^f010a1aa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010a1ad	obj/kern/kernel.asm	/^f010a1ad:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010a1b0	obj/kern/kernel.asm	/^f010a1b0:	a1 34 a6 12 f0       	mov    0xf012a634,%eax$/;"	l
f010a1b5	obj/kern/kernel.asm	/^f010a1b5:	85 c0                	test   %eax,%eax$/;"	l
f010a1b7	obj/kern/kernel.asm	/^f010a1b7:	74 40                	je     f010a1f9 <pci_bridge_attach+0xeb>$/;"	l
f010a1b9	obj/kern/kernel.asm	/^f010a1b9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010a1bc	obj/kern/kernel.asm	/^f010a1bc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010a1bf	obj/kern/kernel.asm	/^f010a1bf:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010a1c2	obj/kern/kernel.asm	/^f010a1c2:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
f010a1c5	obj/kern/kernel.asm	/^f010a1c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a1c8	obj/kern/kernel.asm	/^f010a1c8:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010a1cb	obj/kern/kernel.asm	/^f010a1cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a1ce	obj/kern/kernel.asm	/^f010a1ce:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010a1d1	obj/kern/kernel.asm	/^f010a1d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a1d4	obj/kern/kernel.asm	/^f010a1d4:	8b 00                	mov    (%eax),%eax$/;"	l
f010a1d6	obj/kern/kernel.asm	/^f010a1d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010a1d9	obj/kern/kernel.asm	/^f010a1d9:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f010a1dd	obj/kern/kernel.asm	/^f010a1dd:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010a1e1	obj/kern/kernel.asm	/^f010a1e1:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010a1e5	obj/kern/kernel.asm	/^f010a1e5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010a1e9	obj/kern/kernel.asm	/^f010a1e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a1ed	obj/kern/kernel.asm	/^f010a1ed:	c7 04 24 38 ca 10 f0 	movl   $0xf010ca38,(%esp)$/;"	l
f010a1f4	obj/kern/kernel.asm	/^f010a1f4:	e8 46 b1 ff ff       	call   f010533f <cprintf>$/;"	l
f010a1f9	obj/kern/kernel.asm	/^f010a1f9:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f010a1fc	obj/kern/kernel.asm	/^f010a1fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a1ff	obj/kern/kernel.asm	/^f010a1ff:	e8 7c fd ff ff       	call   f0109f80 <pci_scan_bus>$/;"	l
f010a204	obj/kern/kernel.asm	/^f010a204:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010a209	obj/kern/kernel.asm	/^f010a209:	83 c4 30             	add    $0x30,%esp$/;"	l
f010a20c	obj/kern/kernel.asm	/^f010a20c:	5b                   	pop    %ebx$/;"	l
f010a20d	obj/kern/kernel.asm	/^f010a20d:	5e                   	pop    %esi$/;"	l
f010a20e	obj/kern/kernel.asm	/^f010a20e:	5d                   	pop    %ebp$/;"	l
f010a20f	obj/kern/kernel.asm	/^f010a20f:	c3                   	ret    $/;"	l
f010a210	obj/kern/kernel.asm	/^f010a210 <pci_func_enable>:$/;"	l
f010a210	obj/kern/kernel.asm	/^f010a210:	55                   	push   %ebp$/;"	l
f010a211	obj/kern/kernel.asm	/^f010a211:	89 e5                	mov    %esp,%ebp$/;"	l
f010a213	obj/kern/kernel.asm	/^f010a213:	57                   	push   %edi$/;"	l
f010a214	obj/kern/kernel.asm	/^f010a214:	56                   	push   %esi$/;"	l
f010a215	obj/kern/kernel.asm	/^f010a215:	53                   	push   %ebx$/;"	l
f010a216	obj/kern/kernel.asm	/^f010a216:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f010a219	obj/kern/kernel.asm	/^f010a219:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
f010a220	obj/kern/kernel.asm	/^f010a220:	00 $/;"	l
f010a221	obj/kern/kernel.asm	/^f010a221:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f010a228	obj/kern/kernel.asm	/^f010a228:	00 $/;"	l
f010a229	obj/kern/kernel.asm	/^f010a229:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a22c	obj/kern/kernel.asm	/^f010a22c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a22f	obj/kern/kernel.asm	/^f010a22f:	e8 db fa ff ff       	call   f0109d0f <pci_conf_write>$/;"	l
f010a234	obj/kern/kernel.asm	/^f010a234:	c7 45 e0 10 00 00 00 	movl   $0x10,-0x20(%ebp)$/;"	l
f010a23b	obj/kern/kernel.asm	/^f010a23b:	e9 b0 01 00 00       	jmp    f010a3f0 <pci_func_enable+0x1e0>$/;"	l
f010a240	obj/kern/kernel.asm	/^f010a240:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a243	obj/kern/kernel.asm	/^f010a243:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a247	obj/kern/kernel.asm	/^f010a247:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a24a	obj/kern/kernel.asm	/^f010a24a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a24d	obj/kern/kernel.asm	/^f010a24d:	e8 71 fa ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a252	obj/kern/kernel.asm	/^f010a252:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010a255	obj/kern/kernel.asm	/^f010a255:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
f010a25c	obj/kern/kernel.asm	/^f010a25c:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)$/;"	l
f010a263	obj/kern/kernel.asm	/^f010a263:	ff $/;"	l
f010a264	obj/kern/kernel.asm	/^f010a264:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a267	obj/kern/kernel.asm	/^f010a267:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a26b	obj/kern/kernel.asm	/^f010a26b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a26e	obj/kern/kernel.asm	/^f010a26e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a271	obj/kern/kernel.asm	/^f010a271:	e8 99 fa ff ff       	call   f0109d0f <pci_conf_write>$/;"	l
f010a276	obj/kern/kernel.asm	/^f010a276:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a279	obj/kern/kernel.asm	/^f010a279:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a27d	obj/kern/kernel.asm	/^f010a27d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a280	obj/kern/kernel.asm	/^f010a280:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a283	obj/kern/kernel.asm	/^f010a283:	e8 3b fa ff ff       	call   f0109cc3 <pci_conf_read>$/;"	l
f010a288	obj/kern/kernel.asm	/^f010a288:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010a28b	obj/kern/kernel.asm	/^f010a28b:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f010a28f	obj/kern/kernel.asm	/^f010a28f:	75 05                	jne    f010a296 <pci_func_enable+0x86>$/;"	l
f010a291	obj/kern/kernel.asm	/^f010a291:	e9 54 01 00 00       	jmp    f010a3ea <pci_func_enable+0x1da>$/;"	l
f010a296	obj/kern/kernel.asm	/^f010a296:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a299	obj/kern/kernel.asm	/^f010a299:	83 e8 10             	sub    $0x10,%eax$/;"	l
f010a29c	obj/kern/kernel.asm	/^f010a29c:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f010a29f	obj/kern/kernel.asm	/^f010a29f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010a2a2	obj/kern/kernel.asm	/^f010a2a2:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010a2a5	obj/kern/kernel.asm	/^f010a2a5:	83 e0 01             	and    $0x1,%eax$/;"	l
f010a2a8	obj/kern/kernel.asm	/^f010a2a8:	85 c0                	test   %eax,%eax$/;"	l
f010a2aa	obj/kern/kernel.asm	/^f010a2aa:	75 58                	jne    f010a304 <pci_func_enable+0xf4>$/;"	l
f010a2ac	obj/kern/kernel.asm	/^f010a2ac:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010a2af	obj/kern/kernel.asm	/^f010a2af:	83 e0 06             	and    $0x6,%eax$/;"	l
f010a2b2	obj/kern/kernel.asm	/^f010a2b2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f010a2b5	obj/kern/kernel.asm	/^f010a2b5:	75 07                	jne    f010a2be <pci_func_enable+0xae>$/;"	l
f010a2b7	obj/kern/kernel.asm	/^f010a2b7:	c7 45 e4 08 00 00 00 	movl   $0x8,-0x1c(%ebp)$/;"	l
f010a2be	obj/kern/kernel.asm	/^f010a2be:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010a2c1	obj/kern/kernel.asm	/^f010a2c1:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010a2c4	obj/kern/kernel.asm	/^f010a2c4:	f7 d8                	neg    %eax$/;"	l
f010a2c6	obj/kern/kernel.asm	/^f010a2c6:	23 45 d0             	and    -0x30(%ebp),%eax$/;"	l
f010a2c9	obj/kern/kernel.asm	/^f010a2c9:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010a2cc	obj/kern/kernel.asm	/^f010a2cc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010a2cf	obj/kern/kernel.asm	/^f010a2cf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010a2d2	obj/kern/kernel.asm	/^f010a2d2:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010a2d5	obj/kern/kernel.asm	/^f010a2d5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010a2d8	obj/kern/kernel.asm	/^f010a2d8:	a1 e0 0e 2f f0       	mov    0xf02f0ee0,%eax$/;"	l
f010a2dd	obj/kern/kernel.asm	/^f010a2dd:	85 c0                	test   %eax,%eax$/;"	l
f010a2df	obj/kern/kernel.asm	/^f010a2df:	74 67                	je     f010a348 <pci_func_enable+0x138>$/;"	l
f010a2e1	obj/kern/kernel.asm	/^f010a2e1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010a2e4	obj/kern/kernel.asm	/^f010a2e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010a2e8	obj/kern/kernel.asm	/^f010a2e8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010a2eb	obj/kern/kernel.asm	/^f010a2eb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010a2ef	obj/kern/kernel.asm	/^f010a2ef:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010a2f2	obj/kern/kernel.asm	/^f010a2f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a2f6	obj/kern/kernel.asm	/^f010a2f6:	c7 04 24 68 ca 10 f0 	movl   $0xf010ca68,(%esp)$/;"	l
f010a2fd	obj/kern/kernel.asm	/^f010a2fd:	e8 3d b0 ff ff       	call   f010533f <cprintf>$/;"	l
f010a302	obj/kern/kernel.asm	/^f010a302:	eb 44                	jmp    f010a348 <pci_func_enable+0x138>$/;"	l
f010a304	obj/kern/kernel.asm	/^f010a304:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010a307	obj/kern/kernel.asm	/^f010a307:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010a30a	obj/kern/kernel.asm	/^f010a30a:	f7 d8                	neg    %eax$/;"	l
f010a30c	obj/kern/kernel.asm	/^f010a30c:	23 45 d0             	and    -0x30(%ebp),%eax$/;"	l
f010a30f	obj/kern/kernel.asm	/^f010a30f:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010a312	obj/kern/kernel.asm	/^f010a312:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010a315	obj/kern/kernel.asm	/^f010a315:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010a318	obj/kern/kernel.asm	/^f010a318:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010a31b	obj/kern/kernel.asm	/^f010a31b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010a31e	obj/kern/kernel.asm	/^f010a31e:	a1 e0 0e 2f f0       	mov    0xf02f0ee0,%eax$/;"	l
f010a323	obj/kern/kernel.asm	/^f010a323:	85 c0                	test   %eax,%eax$/;"	l
f010a325	obj/kern/kernel.asm	/^f010a325:	74 21                	je     f010a348 <pci_func_enable+0x138>$/;"	l
f010a327	obj/kern/kernel.asm	/^f010a327:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010a32a	obj/kern/kernel.asm	/^f010a32a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010a32e	obj/kern/kernel.asm	/^f010a32e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010a331	obj/kern/kernel.asm	/^f010a331:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010a335	obj/kern/kernel.asm	/^f010a335:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010a338	obj/kern/kernel.asm	/^f010a338:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a33c	obj/kern/kernel.asm	/^f010a33c:	c7 04 24 8c ca 10 f0 	movl   $0xf010ca8c,(%esp)$/;"	l
f010a343	obj/kern/kernel.asm	/^f010a343:	e8 f7 af ff ff       	call   f010533f <cprintf>$/;"	l
f010a348	obj/kern/kernel.asm	/^f010a348:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010a34b	obj/kern/kernel.asm	/^f010a34b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010a34f	obj/kern/kernel.asm	/^f010a34f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010a352	obj/kern/kernel.asm	/^f010a352:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a356	obj/kern/kernel.asm	/^f010a356:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a359	obj/kern/kernel.asm	/^f010a359:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010a35c	obj/kern/kernel.asm	/^f010a35c:	e8 ae f9 ff ff       	call   f0109d0f <pci_conf_write>$/;"	l
f010a361	obj/kern/kernel.asm	/^f010a361:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a364	obj/kern/kernel.asm	/^f010a364:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f010a367	obj/kern/kernel.asm	/^f010a367:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010a36a	obj/kern/kernel.asm	/^f010a36a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010a36d	obj/kern/kernel.asm	/^f010a36d:	89 54 88 04          	mov    %edx,0x4(%eax,%ecx,4)$/;"	l
f010a371	obj/kern/kernel.asm	/^f010a371:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a374	obj/kern/kernel.asm	/^f010a374:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f010a377	obj/kern/kernel.asm	/^f010a377:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010a37a	obj/kern/kernel.asm	/^f010a37a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010a37d	obj/kern/kernel.asm	/^f010a37d:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)$/;"	l
f010a381	obj/kern/kernel.asm	/^f010a381:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f010a385	obj/kern/kernel.asm	/^f010a385:	74 63                	je     f010a3ea <pci_func_enable+0x1da>$/;"	l
f010a387	obj/kern/kernel.asm	/^f010a387:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010a38b	obj/kern/kernel.asm	/^f010a38b:	75 5d                	jne    f010a3ea <pci_func_enable+0x1da>$/;"	l
f010a38d	obj/kern/kernel.asm	/^f010a38d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a390	obj/kern/kernel.asm	/^f010a390:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f010a393	obj/kern/kernel.asm	/^f010a393:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010a396	obj/kern/kernel.asm	/^f010a396:	89 c7                	mov    %eax,%edi$/;"	l
f010a398	obj/kern/kernel.asm	/^f010a398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a39b	obj/kern/kernel.asm	/^f010a39b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f010a39e	obj/kern/kernel.asm	/^f010a39e:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f010a3a1	obj/kern/kernel.asm	/^f010a3a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a3a4	obj/kern/kernel.asm	/^f010a3a4:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010a3a7	obj/kern/kernel.asm	/^f010a3a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a3aa	obj/kern/kernel.asm	/^f010a3aa:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010a3ad	obj/kern/kernel.asm	/^f010a3ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a3b0	obj/kern/kernel.asm	/^f010a3b0:	8b 00                	mov    (%eax),%eax$/;"	l
f010a3b2	obj/kern/kernel.asm	/^f010a3b2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010a3b5	obj/kern/kernel.asm	/^f010a3b5:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010a3b8	obj/kern/kernel.asm	/^f010a3b8:	89 74 24 20          	mov    %esi,0x20(%esp)$/;"	l
f010a3bc	obj/kern/kernel.asm	/^f010a3bc:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f010a3bf	obj/kern/kernel.asm	/^f010a3bf:	89 74 24 1c          	mov    %esi,0x1c(%esp)$/;"	l
f010a3c3	obj/kern/kernel.asm	/^f010a3c3:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f010a3c6	obj/kern/kernel.asm	/^f010a3c6:	89 74 24 18          	mov    %esi,0x18(%esp)$/;"	l
f010a3ca	obj/kern/kernel.asm	/^f010a3ca:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f010a3ce	obj/kern/kernel.asm	/^f010a3ce:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010a3d2	obj/kern/kernel.asm	/^f010a3d2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010a3d6	obj/kern/kernel.asm	/^f010a3d6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010a3da	obj/kern/kernel.asm	/^f010a3da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a3de	obj/kern/kernel.asm	/^f010a3de:	c7 04 24 b0 ca 10 f0 	movl   $0xf010cab0,(%esp)$/;"	l
f010a3e5	obj/kern/kernel.asm	/^f010a3e5:	e8 55 af ff ff       	call   f010533f <cprintf>$/;"	l
f010a3ea	obj/kern/kernel.asm	/^f010a3ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010a3ed	obj/kern/kernel.asm	/^f010a3ed:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
f010a3f0	obj/kern/kernel.asm	/^f010a3f0:	83 7d e0 27          	cmpl   $0x27,-0x20(%ebp)$/;"	l
f010a3f4	obj/kern/kernel.asm	/^f010a3f4:	0f 86 46 fe ff ff    	jbe    f010a240 <pci_func_enable+0x30>$/;"	l
f010a3fa	obj/kern/kernel.asm	/^f010a3fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a3fd	obj/kern/kernel.asm	/^f010a3fd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f010a400	obj/kern/kernel.asm	/^f010a400:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010a403	obj/kern/kernel.asm	/^f010a403:	89 c6                	mov    %eax,%esi$/;"	l
f010a405	obj/kern/kernel.asm	/^f010a405:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a408	obj/kern/kernel.asm	/^f010a408:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f010a40b	obj/kern/kernel.asm	/^f010a40b:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f010a40e	obj/kern/kernel.asm	/^f010a40e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a411	obj/kern/kernel.asm	/^f010a411:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010a414	obj/kern/kernel.asm	/^f010a414:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a417	obj/kern/kernel.asm	/^f010a417:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010a41a	obj/kern/kernel.asm	/^f010a41a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a41d	obj/kern/kernel.asm	/^f010a41d:	8b 00                	mov    (%eax),%eax$/;"	l
f010a41f	obj/kern/kernel.asm	/^f010a41f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010a422	obj/kern/kernel.asm	/^f010a422:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f010a426	obj/kern/kernel.asm	/^f010a426:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010a42a	obj/kern/kernel.asm	/^f010a42a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010a42e	obj/kern/kernel.asm	/^f010a42e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010a432	obj/kern/kernel.asm	/^f010a432:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a436	obj/kern/kernel.asm	/^f010a436:	c7 04 24 0c cb 10 f0 	movl   $0xf010cb0c,(%esp)$/;"	l
f010a43d	obj/kern/kernel.asm	/^f010a43d:	e8 fd ae ff ff       	call   f010533f <cprintf>$/;"	l
f010a442	obj/kern/kernel.asm	/^f010a442:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010a445	obj/kern/kernel.asm	/^f010a445:	5b                   	pop    %ebx$/;"	l
f010a446	obj/kern/kernel.asm	/^f010a446:	5e                   	pop    %esi$/;"	l
f010a447	obj/kern/kernel.asm	/^f010a447:	5f                   	pop    %edi$/;"	l
f010a448	obj/kern/kernel.asm	/^f010a448:	5d                   	pop    %ebp$/;"	l
f010a449	obj/kern/kernel.asm	/^f010a449:	c3                   	ret    $/;"	l
f010a44a	obj/kern/kernel.asm	/^f010a44a <pci_init>:$/;"	l
f010a44a	obj/kern/kernel.asm	/^f010a44a:	55                   	push   %ebp$/;"	l
f010a44b	obj/kern/kernel.asm	/^f010a44b:	89 e5                	mov    %esp,%ebp$/;"	l
f010a44d	obj/kern/kernel.asm	/^f010a44d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010a450	obj/kern/kernel.asm	/^f010a450:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f010a457	obj/kern/kernel.asm	/^f010a457:	00 $/;"	l
f010a458	obj/kern/kernel.asm	/^f010a458:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010a45f	obj/kern/kernel.asm	/^f010a45f:	00 $/;"	l
f010a460	obj/kern/kernel.asm	/^f010a460:	c7 04 24 e4 0e 2f f0 	movl   $0xf02f0ee4,(%esp)$/;"	l
f010a467	obj/kern/kernel.asm	/^f010a467:	e8 4e e1 ff ff       	call   f01085ba <memset>$/;"	l
f010a46c	obj/kern/kernel.asm	/^f010a46c:	c7 04 24 e4 0e 2f f0 	movl   $0xf02f0ee4,(%esp)$/;"	l
f010a473	obj/kern/kernel.asm	/^f010a473:	e8 08 fb ff ff       	call   f0109f80 <pci_scan_bus>$/;"	l
f010a478	obj/kern/kernel.asm	/^f010a478:	c9                   	leave  $/;"	l
f010a479	obj/kern/kernel.asm	/^f010a479:	c3                   	ret    $/;"	l
f010a47a	obj/kern/kernel.asm	/^f010a47a <time_init>:$/;"	l
f010a47a	obj/kern/kernel.asm	/^f010a47a:	55                   	push   %ebp$/;"	l
f010a47b	obj/kern/kernel.asm	/^f010a47b:	89 e5                	mov    %esp,%ebp$/;"	l
f010a47d	obj/kern/kernel.asm	/^f010a47d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010a480	obj/kern/kernel.asm	/^f010a480:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f010a487	obj/kern/kernel.asm	/^f010a487:	eb 12                	jmp    f010a49b <time_init+0x21>$/;"	l
f010a489	obj/kern/kernel.asm	/^f010a489:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010a48c	obj/kern/kernel.asm	/^f010a48c:	c7 04 85 00 0f 2f f0 	movl   $0x0,-0xfd0f100(,%eax,4)$/;"	l
f010a493	obj/kern/kernel.asm	/^f010a493:	00 00 00 00 $/;"	l
f010a497	obj/kern/kernel.asm	/^f010a497:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f010a49b	obj/kern/kernel.asm	/^f010a49b:	83 7d fc 07          	cmpl   $0x7,-0x4(%ebp)$/;"	l
f010a49f	obj/kern/kernel.asm	/^f010a49f:	76 e8                	jbe    f010a489 <time_init+0xf>$/;"	l
f010a4a1	obj/kern/kernel.asm	/^f010a4a1:	c9                   	leave  $/;"	l
f010a4a2	obj/kern/kernel.asm	/^f010a4a2:	c3                   	ret    $/;"	l
f010a4a3	obj/kern/kernel.asm	/^f010a4a3 <time_tick>:$/;"	l
f010a4a3	obj/kern/kernel.asm	/^f010a4a3:	55                   	push   %ebp$/;"	l
f010a4a4	obj/kern/kernel.asm	/^f010a4a4:	89 e5                	mov    %esp,%ebp$/;"	l
f010a4a6	obj/kern/kernel.asm	/^f010a4a6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010a4a9	obj/kern/kernel.asm	/^f010a4a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a4ac	obj/kern/kernel.asm	/^f010a4ac:	8b 04 85 00 0f 2f f0 	mov    -0xfd0f100(,%eax,4),%eax$/;"	l
f010a4b3	obj/kern/kernel.asm	/^f010a4b3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010a4b6	obj/kern/kernel.asm	/^f010a4b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a4b9	obj/kern/kernel.asm	/^f010a4b9:	89 14 85 00 0f 2f f0 	mov    %edx,-0xfd0f100(,%eax,4)$/;"	l
f010a4c0	obj/kern/kernel.asm	/^f010a4c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a4c3	obj/kern/kernel.asm	/^f010a4c3:	8b 14 85 00 0f 2f f0 	mov    -0xfd0f100(,%eax,4),%edx$/;"	l
f010a4ca	obj/kern/kernel.asm	/^f010a4ca:	89 d0                	mov    %edx,%eax$/;"	l
f010a4cc	obj/kern/kernel.asm	/^f010a4cc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010a4cf	obj/kern/kernel.asm	/^f010a4cf:	01 d0                	add    %edx,%eax$/;"	l
f010a4d1	obj/kern/kernel.asm	/^f010a4d1:	01 c0                	add    %eax,%eax$/;"	l
f010a4d3	obj/kern/kernel.asm	/^f010a4d3:	89 c2                	mov    %eax,%edx$/;"	l
f010a4d5	obj/kern/kernel.asm	/^f010a4d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a4d8	obj/kern/kernel.asm	/^f010a4d8:	8b 04 85 00 0f 2f f0 	mov    -0xfd0f100(,%eax,4),%eax$/;"	l
f010a4df	obj/kern/kernel.asm	/^f010a4df:	39 c2                	cmp    %eax,%edx$/;"	l
f010a4e1	obj/kern/kernel.asm	/^f010a4e1:	73 1c                	jae    f010a4ff <time_tick+0x5c>$/;"	l
f010a4e3	obj/kern/kernel.asm	/^f010a4e3:	c7 44 24 08 3b cb 10 	movl   $0xf010cb3b,0x8(%esp)$/;"	l
f010a4ea	obj/kern/kernel.asm	/^f010a4ea:	f0 $/;"	l
f010a4eb	obj/kern/kernel.asm	/^f010a4eb:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
f010a4f2	obj/kern/kernel.asm	/^f010a4f2:	00 $/;"	l
f010a4f3	obj/kern/kernel.asm	/^f010a4f3:	c7 04 24 56 cb 10 f0 	movl   $0xf010cb56,(%esp)$/;"	l
f010a4fa	obj/kern/kernel.asm	/^f010a4fa:	e8 03 5e ff ff       	call   f0100302 <_panic>$/;"	l
f010a4ff	obj/kern/kernel.asm	/^f010a4ff:	c9                   	leave  $/;"	l
f010a500	obj/kern/kernel.asm	/^f010a500:	c3                   	ret    $/;"	l
f010a501	obj/kern/kernel.asm	/^f010a501 <time_msec>:$/;"	l
f010a501	obj/kern/kernel.asm	/^f010a501:	55                   	push   %ebp$/;"	l
f010a502	obj/kern/kernel.asm	/^f010a502:	89 e5                	mov    %esp,%ebp$/;"	l
f010a504	obj/kern/kernel.asm	/^f010a504:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010a507	obj/kern/kernel.asm	/^f010a507:	8b 14 85 00 0f 2f f0 	mov    -0xfd0f100(,%eax,4),%edx$/;"	l
f010a50e	obj/kern/kernel.asm	/^f010a50e:	89 d0                	mov    %edx,%eax$/;"	l
f010a510	obj/kern/kernel.asm	/^f010a510:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010a513	obj/kern/kernel.asm	/^f010a513:	01 d0                	add    %edx,%eax$/;"	l
f010a515	obj/kern/kernel.asm	/^f010a515:	01 c0                	add    %eax,%eax$/;"	l
f010a517	obj/kern/kernel.asm	/^f010a517:	5d                   	pop    %ebp$/;"	l
f010a518	obj/kern/kernel.asm	/^f010a518:	c3                   	ret    $/;"	l
f010a519	obj/kern/kernel.asm	/^f010a519:	66 90                	xchg   %ax,%ax$/;"	l
f010a51b	obj/kern/kernel.asm	/^f010a51b:	66 90                	xchg   %ax,%ax$/;"	l
f010a51d	obj/kern/kernel.asm	/^f010a51d:	66 90                	xchg   %ax,%ax$/;"	l
f010a51f	obj/kern/kernel.asm	/^f010a51f:	90                   	nop$/;"	l
f010a520	obj/kern/kernel.asm	/^f010a520 <__udivdi3>:$/;"	l
f010a520	obj/kern/kernel.asm	/^f010a520:	55                   	push   %ebp$/;"	l
f010a521	obj/kern/kernel.asm	/^f010a521:	57                   	push   %edi$/;"	l
f010a522	obj/kern/kernel.asm	/^f010a522:	56                   	push   %esi$/;"	l
f010a523	obj/kern/kernel.asm	/^f010a523:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010a526	obj/kern/kernel.asm	/^f010a526:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010a52a	obj/kern/kernel.asm	/^f010a52a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f010a52e	obj/kern/kernel.asm	/^f010a52e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f010a532	obj/kern/kernel.asm	/^f010a532:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010a536	obj/kern/kernel.asm	/^f010a536:	85 c0                	test   %eax,%eax$/;"	l
f010a538	obj/kern/kernel.asm	/^f010a538:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010a53c	obj/kern/kernel.asm	/^f010a53c:	89 ea                	mov    %ebp,%edx$/;"	l
f010a53e	obj/kern/kernel.asm	/^f010a53e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010a541	obj/kern/kernel.asm	/^f010a541:	75 2d                	jne    f010a570 <__udivdi3+0x50>$/;"	l
f010a543	obj/kern/kernel.asm	/^f010a543:	39 e9                	cmp    %ebp,%ecx$/;"	l
f010a545	obj/kern/kernel.asm	/^f010a545:	77 61                	ja     f010a5a8 <__udivdi3+0x88>$/;"	l
f010a547	obj/kern/kernel.asm	/^f010a547:	85 c9                	test   %ecx,%ecx$/;"	l
f010a549	obj/kern/kernel.asm	/^f010a549:	89 ce                	mov    %ecx,%esi$/;"	l
f010a54b	obj/kern/kernel.asm	/^f010a54b:	75 0b                	jne    f010a558 <__udivdi3+0x38>$/;"	l
f010a54d	obj/kern/kernel.asm	/^f010a54d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010a552	obj/kern/kernel.asm	/^f010a552:	31 d2                	xor    %edx,%edx$/;"	l
f010a554	obj/kern/kernel.asm	/^f010a554:	f7 f1                	div    %ecx$/;"	l
f010a556	obj/kern/kernel.asm	/^f010a556:	89 c6                	mov    %eax,%esi$/;"	l
f010a558	obj/kern/kernel.asm	/^f010a558:	31 d2                	xor    %edx,%edx$/;"	l
f010a55a	obj/kern/kernel.asm	/^f010a55a:	89 e8                	mov    %ebp,%eax$/;"	l
f010a55c	obj/kern/kernel.asm	/^f010a55c:	f7 f6                	div    %esi$/;"	l
f010a55e	obj/kern/kernel.asm	/^f010a55e:	89 c5                	mov    %eax,%ebp$/;"	l
f010a560	obj/kern/kernel.asm	/^f010a560:	89 f8                	mov    %edi,%eax$/;"	l
f010a562	obj/kern/kernel.asm	/^f010a562:	f7 f6                	div    %esi$/;"	l
f010a564	obj/kern/kernel.asm	/^f010a564:	89 ea                	mov    %ebp,%edx$/;"	l
f010a566	obj/kern/kernel.asm	/^f010a566:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010a569	obj/kern/kernel.asm	/^f010a569:	5e                   	pop    %esi$/;"	l
f010a56a	obj/kern/kernel.asm	/^f010a56a:	5f                   	pop    %edi$/;"	l
f010a56b	obj/kern/kernel.asm	/^f010a56b:	5d                   	pop    %ebp$/;"	l
f010a56c	obj/kern/kernel.asm	/^f010a56c:	c3                   	ret    $/;"	l
f010a56d	obj/kern/kernel.asm	/^f010a56d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010a570	obj/kern/kernel.asm	/^f010a570:	39 e8                	cmp    %ebp,%eax$/;"	l
f010a572	obj/kern/kernel.asm	/^f010a572:	77 24                	ja     f010a598 <__udivdi3+0x78>$/;"	l
f010a574	obj/kern/kernel.asm	/^f010a574:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010a577	obj/kern/kernel.asm	/^f010a577:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010a57a	obj/kern/kernel.asm	/^f010a57a:	75 3c                	jne    f010a5b8 <__udivdi3+0x98>$/;"	l
f010a57c	obj/kern/kernel.asm	/^f010a57c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f010a580	obj/kern/kernel.asm	/^f010a580:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f010a583	obj/kern/kernel.asm	/^f010a583:	0f 86 9f 00 00 00    	jbe    f010a628 <__udivdi3+0x108>$/;"	l
f010a589	obj/kern/kernel.asm	/^f010a589:	39 d0                	cmp    %edx,%eax$/;"	l
f010a58b	obj/kern/kernel.asm	/^f010a58b:	0f 82 97 00 00 00    	jb     f010a628 <__udivdi3+0x108>$/;"	l
f010a591	obj/kern/kernel.asm	/^f010a591:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010a598	obj/kern/kernel.asm	/^f010a598:	31 d2                	xor    %edx,%edx$/;"	l
f010a59a	obj/kern/kernel.asm	/^f010a59a:	31 c0                	xor    %eax,%eax$/;"	l
f010a59c	obj/kern/kernel.asm	/^f010a59c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010a59f	obj/kern/kernel.asm	/^f010a59f:	5e                   	pop    %esi$/;"	l
f010a5a0	obj/kern/kernel.asm	/^f010a5a0:	5f                   	pop    %edi$/;"	l
f010a5a1	obj/kern/kernel.asm	/^f010a5a1:	5d                   	pop    %ebp$/;"	l
f010a5a2	obj/kern/kernel.asm	/^f010a5a2:	c3                   	ret    $/;"	l
f010a5a3	obj/kern/kernel.asm	/^f010a5a3:	90                   	nop$/;"	l
f010a5a4	obj/kern/kernel.asm	/^f010a5a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010a5a8	obj/kern/kernel.asm	/^f010a5a8:	89 f8                	mov    %edi,%eax$/;"	l
f010a5aa	obj/kern/kernel.asm	/^f010a5aa:	f7 f1                	div    %ecx$/;"	l
f010a5ac	obj/kern/kernel.asm	/^f010a5ac:	31 d2                	xor    %edx,%edx$/;"	l
f010a5ae	obj/kern/kernel.asm	/^f010a5ae:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010a5b1	obj/kern/kernel.asm	/^f010a5b1:	5e                   	pop    %esi$/;"	l
f010a5b2	obj/kern/kernel.asm	/^f010a5b2:	5f                   	pop    %edi$/;"	l
f010a5b3	obj/kern/kernel.asm	/^f010a5b3:	5d                   	pop    %ebp$/;"	l
f010a5b4	obj/kern/kernel.asm	/^f010a5b4:	c3                   	ret    $/;"	l
f010a5b5	obj/kern/kernel.asm	/^f010a5b5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010a5b8	obj/kern/kernel.asm	/^f010a5b8:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a5ba	obj/kern/kernel.asm	/^f010a5ba:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010a5bd	obj/kern/kernel.asm	/^f010a5bd:	d3 e0                	shl    %cl,%eax$/;"	d
f010a5bf	obj/kern/kernel.asm	/^f010a5bf:	89 c6                	mov    %eax,%esi$/;"	l
f010a5c1	obj/kern/kernel.asm	/^f010a5c1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010a5c6	obj/kern/kernel.asm	/^f010a5c6:	29 e8                	sub    %ebp,%eax$/;"	l
f010a5c8	obj/kern/kernel.asm	/^f010a5c8:	89 c1                	mov    %eax,%ecx$/;"	l
f010a5ca	obj/kern/kernel.asm	/^f010a5ca:	d3 ef                	shr    %cl,%edi$/;"	d
f010a5cc	obj/kern/kernel.asm	/^f010a5cc:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a5ce	obj/kern/kernel.asm	/^f010a5ce:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010a5d2	obj/kern/kernel.asm	/^f010a5d2:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010a5d5	obj/kern/kernel.asm	/^f010a5d5:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f010a5d9	obj/kern/kernel.asm	/^f010a5d9:	89 d6                	mov    %edx,%esi$/;"	l
f010a5db	obj/kern/kernel.asm	/^f010a5db:	d3 e7                	shl    %cl,%edi$/;"	d
f010a5dd	obj/kern/kernel.asm	/^f010a5dd:	89 c1                	mov    %eax,%ecx$/;"	l
f010a5df	obj/kern/kernel.asm	/^f010a5df:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010a5e2	obj/kern/kernel.asm	/^f010a5e2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f010a5e6	obj/kern/kernel.asm	/^f010a5e6:	d3 ee                	shr    %cl,%esi$/;"	d
f010a5e8	obj/kern/kernel.asm	/^f010a5e8:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a5ea	obj/kern/kernel.asm	/^f010a5ea:	d3 e2                	shl    %cl,%edx$/;"	d
f010a5ec	obj/kern/kernel.asm	/^f010a5ec:	89 c1                	mov    %eax,%ecx$/;"	l
f010a5ee	obj/kern/kernel.asm	/^f010a5ee:	d3 ef                	shr    %cl,%edi$/;"	d
f010a5f0	obj/kern/kernel.asm	/^f010a5f0:	09 d7                	or     %edx,%edi$/;"	l
f010a5f2	obj/kern/kernel.asm	/^f010a5f2:	89 f2                	mov    %esi,%edx$/;"	l
f010a5f4	obj/kern/kernel.asm	/^f010a5f4:	89 f8                	mov    %edi,%eax$/;"	l
f010a5f6	obj/kern/kernel.asm	/^f010a5f6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010a5fa	obj/kern/kernel.asm	/^f010a5fa:	89 d6                	mov    %edx,%esi$/;"	l
f010a5fc	obj/kern/kernel.asm	/^f010a5fc:	89 c7                	mov    %eax,%edi$/;"	l
f010a5fe	obj/kern/kernel.asm	/^f010a5fe:	f7 24 24             	mull   (%esp)$/;"	l
f010a601	obj/kern/kernel.asm	/^f010a601:	39 d6                	cmp    %edx,%esi$/;"	l
f010a603	obj/kern/kernel.asm	/^f010a603:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010a606	obj/kern/kernel.asm	/^f010a606:	72 30                	jb     f010a638 <__udivdi3+0x118>$/;"	l
f010a608	obj/kern/kernel.asm	/^f010a608:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010a60c	obj/kern/kernel.asm	/^f010a60c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a60e	obj/kern/kernel.asm	/^f010a60e:	d3 e2                	shl    %cl,%edx$/;"	d
f010a610	obj/kern/kernel.asm	/^f010a610:	39 c2                	cmp    %eax,%edx$/;"	l
f010a612	obj/kern/kernel.asm	/^f010a612:	73 05                	jae    f010a619 <__udivdi3+0xf9>$/;"	l
f010a614	obj/kern/kernel.asm	/^f010a614:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f010a617	obj/kern/kernel.asm	/^f010a617:	74 1f                	je     f010a638 <__udivdi3+0x118>$/;"	l
f010a619	obj/kern/kernel.asm	/^f010a619:	89 f8                	mov    %edi,%eax$/;"	l
f010a61b	obj/kern/kernel.asm	/^f010a61b:	31 d2                	xor    %edx,%edx$/;"	l
f010a61d	obj/kern/kernel.asm	/^f010a61d:	e9 7a ff ff ff       	jmp    f010a59c <__udivdi3+0x7c>$/;"	l
f010a622	obj/kern/kernel.asm	/^f010a622:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f010a628	obj/kern/kernel.asm	/^f010a628:	31 d2                	xor    %edx,%edx$/;"	l
f010a62a	obj/kern/kernel.asm	/^f010a62a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010a62f	obj/kern/kernel.asm	/^f010a62f:	e9 68 ff ff ff       	jmp    f010a59c <__udivdi3+0x7c>$/;"	l
f010a634	obj/kern/kernel.asm	/^f010a634:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010a638	obj/kern/kernel.asm	/^f010a638:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f010a63b	obj/kern/kernel.asm	/^f010a63b:	31 d2                	xor    %edx,%edx$/;"	l
f010a63d	obj/kern/kernel.asm	/^f010a63d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010a640	obj/kern/kernel.asm	/^f010a640:	5e                   	pop    %esi$/;"	l
f010a641	obj/kern/kernel.asm	/^f010a641:	5f                   	pop    %edi$/;"	l
f010a642	obj/kern/kernel.asm	/^f010a642:	5d                   	pop    %ebp$/;"	l
f010a643	obj/kern/kernel.asm	/^f010a643:	c3                   	ret    $/;"	l
f010a644	obj/kern/kernel.asm	/^f010a644:	66 90                	xchg   %ax,%ax$/;"	l
f010a646	obj/kern/kernel.asm	/^f010a646:	66 90                	xchg   %ax,%ax$/;"	l
f010a648	obj/kern/kernel.asm	/^f010a648:	66 90                	xchg   %ax,%ax$/;"	l
f010a64a	obj/kern/kernel.asm	/^f010a64a:	66 90                	xchg   %ax,%ax$/;"	l
f010a64c	obj/kern/kernel.asm	/^f010a64c:	66 90                	xchg   %ax,%ax$/;"	l
f010a64e	obj/kern/kernel.asm	/^f010a64e:	66 90                	xchg   %ax,%ax$/;"	l
f010a650	obj/kern/kernel.asm	/^f010a650 <__umoddi3>:$/;"	l
f010a650	obj/kern/kernel.asm	/^f010a650:	55                   	push   %ebp$/;"	l
f010a651	obj/kern/kernel.asm	/^f010a651:	57                   	push   %edi$/;"	l
f010a652	obj/kern/kernel.asm	/^f010a652:	56                   	push   %esi$/;"	l
f010a653	obj/kern/kernel.asm	/^f010a653:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010a656	obj/kern/kernel.asm	/^f010a656:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010a65a	obj/kern/kernel.asm	/^f010a65a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010a65e	obj/kern/kernel.asm	/^f010a65e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f010a662	obj/kern/kernel.asm	/^f010a662:	89 c7                	mov    %eax,%edi$/;"	l
f010a664	obj/kern/kernel.asm	/^f010a664:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a668	obj/kern/kernel.asm	/^f010a668:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f010a66c	obj/kern/kernel.asm	/^f010a66c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f010a670	obj/kern/kernel.asm	/^f010a670:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010a673	obj/kern/kernel.asm	/^f010a673:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010a677	obj/kern/kernel.asm	/^f010a677:	85 c0                	test   %eax,%eax$/;"	l
f010a679	obj/kern/kernel.asm	/^f010a679:	89 c2                	mov    %eax,%edx$/;"	l
f010a67b	obj/kern/kernel.asm	/^f010a67b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010a67f	obj/kern/kernel.asm	/^f010a67f:	75 17                	jne    f010a698 <__umoddi3+0x48>$/;"	l
f010a681	obj/kern/kernel.asm	/^f010a681:	39 fe                	cmp    %edi,%esi$/;"	l
f010a683	obj/kern/kernel.asm	/^f010a683:	76 4b                	jbe    f010a6d0 <__umoddi3+0x80>$/;"	l
f010a685	obj/kern/kernel.asm	/^f010a685:	89 c8                	mov    %ecx,%eax$/;"	l
f010a687	obj/kern/kernel.asm	/^f010a687:	89 fa                	mov    %edi,%edx$/;"	l
f010a689	obj/kern/kernel.asm	/^f010a689:	f7 f6                	div    %esi$/;"	l
f010a68b	obj/kern/kernel.asm	/^f010a68b:	89 d0                	mov    %edx,%eax$/;"	l
f010a68d	obj/kern/kernel.asm	/^f010a68d:	31 d2                	xor    %edx,%edx$/;"	l
f010a68f	obj/kern/kernel.asm	/^f010a68f:	83 c4 14             	add    $0x14,%esp$/;"	l
f010a692	obj/kern/kernel.asm	/^f010a692:	5e                   	pop    %esi$/;"	l
f010a693	obj/kern/kernel.asm	/^f010a693:	5f                   	pop    %edi$/;"	l
f010a694	obj/kern/kernel.asm	/^f010a694:	5d                   	pop    %ebp$/;"	l
f010a695	obj/kern/kernel.asm	/^f010a695:	c3                   	ret    $/;"	l
f010a696	obj/kern/kernel.asm	/^f010a696:	66 90                	xchg   %ax,%ax$/;"	l
f010a698	obj/kern/kernel.asm	/^f010a698:	39 f8                	cmp    %edi,%eax$/;"	l
f010a69a	obj/kern/kernel.asm	/^f010a69a:	77 54                	ja     f010a6f0 <__umoddi3+0xa0>$/;"	l
f010a69c	obj/kern/kernel.asm	/^f010a69c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010a69f	obj/kern/kernel.asm	/^f010a69f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010a6a2	obj/kern/kernel.asm	/^f010a6a2:	75 5c                	jne    f010a700 <__umoddi3+0xb0>$/;"	l
f010a6a4	obj/kern/kernel.asm	/^f010a6a4:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f010a6a8	obj/kern/kernel.asm	/^f010a6a8:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010a6ab	obj/kern/kernel.asm	/^f010a6ab:	0f 87 e7 00 00 00    	ja     f010a798 <__umoddi3+0x148>$/;"	l
f010a6b1	obj/kern/kernel.asm	/^f010a6b1:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f010a6b5	obj/kern/kernel.asm	/^f010a6b5:	29 f1                	sub    %esi,%ecx$/;"	l
f010a6b7	obj/kern/kernel.asm	/^f010a6b7:	19 c7                	sbb    %eax,%edi$/;"	l
f010a6b9	obj/kern/kernel.asm	/^f010a6b9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010a6bd	obj/kern/kernel.asm	/^f010a6bd:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010a6c1	obj/kern/kernel.asm	/^f010a6c1:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010a6c5	obj/kern/kernel.asm	/^f010a6c5:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f010a6c9	obj/kern/kernel.asm	/^f010a6c9:	83 c4 14             	add    $0x14,%esp$/;"	l
f010a6cc	obj/kern/kernel.asm	/^f010a6cc:	5e                   	pop    %esi$/;"	l
f010a6cd	obj/kern/kernel.asm	/^f010a6cd:	5f                   	pop    %edi$/;"	l
f010a6ce	obj/kern/kernel.asm	/^f010a6ce:	5d                   	pop    %ebp$/;"	l
f010a6cf	obj/kern/kernel.asm	/^f010a6cf:	c3                   	ret    $/;"	l
f010a6d0	obj/kern/kernel.asm	/^f010a6d0:	85 f6                	test   %esi,%esi$/;"	l
f010a6d2	obj/kern/kernel.asm	/^f010a6d2:	89 f5                	mov    %esi,%ebp$/;"	l
f010a6d4	obj/kern/kernel.asm	/^f010a6d4:	75 0b                	jne    f010a6e1 <__umoddi3+0x91>$/;"	l
f010a6d6	obj/kern/kernel.asm	/^f010a6d6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010a6db	obj/kern/kernel.asm	/^f010a6db:	31 d2                	xor    %edx,%edx$/;"	l
f010a6dd	obj/kern/kernel.asm	/^f010a6dd:	f7 f6                	div    %esi$/;"	l
f010a6df	obj/kern/kernel.asm	/^f010a6df:	89 c5                	mov    %eax,%ebp$/;"	l
f010a6e1	obj/kern/kernel.asm	/^f010a6e1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f010a6e5	obj/kern/kernel.asm	/^f010a6e5:	31 d2                	xor    %edx,%edx$/;"	l
f010a6e7	obj/kern/kernel.asm	/^f010a6e7:	f7 f5                	div    %ebp$/;"	l
f010a6e9	obj/kern/kernel.asm	/^f010a6e9:	89 c8                	mov    %ecx,%eax$/;"	l
f010a6eb	obj/kern/kernel.asm	/^f010a6eb:	f7 f5                	div    %ebp$/;"	l
f010a6ed	obj/kern/kernel.asm	/^f010a6ed:	eb 9c                	jmp    f010a68b <__umoddi3+0x3b>$/;"	l
f010a6ef	obj/kern/kernel.asm	/^f010a6ef:	90                   	nop$/;"	l
f010a6f0	obj/kern/kernel.asm	/^f010a6f0:	89 c8                	mov    %ecx,%eax$/;"	l
f010a6f2	obj/kern/kernel.asm	/^f010a6f2:	89 fa                	mov    %edi,%edx$/;"	l
f010a6f4	obj/kern/kernel.asm	/^f010a6f4:	83 c4 14             	add    $0x14,%esp$/;"	l
f010a6f7	obj/kern/kernel.asm	/^f010a6f7:	5e                   	pop    %esi$/;"	l
f010a6f8	obj/kern/kernel.asm	/^f010a6f8:	5f                   	pop    %edi$/;"	l
f010a6f9	obj/kern/kernel.asm	/^f010a6f9:	5d                   	pop    %ebp$/;"	l
f010a6fa	obj/kern/kernel.asm	/^f010a6fa:	c3                   	ret    $/;"	l
f010a6fb	obj/kern/kernel.asm	/^f010a6fb:	90                   	nop$/;"	l
f010a6fc	obj/kern/kernel.asm	/^f010a6fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010a700	obj/kern/kernel.asm	/^f010a700:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010a703	obj/kern/kernel.asm	/^f010a703:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f010a708	obj/kern/kernel.asm	/^f010a708:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a70a	obj/kern/kernel.asm	/^f010a70a:	29 ee                	sub    %ebp,%esi$/;"	l
f010a70c	obj/kern/kernel.asm	/^f010a70c:	d3 e2                	shl    %cl,%edx$/;"	d
f010a70e	obj/kern/kernel.asm	/^f010a70e:	89 f1                	mov    %esi,%ecx$/;"	l
f010a710	obj/kern/kernel.asm	/^f010a710:	d3 e8                	shr    %cl,%eax$/;"	d
f010a712	obj/kern/kernel.asm	/^f010a712:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a714	obj/kern/kernel.asm	/^f010a714:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010a718	obj/kern/kernel.asm	/^f010a718:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010a71b	obj/kern/kernel.asm	/^f010a71b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f010a71f	obj/kern/kernel.asm	/^f010a71f:	89 fa                	mov    %edi,%edx$/;"	l
f010a721	obj/kern/kernel.asm	/^f010a721:	d3 e0                	shl    %cl,%eax$/;"	d
f010a723	obj/kern/kernel.asm	/^f010a723:	89 f1                	mov    %esi,%ecx$/;"	l
f010a725	obj/kern/kernel.asm	/^f010a725:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010a729	obj/kern/kernel.asm	/^f010a729:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010a72d	obj/kern/kernel.asm	/^f010a72d:	d3 ea                	shr    %cl,%edx$/;"	d
f010a72f	obj/kern/kernel.asm	/^f010a72f:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a731	obj/kern/kernel.asm	/^f010a731:	d3 e7                	shl    %cl,%edi$/;"	d
f010a733	obj/kern/kernel.asm	/^f010a733:	89 f1                	mov    %esi,%ecx$/;"	l
f010a735	obj/kern/kernel.asm	/^f010a735:	d3 e8                	shr    %cl,%eax$/;"	d
f010a737	obj/kern/kernel.asm	/^f010a737:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a739	obj/kern/kernel.asm	/^f010a739:	09 f8                	or     %edi,%eax$/;"	l
f010a73b	obj/kern/kernel.asm	/^f010a73b:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f010a73f	obj/kern/kernel.asm	/^f010a73f:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f010a743	obj/kern/kernel.asm	/^f010a743:	d3 e7                	shl    %cl,%edi$/;"	d
f010a745	obj/kern/kernel.asm	/^f010a745:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010a749	obj/kern/kernel.asm	/^f010a749:	89 d7                	mov    %edx,%edi$/;"	l
f010a74b	obj/kern/kernel.asm	/^f010a74b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010a74f	obj/kern/kernel.asm	/^f010a74f:	39 d7                	cmp    %edx,%edi$/;"	l
f010a751	obj/kern/kernel.asm	/^f010a751:	89 c1                	mov    %eax,%ecx$/;"	l
f010a753	obj/kern/kernel.asm	/^f010a753:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010a756	obj/kern/kernel.asm	/^f010a756:	72 2c                	jb     f010a784 <__umoddi3+0x134>$/;"	l
f010a758	obj/kern/kernel.asm	/^f010a758:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010a75c	obj/kern/kernel.asm	/^f010a75c:	72 22                	jb     f010a780 <__umoddi3+0x130>$/;"	l
f010a75e	obj/kern/kernel.asm	/^f010a75e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f010a762	obj/kern/kernel.asm	/^f010a762:	29 c8                	sub    %ecx,%eax$/;"	l
f010a764	obj/kern/kernel.asm	/^f010a764:	19 d7                	sbb    %edx,%edi$/;"	l
f010a766	obj/kern/kernel.asm	/^f010a766:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a768	obj/kern/kernel.asm	/^f010a768:	89 fa                	mov    %edi,%edx$/;"	l
f010a76a	obj/kern/kernel.asm	/^f010a76a:	d3 e8                	shr    %cl,%eax$/;"	d
f010a76c	obj/kern/kernel.asm	/^f010a76c:	89 f1                	mov    %esi,%ecx$/;"	l
f010a76e	obj/kern/kernel.asm	/^f010a76e:	d3 e2                	shl    %cl,%edx$/;"	d
f010a770	obj/kern/kernel.asm	/^f010a770:	89 e9                	mov    %ebp,%ecx$/;"	l
f010a772	obj/kern/kernel.asm	/^f010a772:	d3 ef                	shr    %cl,%edi$/;"	d
f010a774	obj/kern/kernel.asm	/^f010a774:	09 d0                	or     %edx,%eax$/;"	l
f010a776	obj/kern/kernel.asm	/^f010a776:	89 fa                	mov    %edi,%edx$/;"	l
f010a778	obj/kern/kernel.asm	/^f010a778:	83 c4 14             	add    $0x14,%esp$/;"	l
f010a77b	obj/kern/kernel.asm	/^f010a77b:	5e                   	pop    %esi$/;"	l
f010a77c	obj/kern/kernel.asm	/^f010a77c:	5f                   	pop    %edi$/;"	l
f010a77d	obj/kern/kernel.asm	/^f010a77d:	5d                   	pop    %ebp$/;"	l
f010a77e	obj/kern/kernel.asm	/^f010a77e:	c3                   	ret    $/;"	l
f010a77f	obj/kern/kernel.asm	/^f010a77f:	90                   	nop$/;"	l
f010a780	obj/kern/kernel.asm	/^f010a780:	39 d7                	cmp    %edx,%edi$/;"	l
f010a782	obj/kern/kernel.asm	/^f010a782:	75 da                	jne    f010a75e <__umoddi3+0x10e>$/;"	l
f010a784	obj/kern/kernel.asm	/^f010a784:	8b 14 24             	mov    (%esp),%edx$/;"	l
f010a787	obj/kern/kernel.asm	/^f010a787:	89 c1                	mov    %eax,%ecx$/;"	l
f010a789	obj/kern/kernel.asm	/^f010a789:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010a78d	obj/kern/kernel.asm	/^f010a78d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f010a791	obj/kern/kernel.asm	/^f010a791:	eb cb                	jmp    f010a75e <__umoddi3+0x10e>$/;"	l
f010a793	obj/kern/kernel.asm	/^f010a793:	90                   	nop$/;"	l
f010a794	obj/kern/kernel.asm	/^f010a794:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010a798	obj/kern/kernel.asm	/^f010a798:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010a79c	obj/kern/kernel.asm	/^f010a79c:	0f 82 0f ff ff ff    	jb     f010a6b1 <__umoddi3+0x61>$/;"	l
f010a7a2	obj/kern/kernel.asm	/^f010a7a2:	e9 1a ff ff ff       	jmp    f010a6c1 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cpuhog.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cpuhog.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cpuhog.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^  int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36	typeref:struct:netifapi_msg_msg::__anon35::__anon36::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon31::__anon34
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon12
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^      i = ETHARP_HWADDR_LEN;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	obj/kern/kernel.asm	/^			idx = (idx + 1) % NENV;$/;"	d
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon12
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon31	typeref:struct:tcpip_msg::__anon31::__anon32
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/cpuhog.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/cpuhog.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon21::__anon27	typeref:struct:api_msg_msg::__anon21::__anon27::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon38	typeref:struct:netconn::__anon38::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon21::__anon23	typeref:struct:api_msg_msg::__anon21::__anon23::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon21::__anon24	typeref:struct:api_msg_msg::__anon21::__anon24::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36	typeref:struct:netifapi_msg_msg::__anon35::__anon36::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^    ipr = ip_reass_enqueue_new_datagram(fraghdr, clen);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr_prev	obj/net/ns.asm	/^    ipr_prev = ipr;$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon27
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon21::__anon27	typeref:enum:api_msg_msg::__anon21::__anon27::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon28
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = 0;$/;"	d
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon21::__anon25
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon21::__anon26
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = available;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^	uint16_t length;$/;"	m	struct:rx_desc
length	kern/e1000.h	/^	uint16_t length;$/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cpuhog.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon21::__anon24
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^      local_match = 0;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
local_port	obj/net/ns.asm	/^  local_port = ((struct sockaddr_in *)name)->sin_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/cpuhog.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cpuhog.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cpuhog.asm	/^		m = n - tot;$/;"	d
m	obj/user/cpuhog.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = (struct memp *)((u8_t*)mem - MEMP_SIZE);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon40
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon39
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon31::__anon34
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon21
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon35
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon31
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon9	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon9	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon21::__anon27	typeref:struct:api_msg_msg::__anon21::__anon27::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon22
n	obj/fs/fs.asm	/^		n = max_write;$/;"	d
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^		n = max_write;$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = max_write;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = max_write;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^		n = max_write;$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = max_write;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = max_write;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = max_write;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = max_write;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cpuhog.asm	/^		n = max_write;$/;"	d
n	obj/user/cpuhog.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = max_write;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = max_write;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = max_write;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^		n = max_write;$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = max_write;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = max_write;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = max_write;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = max_write;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = max_write;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = max_write;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = max_write;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = max_write;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = max_write;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = max_write;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = max_write;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = max_write;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = max_write;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = max_write;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = max_write;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = max_write;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^		n = max_write;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = max_write;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = max_write;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = max_write;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = max_write;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = max_write;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = max_write;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = max_write;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = max_write;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = max_write;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = max_write;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = max_write;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = max_write;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = max_write;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = max_write;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = max_write;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = max_write;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = max_write;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = max_write;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = max_write;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = max_write;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = max_write;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = max_write;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = max_write;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = max_write;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = max_write;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^		n = max_write;$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = max_write;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^  const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon16
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon31::__anon32	typeref:struct:tcpip_msg::__anon31::__anon32::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon31	typeref:struct:tcpip_msg::__anon31::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36	typeref:struct:netifapi_msg_msg::__anon35::__anon36::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
network_regs	kern/e1000.c	/^volatile uint32_t *network_regs;$/;"	v
network_regs	obj/kern/kernel.asm	/^	network_regs = mmio_map_region((physaddr_t) pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_page	obj/kern/kernel.asm	/^  		new_page = page_alloc(1);$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cpuhog.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^  	nextfree = ROUNDUP(nextfree + n, PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cpuhog.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cpuhog.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/cpuhog.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cpuhog.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cpuhog.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cpuhog.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cpuhog.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/cpuhog.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cpuhog.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	73;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cpuhog.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon31::__anon32	typeref:struct:tcpip_msg::__anon31::__anon32::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^            p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = low_level_input(va);$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cpuhog.asm	/^				p = "(null)";$/;"	d
p	obj/user/cpuhog.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cpuhog.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
packet	kern/e1000.h	/^struct packet$/;"	s
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/fs/fs.asm	/^		padc = ' ';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^		padc = ' ';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^		padc = ' ';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^		padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^		padc = ' ';$/;"	d
padc	obj/user/cpuhog.asm	/^			padc = '-';$/;"	d
padc	obj/user/cpuhog.asm	/^			padc = '0';$/;"	d
padc	obj/user/cpuhog.asm	/^		padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^		padc = ' ';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^		padc = ' ';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^		padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^		padc = ' ';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^		padc = ' ';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^ 	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^ 	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon29
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon30
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon38
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^          pcb = inp->dhcp->pcb;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_network_attach	kern/e1000.c	/^pci_network_attach(struct pci_func *pcif)$/;"	f
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon44
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon44
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon44
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon44
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde	obj/kern/kernel.asm	/^  pde = &kern_pgdir[PDX(va)]; \/\/ now do the same for the page directory entry$/;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/testinput.asm	/^		perm = 0;$/;"	d
perm	obj/net/testoutput.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/cpuhog.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/cpuhog.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) KERNBASE;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) KERNBASE; \/\/ KERNBASE should be rejected by sys_ipc_recv()$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) KERNBASE;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt_checksum	kern/e1000.h	/^	uint16_t pkt_checksum;$/;"	m	struct:rx_desc
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon21::__anon24
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon21::__anon23
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = page_alloc(false); \/\/ DON'T zero out page as specified in method comments$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_lookup(curenv->env_pgdir, srcva, &pte);$/;"	d
pp	obj/kern/kernel.asm	/^  	pp = page_free_list;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/cpuhog.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cpuhog.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cpuhog.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^            prev = next;$/;"	d
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = (struct tcp_pcb *)lpcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_ebp	obj/kern/kernel.asm	/^    prev_ebp =  read_byte_at_addr((uint32_t *) current_ebp); $/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
priority	inc/env.h	/^	enum EnvPriority priority;  \/\/ Envs with higher priority get run first$/;"	m	struct:Env	typeref:enum:Env::EnvPriority
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cpuhog.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon21::__anon22
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (void *) current_va, true);$/;"	d
pte	obj/kern/kernel.asm	/^  	pte = pgdir_walk(pgdir, va, true);$/;"	d
pte	obj/kern/kernel.asm	/^    pte = pgdir_walk(kern_pgdir, (void *) current_va, false);$/;"	d
pte	obj/kern/kernel.asm	/^  pte = pgdir_walk(kern_pgdir, (void *) va, false);$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cpuhog.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_copy	obj/kern/kernel.asm	/^      pte_copy = *pte;$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon26
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/fs/fs.asm	/^	r = file_read(o->o_file, ret->ret_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = file_write(o->o_file, req->req_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cpuhog.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cpuhog.asm	/^			r = 0;$/;"	d
r	obj/user/cpuhog.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cpuhog.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cpuhog.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^		r = http_request_parse(req, buffer);$/;"	d
r	obj/user/httpd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 128, "Content-Type: %s\\r\\n", type);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 64, "Content-Length: %ld\\r\\n", (long)size);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^		r = wait(child);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon38	typeref:struct:netconn::__anon38::raw_pcb
raw_binary	obj/kern/kernel.asm	/^    raw_binary = raw_binary >> 1;$/;"	d
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cpuhog.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_byte_at_addr	inc/x86.h	/^read_byte_at_addr(uint32_t *addr)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_page	obj/kern/kernel.asm	/^		recv_page = true;$/;"	d
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = ((struct sockaddr_in *)name)->sin_port;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req	obj/net/ns.asm	/^		req = ipc_recv(&sender_envid, &nsipcbuf, &perm);$/;"	d
req	obj/net/testinput.asm	/^		req = ipc_recv(&sender_envid, &nsipcbuf, &perm);$/;"	d
req	obj/net/testoutput.asm	/^		req = ipc_recv(&sender_envid, &nsipcbuf, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^  	result = nextfree;$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cpuhog.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/cpuhog.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cpuhog.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_code	obj/kern/kernel.asm	/^			ret_code = syscall($/;"	d
ret_code	obj/kern/kernel.asm	/^	ret_code = env_alloc(&e, 0);$/;"	d
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
return_code	obj/kern/kernel.asm	/^	return_code = env_alloc(&new_env, curenv->env_id);$/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon43	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
rx_desc	kern/e1000.h	/^struct rx_desc$/;"	s
rx_pkts	kern/e1000.c	/^struct packet rx_pkts[NRXDESC];$/;"	v	typeref:struct:packet
rxq	kern/e1000.c	/^struct rx_desc rxq[NRXDESC] __attribute__ ((aligned (16)));$/;"	v	typeref:struct:rx_desc
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/cpuhog.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
saved_eip	obj/kern/kernel.asm	/^    saved_eip = read_byte_at_addr((uint32_t *) \\$/;"	d
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_page	obj/kern/kernel.asm	/^		send_page = true;$/;"	d
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setperms	kern/monitor.c	/^setperms(int argc, char **argv, struct Trapframe *tf)$/;"	f
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
showmappings	kern/monitor.c	/^showmappings(int argc, char **argv, struct Trapframe *tf)$/;"	f
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
single_step	kern/monitor.c	/^single_step(int argc, char **argv, struct Trapframe *tf)$/;"	f
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = DEFAULT_RAW_RECVMBOX_SIZE;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/cpuhog.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^	uint16_t special;$/;"	m	struct:rx_desc
special	kern/e1000.h	/^	uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(pcb->local_ip);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cpuhog.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon17
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon35::__anon36
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline int32_t$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static const char *trapname(int trapno)$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static struct mpconf *$/;"	t
static	obj/kern/kernel.asm	/^static uint16_t *crt_buf;$/;"	l
static	obj/kern/kernel.asm	/^static uint16_t crt_pos;$/;"	l
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks[NCPU];$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static bool buse[QUEUE_SIZE];$/;"	l
static	obj/net/ns.asm	/^static envid_t input_envid;$/;"	l
static	obj/net/ns.asm	/^static envid_t output_envid;$/;"	l
static	obj/net/ns.asm	/^static envid_t timer_envid;$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline int32_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	l
static	obj/net/ns.asm	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	l
static	obj/net/ns.asm	/^static uint8_t *mptr;$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static inline int32_t$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static inline int32_t$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static inline int32_t$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/cpuhog.asm	/^static inline int32_t$/;"	l
static	obj/user/cpuhog.asm	/^static int$/;"	l
static	obj/user/cpuhog.asm	/^static long long$/;"	l
static	obj/user/cpuhog.asm	/^static ssize_t$/;"	l
static	obj/user/cpuhog.asm	/^static unsigned long long$/;"	l
static	obj/user/cpuhog.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static inline int32_t$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static inline int32_t$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static inline int32_t$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static const char*$/;"	l
static	obj/user/httpd.asm	/^static inline int32_t$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	l
static	obj/user/httpd.asm	/^static uint8_t *mptr;$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static inline int32_t$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static inline int32_t$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static inline int32_t$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static inline int32_t$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static inline int32_t$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static inline int32_t$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static inline int32_t$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline int32_t$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static inline int32_t$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline int32_t$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static inline int32_t$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static inline int32_t$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static inline int32_t$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static inline int32_t$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static inline int32_t$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static inline int32_t$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^	uint8_t status;$/;"	m	struct:rx_desc
status	kern/e1000.h	/^	uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_e1000_receive	kern/syscall.c	/^sys_e1000_receive(char *pkt, size_t *length)$/;"	f	file:
sys_e1000_receive	lib/syscall.c	/^sys_e1000_receive(char *pkt, size_t *length)$/;"	f
sys_e1000_transmit	kern/syscall.c	/^sys_e1000_transmit(char *pkt, size_t length)$/;"	f	file:
sys_e1000_transmit	lib/syscall.c	/^sys_e1000_transmit(char *pkt, size_t length)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid, int retcode)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid, int retcode)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon38	typeref:struct:netconn::__anon38::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_page	obj/kern/kernel.asm	/^		test_page = pgdir_walk(env->env_pgdir, (void *) current, false);$/;"	d
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cpuhog.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon20	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks[NCPU];$/;"	v	file:
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(uint32_t cpunum)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(uint32_t cpunum)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon31	typeref:struct:tcpip_msg::__anon31::__anon34
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_desc	kern/e1000.h	/^struct tx_desc$/;"	s
tx_pkts	kern/e1000.c	/^struct packet tx_pkts[NTXDESC];$/;"	v	typeref:struct:packet
txq	kern/e1000.c	/^struct tx_desc txq[NTXDESC] __attribute__ ((aligned (16)));$/;"	v	typeref:struct:tx_desc
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
type	obj/user/httpd.asm	/^	type = mime_type(req->url);$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon38	typeref:struct:netconn::__anon38::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cpuhog.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/cpuhog.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^        useg = seg;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^    useg = seg;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = (uintptr_t) current;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = (uintptr_t) va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon18	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cpuhog.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon10
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void *mpentry_kstack;$/;"	l
void	obj/kern/kernel.asm	/^void irq_error();$/;"	l
void	obj/kern/kernel.asm	/^void irq_ide();$/;"	l
void	obj/kern/kernel.asm	/^void irq_spurious();$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/cpuhog.asm	/^void *$/;"	l
void	obj/user/cpuhog.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cpuhog.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon35::__anon37
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *network_regs;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon21	typeref:struct:api_msg_msg::__anon21::__anon25
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon18::__anon19	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/cpuhog.asm	/^				width = 0;$/;"	d
width	obj/user/cpuhog.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cpuhog.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon43	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
